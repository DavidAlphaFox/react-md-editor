{"version":3,"file":"static/js/mermaid-vendor.db6a92ce.js","mappings":"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,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAA4H,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,KAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,GAAAA,GAAAA,GAAAA,GAAAA,IAAAC,EAAAA,CAAAA,EAAAA,IAAAC,EAAAA,CAAAA,EAAAA,KAAAC,EAAAA,CAAAA,EAAAA,KAAAC,EAAAA,CAAAA,EAAAA,KAAAC,EAAAA,CAAAA,EAAAA,KAAAC,EAAAA,CAAAA,EAAAA,KAAAC,EAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,IAAAC,GAAAA,CAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,IAAAC,GAAAA,CAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,KAAAC,GAAAA,CAAAA,GAAAA,GAAAA,IAAAC,GAAAA,CAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,KAAAC,GAAAA,CAAAA,EAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,KAAAC,GAAAA,CAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,KAAAC,GAAAA,CAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,KAAAC,GAAAA,CAAAA,GAAAA,GAAAA,GAAAA,IAAAC,GAAAA,CAAAA,GAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,EAAAA,KAAAC,GAAAA,CAAAA,GAAA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","sources":["../mermaid/webpack/universalModuleDefinition","../mermaid/src/diagrams/class/parser/classDiagram.jison","../mermaid/src/diagrams/er/parser/erDiagram.jison","../mermaid/src/diagrams/flowchart/parser/flow.jison","../mermaid/src/diagrams/gantt/parser/gantt.jison","../mermaid/src/diagrams/git/parser/gitGraph.jison","../mermaid/src/diagrams/info/parser/info.jison","../mermaid/src/diagrams/pie/parser/pie.jison","../mermaid/src/diagrams/requirement/parser/requirementDiagram.jison","../mermaid/src/diagrams/sequence/parser/sequenceDiagram.jison","../mermaid/src/diagrams/state/parser/stateDiagram.jison","../mermaid/src/diagrams/user-journey/parser/journey.jison","../mermaid/src/accessibility.js","../mermaid/src/commonDb.js","../mermaid/src/config.js","../mermaid/src/dagre-wrapper/clusters.js","../mermaid/src/dagre-wrapper/createLabel.js","../mermaid/src/dagre-wrapper/edges.js","../mermaid/src/dagre-wrapper/index.js","../mermaid/src/dagre-wrapper/intersect/index.js","../mermaid/src/dagre-wrapper/intersect/intersect-circle.js","../mermaid/src/dagre-wrapper/intersect/intersect-ellipse.js","../mermaid/src/dagre-wrapper/intersect/intersect-line.js","../mermaid/src/dagre-wrapper/intersect/intersect-node.js","../mermaid/src/dagre-wrapper/intersect/intersect-polygon.js","../mermaid/src/dagre-wrapper/intersect/intersect-rect.js","../mermaid/src/dagre-wrapper/markers.js","../mermaid/src/dagre-wrapper/mermaid-graphlib.js","../mermaid/src/dagre-wrapper/nodes.js","../mermaid/src/dagre-wrapper/shapes/note.js","../mermaid/src/dagre-wrapper/shapes/util.js","../mermaid/src/defaultConfig.js","../mermaid/src/diagrams/class/classDb.js","../mermaid/src/diagrams/class/classRenderer-v2.js","../mermaid/src/diagrams/class/classRenderer.js","../mermaid/src/diagrams/class/styles.js","../mermaid/src/diagrams/class/svgDraw.js","../mermaid/src/diagrams/common/common.js","../mermaid/src/diagrams/er/erDb.js","../mermaid/src/diagrams/er/erMarkers.js","../mermaid/src/diagrams/er/erRenderer.js","../mermaid/src/diagrams/er/styles.js","../mermaid/src/diagrams/flowchart/flowChartShapes.js","../mermaid/src/diagrams/flowchart/flowDb.js","../mermaid/src/diagrams/flowchart/flowRenderer-v2.js","../mermaid/src/diagrams/flowchart/flowRenderer.js","../mermaid/src/diagrams/flowchart/styles.js","../mermaid/src/diagrams/gantt/ganttDb.js","../mermaid/src/diagrams/gantt/ganttRenderer.js","../mermaid/src/diagrams/gantt/styles.js","../mermaid/src/diagrams/git/gitGraphAst.js","../mermaid/src/diagrams/git/gitGraphRenderer.js","../mermaid/src/diagrams/git/styles.js","../mermaid/src/diagrams/info/infoDb.js","../mermaid/src/diagrams/info/infoRenderer.js","../mermaid/src/diagrams/info/styles.js","../mermaid/src/diagrams/pie/pieDb.js","../mermaid/src/diagrams/pie/pieRenderer.js","../mermaid/src/diagrams/pie/styles.js","../mermaid/src/diagrams/requirement/requirementDb.js","../mermaid/src/diagrams/requirement/requirementMarkers.js","../mermaid/src/diagrams/requirement/requirementRenderer.js","../mermaid/src/diagrams/requirement/styles.js","../mermaid/src/diagrams/sequence/sequenceDb.js","../mermaid/src/diagrams/sequence/sequenceRenderer.js","../mermaid/src/diagrams/sequence/styles.js","../mermaid/src/diagrams/sequence/svgDraw.js","../mermaid/src/diagrams/state/id-cache.js","../mermaid/src/diagrams/state/shapes.js","../mermaid/src/diagrams/state/stateDb.js","../mermaid/src/diagrams/state/stateRenderer-v2.js","../mermaid/src/diagrams/state/stateRenderer.js","../mermaid/src/diagrams/state/styles.js","../mermaid/src/diagrams/user-journey/journeyDb.js","../mermaid/src/diagrams/user-journey/journeyRenderer.js","../mermaid/src/diagrams/user-journey/styles.js","../mermaid/src/diagrams/user-journey/svgDraw.js","../mermaid/src/errorRenderer.js","../mermaid/src/interactionDb.js","../mermaid/src/logger.js","../mermaid/src/mermaid.js","../mermaid/src/mermaidAPI.js","../mermaid/src/styles.js","../mermaid/src/themes/index.js","../mermaid/src/themes/theme-base.js","../mermaid/src/themes/theme-dark.js","../mermaid/src/themes/theme-default.js","../mermaid/src/themes/theme-forest.js","../mermaid/src/themes/theme-helpers.js","../mermaid/src/themes/theme-neutral.js","../mermaid/src/utils.js","../mermaid/node_modules/path-browserify/index.js","../mermaid/external commonjs \"@braintree/sanitize-url\"","../mermaid/external commonjs \"d3\"","../mermaid/external commonjs \"dagre\"","../mermaid/external commonjs \"dagre-d3\"","../mermaid/external commonjs \"dagre-d3/lib/label/add-html-label.js\"","../mermaid/external commonjs \"dompurify\"","../mermaid/external commonjs \"graphlib\"","../mermaid/external commonjs \"khroma\"","../mermaid/external commonjs \"moment-mini\"","../mermaid/external commonjs \"stylis\"","../mermaid/webpack/bootstrap","../mermaid/webpack/runtime/compat get default export","../mermaid/webpack/runtime/define property getters","../mermaid/webpack/runtime/hasOwnProperty shorthand","../mermaid/webpack/runtime/make namespace object","../mermaid/webpack/runtime/node module decorator","../mermaid/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mermaid\"] = factory();\n\telse\n\t\troot[\"mermaid\"] = factory();\n})(typeof self !== \"undefined\" ? self : this, () => {\nreturn ","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,3],$V1=[1,7],$V2=[1,8],$V3=[1,9],$V4=[1,10],$V5=[1,13],$V6=[1,12],$V7=[1,16,25],$V8=[1,20],$V9=[1,31],$Va=[1,32],$Vb=[1,33],$Vc=[1,35],$Vd=[1,38],$Ve=[1,36],$Vf=[1,37],$Vg=[1,39],$Vh=[1,40],$Vi=[1,41],$Vj=[1,42],$Vk=[1,45],$Vl=[1,46],$Vm=[1,47],$Vn=[1,48],$Vo=[16,25],$Vp=[1,62],$Vq=[1,63],$Vr=[1,64],$Vs=[1,65],$Vt=[1,66],$Vu=[1,67],$Vv=[16,25,32,44,45,53,56,57,58,59,60,61,66,68],$Vw=[16,25,30,32,44,45,49,53,56,57,58,59,60,61,66,68,83,84,85,86],$Vx=[5,8,9,10,11,16,19,23,25],$Vy=[53,83,84,85,86],$Vz=[53,60,61,83,84,85,86],$VA=[53,56,57,58,59,83,84,85,86],$VB=[16,25,32],$VC=[1,99];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"mermaidDoc\":4,\"statments\":5,\"direction\":6,\"directive\":7,\"direction_tb\":8,\"direction_bt\":9,\"direction_rl\":10,\"direction_lr\":11,\"graphConfig\":12,\"openDirective\":13,\"typeDirective\":14,\"closeDirective\":15,\"NEWLINE\":16,\":\":17,\"argDirective\":18,\"open_directive\":19,\"type_directive\":20,\"arg_directive\":21,\"close_directive\":22,\"CLASS_DIAGRAM\":23,\"statements\":24,\"EOF\":25,\"statement\":26,\"className\":27,\"alphaNumToken\":28,\"classLiteralName\":29,\"GENERICTYPE\":30,\"relationStatement\":31,\"LABEL\":32,\"classStatement\":33,\"methodStatement\":34,\"annotationStatement\":35,\"clickStatement\":36,\"cssClassStatement\":37,\"acc_title\":38,\"acc_title_value\":39,\"acc_descr\":40,\"acc_descr_value\":41,\"acc_descr_multiline_value\":42,\"CLASS\":43,\"STYLE_SEPARATOR\":44,\"STRUCT_START\":45,\"members\":46,\"STRUCT_STOP\":47,\"ANNOTATION_START\":48,\"ANNOTATION_END\":49,\"MEMBER\":50,\"SEPARATOR\":51,\"relation\":52,\"STR\":53,\"relationType\":54,\"lineType\":55,\"AGGREGATION\":56,\"EXTENSION\":57,\"COMPOSITION\":58,\"DEPENDENCY\":59,\"LINE\":60,\"DOTTED_LINE\":61,\"CALLBACK\":62,\"LINK\":63,\"LINK_TARGET\":64,\"CLICK\":65,\"CALLBACK_NAME\":66,\"CALLBACK_ARGS\":67,\"HREF\":68,\"CSSCLASS\":69,\"commentToken\":70,\"textToken\":71,\"graphCodeTokens\":72,\"textNoTagsToken\":73,\"TAGSTART\":74,\"TAGEND\":75,\"==\":76,\"--\":77,\"PCT\":78,\"DEFAULT\":79,\"SPACE\":80,\"MINUS\":81,\"keywords\":82,\"UNICODE_TEXT\":83,\"NUM\":84,\"ALPHA\":85,\"BQUOTE_STR\":86,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"statments\",8:\"direction_tb\",9:\"direction_bt\",10:\"direction_rl\",11:\"direction_lr\",16:\"NEWLINE\",17:\":\",19:\"open_directive\",20:\"type_directive\",21:\"arg_directive\",22:\"close_directive\",23:\"CLASS_DIAGRAM\",25:\"EOF\",30:\"GENERICTYPE\",32:\"LABEL\",38:\"acc_title\",39:\"acc_title_value\",40:\"acc_descr\",41:\"acc_descr_value\",42:\"acc_descr_multiline_value\",43:\"CLASS\",44:\"STYLE_SEPARATOR\",45:\"STRUCT_START\",47:\"STRUCT_STOP\",48:\"ANNOTATION_START\",49:\"ANNOTATION_END\",50:\"MEMBER\",51:\"SEPARATOR\",53:\"STR\",56:\"AGGREGATION\",57:\"EXTENSION\",58:\"COMPOSITION\",59:\"DEPENDENCY\",60:\"LINE\",61:\"DOTTED_LINE\",62:\"CALLBACK\",63:\"LINK\",64:\"LINK_TARGET\",65:\"CLICK\",66:\"CALLBACK_NAME\",67:\"CALLBACK_ARGS\",68:\"HREF\",69:\"CSSCLASS\",72:\"graphCodeTokens\",74:\"TAGSTART\",75:\"TAGEND\",76:\"==\",77:\"--\",78:\"PCT\",79:\"DEFAULT\",80:\"SPACE\",81:\"MINUS\",82:\"keywords\",83:\"UNICODE_TEXT\",84:\"NUM\",85:\"ALPHA\",86:\"BQUOTE_STR\"},\nproductions_: [0,[3,1],[3,1],[3,1],[3,2],[6,1],[6,1],[6,1],[6,1],[4,1],[7,4],[7,6],[13,1],[14,1],[18,1],[15,1],[12,4],[24,1],[24,2],[24,3],[27,1],[27,1],[27,2],[27,2],[27,2],[26,1],[26,2],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,2],[26,2],[26,1],[33,2],[33,4],[33,5],[33,7],[35,4],[46,1],[46,2],[34,1],[34,2],[34,1],[34,1],[31,3],[31,4],[31,4],[31,5],[52,3],[52,2],[52,2],[52,1],[54,1],[54,1],[54,1],[54,1],[55,1],[55,1],[36,3],[36,4],[36,3],[36,4],[36,4],[36,5],[36,3],[36,4],[36,4],[36,5],[36,3],[36,4],[36,4],[36,5],[37,3],[70,1],[70,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[71,1],[73,1],[73,1],[73,1],[73,1],[28,1],[28,1],[28,1],[29,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 5:\n yy.setDirection('TB');\nbreak;\ncase 6:\n yy.setDirection('BT');\nbreak;\ncase 7:\n yy.setDirection('RL');\nbreak;\ncase 8:\n yy.setDirection('LR');\nbreak;\ncase 12:\n yy.parseDirective('%%{', 'open_directive'); \nbreak;\ncase 13:\n yy.parseDirective($$[$0], 'type_directive'); \nbreak;\ncase 14:\n $$[$0] = $$[$0].trim().replace(/'/g, '\"'); yy.parseDirective($$[$0], 'arg_directive'); \nbreak;\ncase 15:\n yy.parseDirective('}%%', 'close_directive', 'class'); \nbreak;\ncase 20: case 21:\n this.$=$$[$0]; \nbreak;\ncase 22:\n this.$=$$[$0-1]+$$[$0]; \nbreak;\ncase 23: case 24:\n this.$=$$[$0-1]+'~'+$$[$0]; \nbreak;\ncase 25:\n yy.addRelation($$[$0]); \nbreak;\ncase 26:\n $$[$0-1].title =  yy.cleanupLabel($$[$0]); yy.addRelation($$[$0-1]);        \nbreak;\ncase 34:\n this.$=$$[$0].trim();yy.setTitle(this.$); \nbreak;\ncase 35: case 36:\n this.$=$$[$0].trim();yy.setAccDescription(this.$); \nbreak;\ncase 37:\nyy.addClass($$[$0]);\nbreak;\ncase 38:\nyy.addClass($$[$0-2]);yy.setCssClass($$[$0-2], $$[$0]);\nbreak;\ncase 39:\n/*console.log($$[$0-3],JSON.stringify($$[$0-1]));*/yy.addClass($$[$0-3]);yy.addMembers($$[$0-3],$$[$0-1]);\nbreak;\ncase 40:\nyy.addClass($$[$0-5]);yy.setCssClass($$[$0-5], $$[$0-3]);yy.addMembers($$[$0-5],$$[$0-1]);\nbreak;\ncase 41:\n yy.addAnnotation($$[$0],$$[$0-2]); \nbreak;\ncase 42:\n this.$ = [$$[$0]]; \nbreak;\ncase 43:\n $$[$0].push($$[$0-1]);this.$=$$[$0];\nbreak;\ncase 44:\n/*console.log('Rel found',$$[$0]);*/\nbreak;\ncase 45:\nyy.addMember($$[$0-1],yy.cleanupLabel($$[$0]));\nbreak;\ncase 46:\n/*console.warn('Member',$$[$0]);*/\nbreak;\ncase 47:\n/*console.log('sep found',$$[$0]);*/\nbreak;\ncase 48:\n this.$ = {'id1':$$[$0-2],'id2':$$[$0], relation:$$[$0-1], relationTitle1:'none', relationTitle2:'none'}; \nbreak;\ncase 49:\n this.$ = {id1:$$[$0-3], id2:$$[$0], relation:$$[$0-1], relationTitle1:$$[$0-2], relationTitle2:'none'}\nbreak;\ncase 50:\n this.$ = {id1:$$[$0-3], id2:$$[$0], relation:$$[$0-2], relationTitle1:'none', relationTitle2:$$[$0-1]}; \nbreak;\ncase 51:\n this.$ = {id1:$$[$0-4], id2:$$[$0], relation:$$[$0-2], relationTitle1:$$[$0-3], relationTitle2:$$[$0-1]} \nbreak;\ncase 52:\n this.$={type1:$$[$0-2],type2:$$[$0],lineType:$$[$0-1]}; \nbreak;\ncase 53:\n this.$={type1:'none',type2:$$[$0],lineType:$$[$0-1]}; \nbreak;\ncase 54:\n this.$={type1:$$[$0-1],type2:'none',lineType:$$[$0]}; \nbreak;\ncase 55:\n this.$={type1:'none',type2:'none',lineType:$$[$0]}; \nbreak;\ncase 56:\n this.$=yy.relationType.AGGREGATION;\nbreak;\ncase 57:\n this.$=yy.relationType.EXTENSION;\nbreak;\ncase 58:\n this.$=yy.relationType.COMPOSITION;\nbreak;\ncase 59:\n this.$=yy.relationType.DEPENDENCY;\nbreak;\ncase 60:\nthis.$=yy.lineType.LINE;\nbreak;\ncase 61:\nthis.$=yy.lineType.DOTTED_LINE;\nbreak;\ncase 62: case 68:\nthis.$ = $$[$0-2];yy.setClickEvent($$[$0-1], $$[$0]);\nbreak;\ncase 63: case 69:\nthis.$ = $$[$0-3];yy.setClickEvent($$[$0-2], $$[$0-1]);yy.setTooltip($$[$0-2], $$[$0]);\nbreak;\ncase 64: case 72:\nthis.$ = $$[$0-2];yy.setLink($$[$0-1], $$[$0]);\nbreak;\ncase 65:\nthis.$ = $$[$0-3];yy.setLink($$[$0-2], $$[$0-1],$$[$0]);\nbreak;\ncase 66: case 74:\nthis.$ = $$[$0-3];yy.setLink($$[$0-2], $$[$0-1]);yy.setTooltip($$[$0-2], $$[$0]);\nbreak;\ncase 67: case 75:\nthis.$ = $$[$0-4];yy.setLink($$[$0-3], $$[$0-2], $$[$0]);yy.setTooltip($$[$0-3], $$[$0-1]);\nbreak;\ncase 70:\nthis.$ = $$[$0-3];yy.setClickEvent($$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 71:\nthis.$ = $$[$0-4];yy.setClickEvent($$[$0-3], $$[$0-2], $$[$0-1]);yy.setTooltip($$[$0-3], $$[$0]);\nbreak;\ncase 73:\nthis.$ = $$[$0-3];yy.setLink($$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 76:\nyy.setCssClass($$[$0-1], $$[$0]);\nbreak;\n}\n},\ntable: [{3:1,4:2,5:$V0,6:4,7:5,8:$V1,9:$V2,10:$V3,11:$V4,12:6,13:11,19:$V5,23:$V6},{1:[3]},{1:[2,1]},{1:[2,2]},{1:[2,3]},{3:14,4:2,5:$V0,6:4,7:5,8:$V1,9:$V2,10:$V3,11:$V4,12:6,13:11,19:$V5,23:$V6},{1:[2,9]},o($V7,[2,5]),o($V7,[2,6]),o($V7,[2,7]),o($V7,[2,8]),{14:15,20:[1,16]},{16:[1,17]},{20:[2,12]},{1:[2,4]},{15:18,17:[1,19],22:$V8},o([17,22],[2,13]),{6:30,7:29,8:$V1,9:$V2,10:$V3,11:$V4,13:11,19:$V5,24:21,26:22,27:34,28:43,29:44,31:23,33:24,34:25,35:26,36:27,37:28,38:$V9,40:$Va,42:$Vb,43:$Vc,48:$Vd,50:$Ve,51:$Vf,62:$Vg,63:$Vh,65:$Vi,69:$Vj,83:$Vk,84:$Vl,85:$Vm,86:$Vn},{16:[1,49]},{18:50,21:[1,51]},{16:[2,15]},{25:[1,52]},{16:[1,53],25:[2,17]},o($Vo,[2,25],{32:[1,54]}),o($Vo,[2,27]),o($Vo,[2,28]),o($Vo,[2,29]),o($Vo,[2,30]),o($Vo,[2,31]),o($Vo,[2,32]),o($Vo,[2,33]),{39:[1,55]},{41:[1,56]},o($Vo,[2,36]),o($Vo,[2,44],{52:57,54:60,55:61,32:[1,59],53:[1,58],56:$Vp,57:$Vq,58:$Vr,59:$Vs,60:$Vt,61:$Vu}),{27:68,28:43,29:44,83:$Vk,84:$Vl,85:$Vm,86:$Vn},o($Vo,[2,46]),o($Vo,[2,47]),{28:69,83:$Vk,84:$Vl,85:$Vm},{27:70,28:43,29:44,83:$Vk,84:$Vl,85:$Vm,86:$Vn},{27:71,28:43,29:44,83:$Vk,84:$Vl,85:$Vm,86:$Vn},{27:72,28:43,29:44,83:$Vk,84:$Vl,85:$Vm,86:$Vn},{53:[1,73]},o($Vv,[2,20],{28:43,29:44,27:74,30:[1,75],83:$Vk,84:$Vl,85:$Vm,86:$Vn}),o($Vv,[2,21],{30:[1,76]}),o($Vw,[2,90]),o($Vw,[2,91]),o($Vw,[2,92]),o([16,25,30,32,44,45,53,56,57,58,59,60,61,66,68],[2,93]),o($Vx,[2,10]),{15:77,22:$V8},{22:[2,14]},{1:[2,16]},{6:30,7:29,8:$V1,9:$V2,10:$V3,11:$V4,13:11,19:$V5,24:78,25:[2,18],26:22,27:34,28:43,29:44,31:23,33:24,34:25,35:26,36:27,37:28,38:$V9,40:$Va,42:$Vb,43:$Vc,48:$Vd,50:$Ve,51:$Vf,62:$Vg,63:$Vh,65:$Vi,69:$Vj,83:$Vk,84:$Vl,85:$Vm,86:$Vn},o($Vo,[2,26]),o($Vo,[2,34]),o($Vo,[2,35]),{27:79,28:43,29:44,53:[1,80],83:$Vk,84:$Vl,85:$Vm,86:$Vn},{52:81,54:60,55:61,56:$Vp,57:$Vq,58:$Vr,59:$Vs,60:$Vt,61:$Vu},o($Vo,[2,45]),{55:82,60:$Vt,61:$Vu},o($Vy,[2,55],{54:83,56:$Vp,57:$Vq,58:$Vr,59:$Vs}),o($Vz,[2,56]),o($Vz,[2,57]),o($Vz,[2,58]),o($Vz,[2,59]),o($VA,[2,60]),o($VA,[2,61]),o($Vo,[2,37],{44:[1,84],45:[1,85]}),{49:[1,86]},{53:[1,87]},{53:[1,88]},{66:[1,89],68:[1,90]},{28:91,83:$Vk,84:$Vl,85:$Vm},o($Vv,[2,22]),o($Vv,[2,23]),o($Vv,[2,24]),{16:[1,92]},{25:[2,19]},o($VB,[2,48]),{27:93,28:43,29:44,83:$Vk,84:$Vl,85:$Vm,86:$Vn},{27:94,28:43,29:44,53:[1,95],83:$Vk,84:$Vl,85:$Vm,86:$Vn},o($Vy,[2,54],{54:96,56:$Vp,57:$Vq,58:$Vr,59:$Vs}),o($Vy,[2,53]),{28:97,83:$Vk,84:$Vl,85:$Vm},{46:98,50:$VC},{27:100,28:43,29:44,83:$Vk,84:$Vl,85:$Vm,86:$Vn},o($Vo,[2,62],{53:[1,101]}),o($Vo,[2,64],{53:[1,103],64:[1,102]}),o($Vo,[2,68],{53:[1,104],67:[1,105]}),o($Vo,[2,72],{53:[1,107],64:[1,106]}),o($Vo,[2,76]),o($Vx,[2,11]),o($VB,[2,50]),o($VB,[2,49]),{27:108,28:43,29:44,83:$Vk,84:$Vl,85:$Vm,86:$Vn},o($Vy,[2,52]),o($Vo,[2,38],{45:[1,109]}),{47:[1,110]},{46:111,47:[2,42],50:$VC},o($Vo,[2,41]),o($Vo,[2,63]),o($Vo,[2,65]),o($Vo,[2,66],{64:[1,112]}),o($Vo,[2,69]),o($Vo,[2,70],{53:[1,113]}),o($Vo,[2,73]),o($Vo,[2,74],{64:[1,114]}),o($VB,[2,51]),{46:115,50:$VC},o($Vo,[2,39]),{47:[2,43]},o($Vo,[2,67]),o($Vo,[2,71]),o($Vo,[2,75]),{47:[1,116]},o($Vo,[2,40])],\ndefaultActions: {2:[2,1],3:[2,2],4:[2,3],6:[2,9],13:[2,12],14:[2,4],20:[2,15],51:[2,14],52:[2,16],78:[2,19],111:[2,43]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n            function lex() {\n            var token;\n            token = tstack.pop() || lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                if (token instanceof Array) {\n                    tstack = token;\n                    token = tstack.pop();\n                }\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var errStr = '';\n            expected = [];\n            for (p in table[state]) {\n                if (this.terminals_[p] && p > TERROR) {\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\n                }\n            }\n            if (lexer.showPosition) {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n            } else {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n            }\n            this.parseError(errStr, {\n                text: lexer.match,\n                token: this.terminals_[symbol] || symbol,\n                line: lexer.yylineno,\n                loc: yyloc,\n                expected: expected\n            });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0: this.begin('open_directive'); return 19; \nbreak;\ncase 1:return 8;\nbreak;\ncase 2:return 9;\nbreak;\ncase 3:return 10;\nbreak;\ncase 4:return 11;\nbreak;\ncase 5: this.begin('type_directive'); return 20; \nbreak;\ncase 6: this.popState(); this.begin('arg_directive'); return 17; \nbreak;\ncase 7: this.popState(); this.popState(); return 22; \nbreak;\ncase 8:return 21;\nbreak;\ncase 9:/* skip comments */\nbreak;\ncase 10:/* skip comments */\nbreak;\ncase 11: this.begin(\"acc_title\");return 38; \nbreak;\ncase 12: this.popState(); return \"acc_title_value\"; \nbreak;\ncase 13: this.begin(\"acc_descr\");return 40; \nbreak;\ncase 14: this.popState(); return \"acc_descr_value\"; \nbreak;\ncase 15: this.begin(\"acc_descr_multiline\");\nbreak;\ncase 16: this.popState(); \nbreak;\ncase 17:return \"acc_descr_multiline_value\";\nbreak;\ncase 18:return 16;\nbreak;\ncase 19:/* skip whitespace */\nbreak;\ncase 20:return 23;\nbreak;\ncase 21:return 23;\nbreak;\ncase 22: this.begin(\"struct\"); /*console.log('Starting struct');*/ return 45;\nbreak;\ncase 23:return \"EOF_IN_STRUCT\";\nbreak;\ncase 24:return \"OPEN_IN_STRUCT\";\nbreak;\ncase 25: /*console.log('Ending struct');*/this.popState(); return 47;\nbreak;\ncase 26:/* nothing */\nbreak;\ncase 27: /*console.log('lex-member: ' + yy_.yytext);*/  return \"MEMBER\";\nbreak;\ncase 28:return 43;\nbreak;\ncase 29:return 69;\nbreak;\ncase 30:return 62;\nbreak;\ncase 31:return 63;\nbreak;\ncase 32:return 65;\nbreak;\ncase 33:return 48;\nbreak;\ncase 34:return 49;\nbreak;\ncase 35:this.begin(\"generic\");\nbreak;\ncase 36:this.popState();\nbreak;\ncase 37:return \"GENERICTYPE\";\nbreak;\ncase 38:this.begin(\"string\");\nbreak;\ncase 39:this.popState();\nbreak;\ncase 40:return \"STR\";\nbreak;\ncase 41:this.begin(\"bqstring\");\nbreak;\ncase 42:this.popState();\nbreak;\ncase 43:return \"BQUOTE_STR\";\nbreak;\ncase 44:this.begin(\"href\");\nbreak;\ncase 45:this.popState();\nbreak;\ncase 46:return 68;\nbreak;\ncase 47:this.begin(\"callback_name\");\nbreak;\ncase 48:this.popState();\nbreak;\ncase 49:this.popState(); this.begin(\"callback_args\");\nbreak;\ncase 50:return 66;\nbreak;\ncase 51:this.popState();\nbreak;\ncase 52:return 67;\nbreak;\ncase 53:return 64;\nbreak;\ncase 54:return 64;\nbreak;\ncase 55:return 64;\nbreak;\ncase 56:return 64;\nbreak;\ncase 57:return 57;\nbreak;\ncase 58:return 57;\nbreak;\ncase 59:return 59;\nbreak;\ncase 60:return 59;\nbreak;\ncase 61:return 58;\nbreak;\ncase 62:return 56;\nbreak;\ncase 63:return 60;\nbreak;\ncase 64:return 61;\nbreak;\ncase 65:return 32;\nbreak;\ncase 66:return 44;\nbreak;\ncase 67:return 81;\nbreak;\ncase 68:return 'DOT';\nbreak;\ncase 69:return 'PLUS';\nbreak;\ncase 70:return 78;\nbreak;\ncase 71:return 'EQUALS';\nbreak;\ncase 72:return 'EQUALS';\nbreak;\ncase 73:return 85;\nbreak;\ncase 74:return 'PUNCTUATION';\nbreak;\ncase 75:return 84;\nbreak;\ncase 76:return 83;\nbreak;\ncase 77:return 80;\nbreak;\ncase 78:return 25;\nbreak;\n}\n},\nrules: [/^(?:%%\\{)/,/^(?:.*direction\\s+TB[^\\n]*)/,/^(?:.*direction\\s+BT[^\\n]*)/,/^(?:.*direction\\s+RL[^\\n]*)/,/^(?:.*direction\\s+LR[^\\n]*)/,/^(?:((?:(?!\\}%%)[^:.])*))/,/^(?::)/,/^(?:\\}%%)/,/^(?:((?:(?!\\}%%).|\\n)*))/,/^(?:%%(?!\\{)*[^\\n]*(\\r?\\n?)+)/,/^(?:%%[^\\n]*(\\r?\\n)*)/,/^(?:accTitle\\s*:\\s*)/,/^(?:(?!\\n||)*[^\\n]*)/,/^(?:accDescr\\s*:\\s*)/,/^(?:(?!\\n||)*[^\\n]*)/,/^(?:accDescr\\s*\\{\\s*)/,/^(?:[\\}])/,/^(?:[^\\}]*)/,/^(?:\\s*(\\r?\\n)+)/,/^(?:\\s+)/,/^(?:classDiagram-v2\\b)/,/^(?:classDiagram\\b)/,/^(?:[{])/,/^(?:$)/,/^(?:[{])/,/^(?:[}])/,/^(?:[\\n])/,/^(?:[^{}\\n]*)/,/^(?:class\\b)/,/^(?:cssClass\\b)/,/^(?:callback\\b)/,/^(?:link\\b)/,/^(?:click\\b)/,/^(?:<<)/,/^(?:>>)/,/^(?:[~])/,/^(?:[~])/,/^(?:[^~]*)/,/^(?:[\"])/,/^(?:[\"])/,/^(?:[^\"]*)/,/^(?:[`])/,/^(?:[`])/,/^(?:[^`]+)/,/^(?:href[\\s]+[\"])/,/^(?:[\"])/,/^(?:[^\"]*)/,/^(?:call[\\s]+)/,/^(?:\\([\\s]*\\))/,/^(?:\\()/,/^(?:[^(]*)/,/^(?:\\))/,/^(?:[^)]*)/,/^(?:_self\\b)/,/^(?:_blank\\b)/,/^(?:_parent\\b)/,/^(?:_top\\b)/,/^(?:\\s*<\\|)/,/^(?:\\s*\\|>)/,/^(?:\\s*>)/,/^(?:\\s*<)/,/^(?:\\s*\\*)/,/^(?:\\s*o\\b)/,/^(?:--)/,/^(?:\\.\\.)/,/^(?::{1}[^:\\n;]+)/,/^(?::{3})/,/^(?:-)/,/^(?:\\.)/,/^(?:\\+)/,/^(?:%)/,/^(?:=)/,/^(?:=)/,/^(?:\\w+)/,/^(?:[!\"#$%&'*+,-.`?\\\\/])/,/^(?:[0-9]+)/,/^(?:[\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6]|[\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377]|[\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5]|[\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA]|[\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE]|[\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA]|[\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0]|[\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977]|[\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2]|[\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A]|[\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39]|[\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8]|[\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C]|[\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C]|[\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99]|[\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0]|[\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D]|[\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3]|[\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10]|[\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1]|[\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81]|[\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3]|[\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6]|[\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A]|[\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081]|[\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D]|[\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0]|[\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310]|[\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C]|[\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711]|[\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7]|[\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C]|[\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16]|[\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF]|[\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC]|[\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D]|[\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D]|[\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3]|[\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F]|[\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128]|[\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184]|[\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3]|[\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6]|[\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE]|[\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C]|[\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D]|[\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC]|[\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B]|[\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788]|[\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805]|[\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB]|[\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28]|[\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5]|[\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4]|[\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E]|[\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D]|[\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36]|[\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D]|[\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC]|[\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF]|[\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC])/,/^(?:\\s)/,/^(?:$)/],\nconditions: {\"acc_descr_multiline\":{\"rules\":[16,17],\"inclusive\":false},\"acc_descr\":{\"rules\":[14],\"inclusive\":false},\"acc_title\":{\"rules\":[12],\"inclusive\":false},\"arg_directive\":{\"rules\":[7,8],\"inclusive\":false},\"type_directive\":{\"rules\":[6,7],\"inclusive\":false},\"open_directive\":{\"rules\":[5],\"inclusive\":false},\"callback_args\":{\"rules\":[51,52],\"inclusive\":false},\"callback_name\":{\"rules\":[48,49,50],\"inclusive\":false},\"href\":{\"rules\":[45,46],\"inclusive\":false},\"struct\":{\"rules\":[23,24,25,26,27],\"inclusive\":false},\"generic\":{\"rules\":[36,37],\"inclusive\":false},\"bqstring\":{\"rules\":[42,43],\"inclusive\":false},\"string\":{\"rules\":[39,40],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,4,9,10,11,13,15,18,19,20,21,22,28,29,30,31,32,33,34,35,38,41,44,47,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,2],$V1=[1,5],$V2=[6,9,11,23,25,27,29,30,48],$V3=[1,17],$V4=[1,18],$V5=[1,19],$V6=[1,20],$V7=[1,21],$V8=[1,24],$V9=[1,29],$Va=[1,30],$Vb=[1,31],$Vc=[1,32],$Vd=[1,44],$Ve=[30,45,46],$Vf=[4,6,9,11,23,25,27,29,30,48],$Vg=[41,42,43,44],$Vh=[22,36],$Vi=[1,62];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"ER_DIAGRAM\":4,\"document\":5,\"EOF\":6,\"directive\":7,\"line\":8,\"SPACE\":9,\"statement\":10,\"NEWLINE\":11,\"openDirective\":12,\"typeDirective\":13,\"closeDirective\":14,\":\":15,\"argDirective\":16,\"entityName\":17,\"relSpec\":18,\"role\":19,\"BLOCK_START\":20,\"attributes\":21,\"BLOCK_STOP\":22,\"title\":23,\"title_value\":24,\"acc_title\":25,\"acc_title_value\":26,\"acc_descr\":27,\"acc_descr_value\":28,\"acc_descr_multiline_value\":29,\"ALPHANUM\":30,\"attribute\":31,\"attributeType\":32,\"attributeName\":33,\"attributeKeyType\":34,\"attributeComment\":35,\"ATTRIBUTE_WORD\":36,\"ATTRIBUTE_KEY\":37,\"COMMENT\":38,\"cardinality\":39,\"relType\":40,\"ZERO_OR_ONE\":41,\"ZERO_OR_MORE\":42,\"ONE_OR_MORE\":43,\"ONLY_ONE\":44,\"NON_IDENTIFYING\":45,\"IDENTIFYING\":46,\"WORD\":47,\"open_directive\":48,\"type_directive\":49,\"arg_directive\":50,\"close_directive\":51,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"ER_DIAGRAM\",6:\"EOF\",9:\"SPACE\",11:\"NEWLINE\",15:\":\",20:\"BLOCK_START\",22:\"BLOCK_STOP\",23:\"title\",24:\"title_value\",25:\"acc_title\",26:\"acc_title_value\",27:\"acc_descr\",28:\"acc_descr_value\",29:\"acc_descr_multiline_value\",30:\"ALPHANUM\",36:\"ATTRIBUTE_WORD\",37:\"ATTRIBUTE_KEY\",38:\"COMMENT\",41:\"ZERO_OR_ONE\",42:\"ZERO_OR_MORE\",43:\"ONE_OR_MORE\",44:\"ONLY_ONE\",45:\"NON_IDENTIFYING\",46:\"IDENTIFYING\",47:\"WORD\",48:\"open_directive\",49:\"type_directive\",50:\"arg_directive\",51:\"close_directive\"},\nproductions_: [0,[3,3],[3,2],[5,0],[5,2],[8,2],[8,1],[8,1],[8,1],[7,4],[7,6],[10,1],[10,5],[10,4],[10,3],[10,1],[10,2],[10,2],[10,2],[10,1],[17,1],[21,1],[21,2],[31,2],[31,3],[31,3],[31,4],[32,1],[33,1],[34,1],[35,1],[18,3],[39,1],[39,1],[39,1],[39,1],[40,1],[40,1],[19,1],[19,1],[12,1],[13,1],[16,1],[14,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n /*console.log('finished parsing');*/ \nbreak;\ncase 3:\n this.$ = [] \nbreak;\ncase 4:\n$$[$0-1].push($$[$0]);this.$ = $$[$0-1]\nbreak;\ncase 5: case 6:\n this.$ = $$[$0] \nbreak;\ncase 7: case 8:\n this.$=[];\nbreak;\ncase 12:\n\n          yy.addEntity($$[$0-4]);\n          yy.addEntity($$[$0-2]);\n          yy.addRelationship($$[$0-4], $$[$0], $$[$0-2], $$[$0-3]);\n          /*console.log($$[$0-4] + $$[$0-3] + $$[$0-2] + ':' + $$[$0]);*/\n      \nbreak;\ncase 13:\n\n          /* console.log('detected block'); */\n          yy.addEntity($$[$0-3]);\n          yy.addAttributes($$[$0-3], $$[$0-1]);\n          /* console.log('handled block'); */\n      \nbreak;\ncase 14:\n yy.addEntity($$[$0-2]); \nbreak;\ncase 15:\n yy.addEntity($$[$0]); \nbreak;\ncase 16: case 17:\n this.$=$$[$0].trim();yy.setTitle(this.$); \nbreak;\ncase 18: case 19:\n this.$=$$[$0].trim();yy.setAccDescription(this.$); \nbreak;\ncase 20:\n this.$ = $$[$0]; /*console.log('Entity: ' + $$[$0]);*/ \nbreak;\ncase 21:\n this.$ = [$$[$0]]; \nbreak;\ncase 22:\n $$[$0].push($$[$0-1]); this.$=$$[$0]; \nbreak;\ncase 23:\n this.$ = { attributeType: $$[$0-1], attributeName: $$[$0] }; \nbreak;\ncase 24:\n this.$ = { attributeType: $$[$0-2], attributeName: $$[$0-1], attributeKeyType: $$[$0] }; \nbreak;\ncase 25:\n this.$ = { attributeType: $$[$0-2], attributeName: $$[$0-1], attributeComment: $$[$0] }; \nbreak;\ncase 26:\n this.$ = { attributeType: $$[$0-3], attributeName: $$[$0-2], attributeKeyType: $$[$0-1], attributeComment: $$[$0] }; \nbreak;\ncase 27: case 28: case 29:\n this.$=$$[$0]; \nbreak;\ncase 30:\n this.$=$$[$0].replace(/\"/g, ''); \nbreak;\ncase 31:\n\n        this.$ = { cardA: $$[$0], relType: $$[$0-1], cardB: $$[$0-2] };\n        /*console.log('relSpec: ' + $$[$0] + $$[$0-1] + $$[$0-2]);*/\n      \nbreak;\ncase 32:\n this.$ = yy.Cardinality.ZERO_OR_ONE; \nbreak;\ncase 33:\n this.$ = yy.Cardinality.ZERO_OR_MORE; \nbreak;\ncase 34:\n this.$ = yy.Cardinality.ONE_OR_MORE; \nbreak;\ncase 35:\n this.$ = yy.Cardinality.ONLY_ONE; \nbreak;\ncase 36:\n this.$ = yy.Identification.NON_IDENTIFYING;  \nbreak;\ncase 37:\n this.$ = yy.Identification.IDENTIFYING; \nbreak;\ncase 38:\n this.$ = $$[$0].replace(/\"/g, ''); \nbreak;\ncase 39:\n this.$ = $$[$0]; \nbreak;\ncase 40:\n yy.parseDirective('%%{', 'open_directive'); \nbreak;\ncase 41:\n yy.parseDirective($$[$0], 'type_directive'); \nbreak;\ncase 42:\n $$[$0] = $$[$0].trim().replace(/'/g, '\"'); yy.parseDirective($$[$0], 'arg_directive'); \nbreak;\ncase 43:\n yy.parseDirective('}%%', 'close_directive', 'er'); \nbreak;\n}\n},\ntable: [{3:1,4:$V0,7:3,12:4,48:$V1},{1:[3]},o($V2,[2,3],{5:6}),{3:7,4:$V0,7:3,12:4,48:$V1},{13:8,49:[1,9]},{49:[2,40]},{6:[1,10],7:15,8:11,9:[1,12],10:13,11:[1,14],12:4,17:16,23:$V3,25:$V4,27:$V5,29:$V6,30:$V7,48:$V1},{1:[2,2]},{14:22,15:[1,23],51:$V8},o([15,51],[2,41]),o($V2,[2,8],{1:[2,1]}),o($V2,[2,4]),{7:15,10:25,12:4,17:16,23:$V3,25:$V4,27:$V5,29:$V6,30:$V7,48:$V1},o($V2,[2,6]),o($V2,[2,7]),o($V2,[2,11]),o($V2,[2,15],{18:26,39:28,20:[1,27],41:$V9,42:$Va,43:$Vb,44:$Vc}),{24:[1,33]},{26:[1,34]},{28:[1,35]},o($V2,[2,19]),o([6,9,11,15,20,23,25,27,29,30,41,42,43,44,48],[2,20]),{11:[1,36]},{16:37,50:[1,38]},{11:[2,43]},o($V2,[2,5]),{17:39,30:$V7},{21:40,22:[1,41],31:42,32:43,36:$Vd},{40:45,45:[1,46],46:[1,47]},o($Ve,[2,32]),o($Ve,[2,33]),o($Ve,[2,34]),o($Ve,[2,35]),o($V2,[2,16]),o($V2,[2,17]),o($V2,[2,18]),o($Vf,[2,9]),{14:48,51:$V8},{51:[2,42]},{15:[1,49]},{22:[1,50]},o($V2,[2,14]),{21:51,22:[2,21],31:42,32:43,36:$Vd},{33:52,36:[1,53]},{36:[2,27]},{39:54,41:$V9,42:$Va,43:$Vb,44:$Vc},o($Vg,[2,36]),o($Vg,[2,37]),{11:[1,55]},{19:56,30:[1,58],47:[1,57]},o($V2,[2,13]),{22:[2,22]},o($Vh,[2,23],{34:59,35:60,37:[1,61],38:$Vi}),o([22,36,37,38],[2,28]),{30:[2,31]},o($Vf,[2,10]),o($V2,[2,12]),o($V2,[2,38]),o($V2,[2,39]),o($Vh,[2,24],{35:63,38:$Vi}),o($Vh,[2,25]),o([22,36,38],[2,29]),o($Vh,[2,30]),o($Vh,[2,26])],\ndefaultActions: {5:[2,40],7:[2,2],24:[2,43],38:[2,42],44:[2,27],51:[2,22],54:[2,31]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n            function lex() {\n            var token;\n            token = tstack.pop() || lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                if (token instanceof Array) {\n                    tstack = token;\n                    token = tstack.pop();\n                }\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var errStr = '';\n            expected = [];\n            for (p in table[state]) {\n                if (this.terminals_[p] && p > TERROR) {\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\n                }\n            }\n            if (lexer.showPosition) {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n            } else {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n            }\n            this.parseError(errStr, {\n                text: lexer.match,\n                token: this.terminals_[symbol] || symbol,\n                line: lexer.yylineno,\n                loc: yyloc,\n                expected: expected\n            });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0: this.begin(\"acc_title\");return 25; \nbreak;\ncase 1: this.popState(); return \"acc_title_value\"; \nbreak;\ncase 2: this.begin(\"acc_descr\");return 27; \nbreak;\ncase 3: this.popState(); return \"acc_descr_value\"; \nbreak;\ncase 4: this.begin(\"acc_descr_multiline\");\nbreak;\ncase 5: this.popState(); \nbreak;\ncase 6:return \"acc_descr_multiline_value\";\nbreak;\ncase 7: this.begin('open_directive'); return 48; \nbreak;\ncase 8: this.begin('type_directive'); return 49; \nbreak;\ncase 9: this.popState(); this.begin('arg_directive'); return 15; \nbreak;\ncase 10: this.popState(); this.popState(); return 51; \nbreak;\ncase 11:return 50;\nbreak;\ncase 12:/* skip comments */\nbreak;\ncase 13:/* skip comments */\nbreak;\ncase 14:return 11;\nbreak;\ncase 15:/* skip whitespace */\nbreak;\ncase 16:return 9;\nbreak;\ncase 17:return 47;\nbreak;\ncase 18:return 4;\nbreak;\ncase 19: this.begin(\"block\"); return 20; \nbreak;\ncase 20:/* skip whitespace in block */\nbreak;\ncase 21:return 37\nbreak;\ncase 22:return 36\nbreak;\ncase 23:return 38;\nbreak;\ncase 24:/* nothing */\nbreak;\ncase 25: this.popState(); return 22; \nbreak;\ncase 26:return yy_.yytext[0];\nbreak;\ncase 27:return 41;\nbreak;\ncase 28:return 42;\nbreak;\ncase 29:return 43;\nbreak;\ncase 30:return 44;\nbreak;\ncase 31:return 41;\nbreak;\ncase 32:return 42;\nbreak;\ncase 33:return 43;\nbreak;\ncase 34:return 45;\nbreak;\ncase 35:return 46;\nbreak;\ncase 36:return 45;\nbreak;\ncase 37:return 45;\nbreak;\ncase 38:return 30;\nbreak;\ncase 39:return yy_.yytext[0];\nbreak;\ncase 40:return 6;\nbreak;\n}\n},\nrules: [/^(?:accTitle\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*\\{\\s*)/i,/^(?:[\\}])/i,/^(?:[^\\}]*)/i,/^(?:%%\\{)/i,/^(?:((?:(?!\\}%%)[^:.])*))/i,/^(?::)/i,/^(?:\\}%%)/i,/^(?:((?:(?!\\}%%).|\\n)*))/i,/^(?:%(?!\\{)[^\\n]*)/i,/^(?:[^\\}]%%[^\\n]*)/i,/^(?:[\\n]+)/i,/^(?:\\s+)/i,/^(?:[\\s]+)/i,/^(?:\"[^\"]*\")/i,/^(?:erDiagram\\b)/i,/^(?:\\{)/i,/^(?:\\s+)/i,/^(?:(?:PK)|(?:FK))/i,/^(?:[A-Za-z][A-Za-z0-9\\-_]*)/i,/^(?:\"[^\"]*\")/i,/^(?:[\\n]+)/i,/^(?:\\})/i,/^(?:.)/i,/^(?:\\|o\\b)/i,/^(?:\\}o\\b)/i,/^(?:\\}\\|)/i,/^(?:\\|\\|)/i,/^(?:o\\|)/i,/^(?:o\\{)/i,/^(?:\\|\\{)/i,/^(?:\\.\\.)/i,/^(?:--)/i,/^(?:\\.-)/i,/^(?:-\\.)/i,/^(?:[A-Za-z][A-Za-z0-9\\-_]*)/i,/^(?:.)/i,/^(?:$)/i],\nconditions: {\"acc_descr_multiline\":{\"rules\":[5,6],\"inclusive\":false},\"acc_descr\":{\"rules\":[3],\"inclusive\":false},\"acc_title\":{\"rules\":[1],\"inclusive\":false},\"open_directive\":{\"rules\":[8],\"inclusive\":false},\"type_directive\":{\"rules\":[9,10],\"inclusive\":false},\"arg_directive\":{\"rules\":[10,11],\"inclusive\":false},\"block\":{\"rules\":[20,21,22,23,24,25,26],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,2,4,7,12,13,14,15,16,17,18,19,27,28,29,30,31,32,33,34,35,36,37,38,39,40],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,9],$V1=[1,7],$V2=[1,6],$V3=[1,8],$V4=[1,20,21,22,23,38,44,46,48,52,66,67,86,87,88,89,90,91,95,105,106,109,111,112,118,119,120,121,122,123,124,125,126,127],$V5=[2,10],$V6=[1,20],$V7=[1,21],$V8=[1,22],$V9=[1,23],$Va=[1,30],$Vb=[1,32],$Vc=[1,33],$Vd=[1,34],$Ve=[1,62],$Vf=[1,48],$Vg=[1,52],$Vh=[1,36],$Vi=[1,37],$Vj=[1,38],$Vk=[1,39],$Vl=[1,40],$Vm=[1,56],$Vn=[1,63],$Vo=[1,51],$Vp=[1,53],$Vq=[1,55],$Vr=[1,59],$Vs=[1,60],$Vt=[1,41],$Vu=[1,42],$Vv=[1,43],$Vw=[1,44],$Vx=[1,61],$Vy=[1,50],$Vz=[1,54],$VA=[1,57],$VB=[1,58],$VC=[1,49],$VD=[1,66],$VE=[1,71],$VF=[1,20,21,22,23,38,42,44,46,48,52,66,67,86,87,88,89,90,91,95,105,106,109,111,112,118,119,120,121,122,123,124,125,126,127],$VG=[1,75],$VH=[1,74],$VI=[1,76],$VJ=[20,21,23,81,82],$VK=[1,99],$VL=[1,104],$VM=[1,107],$VN=[1,108],$VO=[1,101],$VP=[1,106],$VQ=[1,109],$VR=[1,102],$VS=[1,114],$VT=[1,113],$VU=[1,103],$VV=[1,105],$VW=[1,110],$VX=[1,111],$VY=[1,112],$VZ=[1,115],$V_=[20,21,22,23,81,82],$V$=[20,21,22,23,53,81,82],$V01=[20,21,22,23,40,52,53,55,57,59,61,63,65,66,67,69,71,73,74,76,81,82,91,95,105,106,109,111,112,122,123,124,125,126,127],$V11=[20,21,23],$V21=[20,21,23,52,66,67,81,82,91,95,105,106,109,111,112,122,123,124,125,126,127],$V31=[1,12,20,21,22,23,24,38,42,44,46,48,52,66,67,86,87,88,89,90,91,95,105,106,109,111,112,118,119,120,121,122,123,124,125,126,127],$V41=[52,66,67,91,95,105,106,109,111,112,122,123,124,125,126,127],$V51=[1,149],$V61=[1,157],$V71=[1,158],$V81=[1,159],$V91=[1,160],$Va1=[1,144],$Vb1=[1,145],$Vc1=[1,141],$Vd1=[1,152],$Ve1=[1,153],$Vf1=[1,154],$Vg1=[1,155],$Vh1=[1,156],$Vi1=[1,161],$Vj1=[1,162],$Vk1=[1,147],$Vl1=[1,150],$Vm1=[1,146],$Vn1=[1,143],$Vo1=[20,21,22,23,38,42,44,46,48,52,66,67,86,87,88,89,90,91,95,105,106,109,111,112,118,119,120,121,122,123,124,125,126,127],$Vp1=[1,165],$Vq1=[20,21,22,23,26,52,66,67,91,105,106,109,111,112,122,123,124,125,126,127],$Vr1=[20,21,22,23,24,26,38,40,41,42,52,56,58,60,62,64,66,67,68,70,72,73,75,77,81,82,86,87,88,89,90,91,92,95,105,106,109,111,112,113,114,122,123,124,125,126,127],$Vs1=[12,21,22,24],$Vt1=[22,106],$Vu1=[1,250],$Vv1=[1,245],$Vw1=[1,246],$Vx1=[1,254],$Vy1=[1,251],$Vz1=[1,248],$VA1=[1,247],$VB1=[1,249],$VC1=[1,252],$VD1=[1,253],$VE1=[1,255],$VF1=[1,273],$VG1=[20,21,23,106],$VH1=[20,21,22,23,66,67,86,102,105,106,109,110,111,112,113];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"mermaidDoc\":4,\"directive\":5,\"openDirective\":6,\"typeDirective\":7,\"closeDirective\":8,\"separator\":9,\":\":10,\"argDirective\":11,\"open_directive\":12,\"type_directive\":13,\"arg_directive\":14,\"close_directive\":15,\"graphConfig\":16,\"document\":17,\"line\":18,\"statement\":19,\"SEMI\":20,\"NEWLINE\":21,\"SPACE\":22,\"EOF\":23,\"GRAPH\":24,\"NODIR\":25,\"DIR\":26,\"FirstStmtSeperator\":27,\"ending\":28,\"endToken\":29,\"spaceList\":30,\"spaceListNewline\":31,\"verticeStatement\":32,\"styleStatement\":33,\"linkStyleStatement\":34,\"classDefStatement\":35,\"classStatement\":36,\"clickStatement\":37,\"subgraph\":38,\"text\":39,\"SQS\":40,\"SQE\":41,\"end\":42,\"direction\":43,\"acc_title\":44,\"acc_title_value\":45,\"acc_descr\":46,\"acc_descr_value\":47,\"acc_descr_multiline_value\":48,\"link\":49,\"node\":50,\"vertex\":51,\"AMP\":52,\"STYLE_SEPARATOR\":53,\"idString\":54,\"DOUBLECIRCLESTART\":55,\"DOUBLECIRCLEEND\":56,\"PS\":57,\"PE\":58,\"(-\":59,\"-)\":60,\"STADIUMSTART\":61,\"STADIUMEND\":62,\"SUBROUTINESTART\":63,\"SUBROUTINEEND\":64,\"VERTEX_WITH_PROPS_START\":65,\"ALPHA\":66,\"COLON\":67,\"PIPE\":68,\"CYLINDERSTART\":69,\"CYLINDEREND\":70,\"DIAMOND_START\":71,\"DIAMOND_STOP\":72,\"TAGEND\":73,\"TRAPSTART\":74,\"TRAPEND\":75,\"INVTRAPSTART\":76,\"INVTRAPEND\":77,\"linkStatement\":78,\"arrowText\":79,\"TESTSTR\":80,\"START_LINK\":81,\"LINK\":82,\"textToken\":83,\"STR\":84,\"keywords\":85,\"STYLE\":86,\"LINKSTYLE\":87,\"CLASSDEF\":88,\"CLASS\":89,\"CLICK\":90,\"DOWN\":91,\"UP\":92,\"textNoTags\":93,\"textNoTagsToken\":94,\"DEFAULT\":95,\"stylesOpt\":96,\"alphaNum\":97,\"CALLBACKNAME\":98,\"CALLBACKARGS\":99,\"HREF\":100,\"LINK_TARGET\":101,\"HEX\":102,\"numList\":103,\"INTERPOLATE\":104,\"NUM\":105,\"COMMA\":106,\"style\":107,\"styleComponent\":108,\"MINUS\":109,\"UNIT\":110,\"BRKT\":111,\"DOT\":112,\"PCT\":113,\"TAGSTART\":114,\"alphaNumToken\":115,\"idStringToken\":116,\"alphaNumStatement\":117,\"direction_tb\":118,\"direction_bt\":119,\"direction_rl\":120,\"direction_lr\":121,\"PUNCTUATION\":122,\"UNICODE_TEXT\":123,\"PLUS\":124,\"EQUALS\":125,\"MULT\":126,\"UNDERSCORE\":127,\"graphCodeTokens\":128,\"ARROW_CROSS\":129,\"ARROW_POINT\":130,\"ARROW_CIRCLE\":131,\"ARROW_OPEN\":132,\"QUOTE\":133,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",10:\":\",12:\"open_directive\",13:\"type_directive\",14:\"arg_directive\",15:\"close_directive\",20:\"SEMI\",21:\"NEWLINE\",22:\"SPACE\",23:\"EOF\",24:\"GRAPH\",25:\"NODIR\",26:\"DIR\",38:\"subgraph\",40:\"SQS\",41:\"SQE\",42:\"end\",44:\"acc_title\",45:\"acc_title_value\",46:\"acc_descr\",47:\"acc_descr_value\",48:\"acc_descr_multiline_value\",52:\"AMP\",53:\"STYLE_SEPARATOR\",55:\"DOUBLECIRCLESTART\",56:\"DOUBLECIRCLEEND\",57:\"PS\",58:\"PE\",59:\"(-\",60:\"-)\",61:\"STADIUMSTART\",62:\"STADIUMEND\",63:\"SUBROUTINESTART\",64:\"SUBROUTINEEND\",65:\"VERTEX_WITH_PROPS_START\",66:\"ALPHA\",67:\"COLON\",68:\"PIPE\",69:\"CYLINDERSTART\",70:\"CYLINDEREND\",71:\"DIAMOND_START\",72:\"DIAMOND_STOP\",73:\"TAGEND\",74:\"TRAPSTART\",75:\"TRAPEND\",76:\"INVTRAPSTART\",77:\"INVTRAPEND\",80:\"TESTSTR\",81:\"START_LINK\",82:\"LINK\",84:\"STR\",86:\"STYLE\",87:\"LINKSTYLE\",88:\"CLASSDEF\",89:\"CLASS\",90:\"CLICK\",91:\"DOWN\",92:\"UP\",95:\"DEFAULT\",98:\"CALLBACKNAME\",99:\"CALLBACKARGS\",100:\"HREF\",101:\"LINK_TARGET\",102:\"HEX\",104:\"INTERPOLATE\",105:\"NUM\",106:\"COMMA\",109:\"MINUS\",110:\"UNIT\",111:\"BRKT\",112:\"DOT\",113:\"PCT\",114:\"TAGSTART\",118:\"direction_tb\",119:\"direction_bt\",120:\"direction_rl\",121:\"direction_lr\",122:\"PUNCTUATION\",123:\"UNICODE_TEXT\",124:\"PLUS\",125:\"EQUALS\",126:\"MULT\",127:\"UNDERSCORE\",129:\"ARROW_CROSS\",130:\"ARROW_POINT\",131:\"ARROW_CIRCLE\",132:\"ARROW_OPEN\",133:\"QUOTE\"},\nproductions_: [0,[3,1],[3,2],[5,4],[5,6],[6,1],[7,1],[11,1],[8,1],[4,2],[17,0],[17,2],[18,1],[18,1],[18,1],[18,1],[18,1],[16,2],[16,2],[16,2],[16,3],[28,2],[28,1],[29,1],[29,1],[29,1],[27,1],[27,1],[27,2],[31,2],[31,2],[31,1],[31,1],[30,2],[30,1],[19,2],[19,2],[19,2],[19,2],[19,2],[19,2],[19,9],[19,6],[19,4],[19,1],[19,2],[19,2],[19,1],[9,1],[9,1],[9,1],[32,3],[32,4],[32,2],[32,1],[50,1],[50,5],[50,3],[51,4],[51,4],[51,6],[51,4],[51,4],[51,4],[51,8],[51,4],[51,4],[51,4],[51,6],[51,4],[51,4],[51,4],[51,4],[51,4],[51,1],[49,2],[49,3],[49,3],[49,1],[49,3],[78,1],[79,3],[39,1],[39,2],[39,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[85,1],[93,1],[93,2],[35,5],[35,5],[36,5],[37,2],[37,4],[37,3],[37,5],[37,2],[37,4],[37,4],[37,6],[37,2],[37,4],[37,2],[37,4],[37,4],[37,6],[33,5],[33,5],[34,5],[34,5],[34,9],[34,9],[34,7],[34,7],[103,1],[103,3],[96,1],[96,3],[107,1],[107,2],[108,1],[108,1],[108,1],[108,1],[108,1],[108,1],[108,1],[108,1],[108,1],[108,1],[108,1],[83,1],[83,1],[83,1],[83,1],[83,1],[83,1],[94,1],[94,1],[94,1],[94,1],[54,1],[54,2],[97,1],[97,2],[117,1],[117,1],[117,1],[117,1],[43,1],[43,1],[43,1],[43,1],[115,1],[115,1],[115,1],[115,1],[115,1],[115,1],[115,1],[115,1],[115,1],[115,1],[115,1],[115,1],[115,1],[116,1],[116,1],[116,1],[116,1],[116,1],[116,1],[116,1],[116,1],[116,1],[116,1],[116,1],[116,1],[116,1],[116,1],[116,1],[116,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1],[128,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 5:\n yy.parseDirective('%%{', 'open_directive'); \nbreak;\ncase 6:\n yy.parseDirective($$[$0], 'type_directive'); \nbreak;\ncase 7:\n $$[$0] = $$[$0].trim().replace(/'/g, '\"'); yy.parseDirective($$[$0], 'arg_directive'); \nbreak;\ncase 8:\n yy.parseDirective('}%%', 'close_directive', 'flowchart'); \nbreak;\ncase 10:\n this.$ = [];\nbreak;\ncase 11:\n\n\t    if($$[$0] !== []){\n\t        $$[$0-1].push($$[$0]);\n\t    }\n\t    this.$=$$[$0-1];\nbreak;\ncase 12: case 82: case 84: case 96: case 152: case 154: case 155:\nthis.$=$$[$0];\nbreak;\ncase 19:\n yy.setDirection('TB');this.$ = 'TB';\nbreak;\ncase 20:\n yy.setDirection($$[$0-1]);this.$ = $$[$0-1];\nbreak;\ncase 35:\n /* console.warn('finat vs', $$[$0-1].nodes); */ this.$=$$[$0-1].nodes\nbreak;\ncase 36: case 37: case 38: case 39: case 40:\nthis.$=[];\nbreak;\ncase 41:\nthis.$=yy.addSubGraph($$[$0-6],$$[$0-1],$$[$0-4]);\nbreak;\ncase 42:\nthis.$=yy.addSubGraph($$[$0-3],$$[$0-1],$$[$0-3]);\nbreak;\ncase 43:\nthis.$=yy.addSubGraph(undefined,$$[$0-1],undefined);\nbreak;\ncase 45:\n this.$=$$[$0].trim();yy.setTitle(this.$); \nbreak;\ncase 46: case 47:\n this.$=$$[$0].trim();yy.setAccDescription(this.$); \nbreak;\ncase 51:\n /* console.warn('vs',$$[$0-2].stmt,$$[$0]); */ yy.addLink($$[$0-2].stmt,$$[$0],$$[$0-1]); this.$ = { stmt: $$[$0], nodes: $$[$0].concat($$[$0-2].nodes) } \nbreak;\ncase 52:\n /* console.warn('vs',$$[$0-3].stmt,$$[$0-1]); */ yy.addLink($$[$0-3].stmt,$$[$0-1],$$[$0-2]); this.$ = { stmt: $$[$0-1], nodes: $$[$0-1].concat($$[$0-3].nodes) } \nbreak;\ncase 53:\n/*console.warn('noda', $$[$0-1]);*/ this.$ = {stmt: $$[$0-1], nodes:$$[$0-1] }\nbreak;\ncase 54:\n /*console.warn('noda', $$[$0]);*/ this.$ = {stmt: $$[$0], nodes:$$[$0] }\nbreak;\ncase 55:\n /* console.warn('nod', $$[$0]); */ this.$ = [$$[$0]];\nbreak;\ncase 56:\n this.$ = $$[$0-4].concat($$[$0]); /* console.warn('pip', $$[$0-4][0], $$[$0], this.$); */ \nbreak;\ncase 57:\nthis.$ = [$$[$0-2]];yy.setClass($$[$0-2],$$[$0])\nbreak;\ncase 58:\nthis.$ = $$[$0-3];yy.addVertex($$[$0-3],$$[$0-1],'square');\nbreak;\ncase 59:\nthis.$ = $$[$0-3];yy.addVertex($$[$0-3],$$[$0-1],'doublecircle');\nbreak;\ncase 60:\nthis.$ = $$[$0-5];yy.addVertex($$[$0-5],$$[$0-2],'circle');\nbreak;\ncase 61:\nthis.$ = $$[$0-3];yy.addVertex($$[$0-3],$$[$0-1],'ellipse');\nbreak;\ncase 62:\nthis.$ = $$[$0-3];yy.addVertex($$[$0-3],$$[$0-1],'stadium');\nbreak;\ncase 63:\nthis.$ = $$[$0-3];yy.addVertex($$[$0-3],$$[$0-1],'subroutine');\nbreak;\ncase 64:\nthis.$ = $$[$0-7];yy.addVertex($$[$0-7],$$[$0-1],'rect',undefined,undefined,undefined, Object.fromEntries([[$$[$0-5], $$[$0-3]]]));\nbreak;\ncase 65:\nthis.$ = $$[$0-3];yy.addVertex($$[$0-3],$$[$0-1],'cylinder');\nbreak;\ncase 66:\nthis.$ = $$[$0-3];yy.addVertex($$[$0-3],$$[$0-1],'round');\nbreak;\ncase 67:\nthis.$ = $$[$0-3];yy.addVertex($$[$0-3],$$[$0-1],'diamond');\nbreak;\ncase 68:\nthis.$ = $$[$0-5];yy.addVertex($$[$0-5],$$[$0-2],'hexagon');\nbreak;\ncase 69:\nthis.$ = $$[$0-3];yy.addVertex($$[$0-3],$$[$0-1],'odd');\nbreak;\ncase 70:\nthis.$ = $$[$0-3];yy.addVertex($$[$0-3],$$[$0-1],'trapezoid');\nbreak;\ncase 71:\nthis.$ = $$[$0-3];yy.addVertex($$[$0-3],$$[$0-1],'inv_trapezoid');\nbreak;\ncase 72:\nthis.$ = $$[$0-3];yy.addVertex($$[$0-3],$$[$0-1],'lean_right');\nbreak;\ncase 73:\nthis.$ = $$[$0-3];yy.addVertex($$[$0-3],$$[$0-1],'lean_left');\nbreak;\ncase 74:\n /*console.warn('h: ', $$[$0]);*/this.$ = $$[$0];yy.addVertex($$[$0]);\nbreak;\ncase 75:\n$$[$0-1].text = $$[$0];this.$ = $$[$0-1];\nbreak;\ncase 76: case 77:\n$$[$0-2].text = $$[$0-1];this.$ = $$[$0-2];\nbreak;\ncase 78:\nthis.$ = $$[$0];\nbreak;\ncase 79:\nvar inf = yy.destructLink($$[$0], $$[$0-2]); this.$ = {\"type\":inf.type,\"stroke\":inf.stroke,\"length\":inf.length,\"text\":$$[$0-1]};\nbreak;\ncase 80:\nvar inf = yy.destructLink($$[$0]);this.$ = {\"type\":inf.type,\"stroke\":inf.stroke,\"length\":inf.length};\nbreak;\ncase 81:\nthis.$ = $$[$0-1];\nbreak;\ncase 83: case 97: case 153:\nthis.$=$$[$0-1]+''+$$[$0];\nbreak;\ncase 98: case 99:\nthis.$ = $$[$0-4];yy.addClass($$[$0-2],$$[$0]);\nbreak;\ncase 100:\nthis.$ = $$[$0-4];yy.setClass($$[$0-2], $$[$0]);\nbreak;\ncase 101: case 109:\nthis.$ = $$[$0-1];yy.setClickEvent($$[$0-1], $$[$0]);\nbreak;\ncase 102: case 110:\nthis.$ = $$[$0-3];yy.setClickEvent($$[$0-3], $$[$0-2]);yy.setTooltip($$[$0-3], $$[$0]);\nbreak;\ncase 103:\nthis.$ = $$[$0-2];yy.setClickEvent($$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 104:\nthis.$ = $$[$0-4];yy.setClickEvent($$[$0-4], $$[$0-3], $$[$0-2]);yy.setTooltip($$[$0-4], $$[$0]);\nbreak;\ncase 105: case 111:\nthis.$ = $$[$0-1];yy.setLink($$[$0-1], $$[$0]);\nbreak;\ncase 106: case 112:\nthis.$ = $$[$0-3];yy.setLink($$[$0-3], $$[$0-2]);yy.setTooltip($$[$0-3], $$[$0]);\nbreak;\ncase 107: case 113:\nthis.$ = $$[$0-3];yy.setLink($$[$0-3], $$[$0-2], $$[$0]);\nbreak;\ncase 108: case 114:\nthis.$ = $$[$0-5];yy.setLink($$[$0-5], $$[$0-4], $$[$0]);yy.setTooltip($$[$0-5], $$[$0-2]);\nbreak;\ncase 115:\nthis.$ = $$[$0-4];yy.addVertex($$[$0-2],undefined,undefined,$$[$0]);\nbreak;\ncase 116: case 118:\nthis.$ = $$[$0-4];yy.updateLink($$[$0-2],$$[$0]);\nbreak;\ncase 117:\nthis.$ = $$[$0-4];yy.updateLink([$$[$0-2]],$$[$0]);\nbreak;\ncase 119:\nthis.$ = $$[$0-8];yy.updateLinkInterpolate([$$[$0-6]],$$[$0-2]);yy.updateLink([$$[$0-6]],$$[$0]);\nbreak;\ncase 120:\nthis.$ = $$[$0-8];yy.updateLinkInterpolate($$[$0-6],$$[$0-2]);yy.updateLink($$[$0-6],$$[$0]);\nbreak;\ncase 121:\nthis.$ = $$[$0-6];yy.updateLinkInterpolate([$$[$0-4]],$$[$0]);\nbreak;\ncase 122:\nthis.$ = $$[$0-6];yy.updateLinkInterpolate($$[$0-4],$$[$0]);\nbreak;\ncase 123: case 125:\nthis.$ = [$$[$0]]\nbreak;\ncase 124: case 126:\n$$[$0-2].push($$[$0]);this.$ = $$[$0-2];\nbreak;\ncase 128:\nthis.$ = $$[$0-1] + $$[$0];\nbreak;\ncase 150:\nthis.$=$$[$0]\nbreak;\ncase 151:\nthis.$=$$[$0-1]+''+$$[$0]\nbreak;\ncase 156:\nthis.$='v';\nbreak;\ncase 157:\nthis.$='-';\nbreak;\ncase 158:\n this.$={stmt:'dir', value:'TB'};\nbreak;\ncase 159:\n this.$={stmt:'dir', value:'BT'};\nbreak;\ncase 160:\n this.$={stmt:'dir', value:'RL'};\nbreak;\ncase 161:\n this.$={stmt:'dir', value:'LR'};\nbreak;\n}\n},\ntable: [{3:1,4:2,5:3,6:5,12:$V0,16:4,21:$V1,22:$V2,24:$V3},{1:[3]},{1:[2,1]},{3:10,4:2,5:3,6:5,12:$V0,16:4,21:$V1,22:$V2,24:$V3},o($V4,$V5,{17:11}),{7:12,13:[1,13]},{16:14,21:$V1,22:$V2,24:$V3},{16:15,21:$V1,22:$V2,24:$V3},{25:[1,16],26:[1,17]},{13:[2,5]},{1:[2,2]},{1:[2,9],18:18,19:19,20:$V6,21:$V7,22:$V8,23:$V9,32:24,33:25,34:26,35:27,36:28,37:29,38:$Va,43:31,44:$Vb,46:$Vc,48:$Vd,50:35,51:45,52:$Ve,54:46,66:$Vf,67:$Vg,86:$Vh,87:$Vi,88:$Vj,89:$Vk,90:$Vl,91:$Vm,95:$Vn,105:$Vo,106:$Vp,109:$Vq,111:$Vr,112:$Vs,116:47,118:$Vt,119:$Vu,120:$Vv,121:$Vw,122:$Vx,123:$Vy,124:$Vz,125:$VA,126:$VB,127:$VC},{8:64,10:[1,65],15:$VD},o([10,15],[2,6]),o($V4,[2,17]),o($V4,[2,18]),o($V4,[2,19]),{20:[1,68],21:[1,69],22:$VE,27:67,30:70},o($VF,[2,11]),o($VF,[2,12]),o($VF,[2,13]),o($VF,[2,14]),o($VF,[2,15]),o($VF,[2,16]),{9:72,20:$VG,21:$VH,23:$VI,49:73,78:77,81:[1,78],82:[1,79]},{9:80,20:$VG,21:$VH,23:$VI},{9:81,20:$VG,21:$VH,23:$VI},{9:82,20:$VG,21:$VH,23:$VI},{9:83,20:$VG,21:$VH,23:$VI},{9:84,20:$VG,21:$VH,23:$VI},{9:86,20:$VG,21:$VH,22:[1,85],23:$VI},o($VF,[2,44]),{45:[1,87]},{47:[1,88]},o($VF,[2,47]),o($VJ,[2,54],{30:89,22:$VE}),{22:[1,90]},{22:[1,91]},{22:[1,92]},{22:[1,93]},{26:$VK,52:$VL,66:$VM,67:$VN,84:[1,97],91:$VO,97:96,98:[1,94],100:[1,95],105:$VP,106:$VQ,109:$VR,111:$VS,112:$VT,115:100,117:98,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},o($VF,[2,158]),o($VF,[2,159]),o($VF,[2,160]),o($VF,[2,161]),o($V_,[2,55],{53:[1,116]}),o($V$,[2,74],{116:129,40:[1,117],52:$Ve,55:[1,118],57:[1,119],59:[1,120],61:[1,121],63:[1,122],65:[1,123],66:$Vf,67:$Vg,69:[1,124],71:[1,125],73:[1,126],74:[1,127],76:[1,128],91:$Vm,95:$Vn,105:$Vo,106:$Vp,109:$Vq,111:$Vr,112:$Vs,122:$Vx,123:$Vy,124:$Vz,125:$VA,126:$VB,127:$VC}),o($V01,[2,150]),o($V01,[2,175]),o($V01,[2,176]),o($V01,[2,177]),o($V01,[2,178]),o($V01,[2,179]),o($V01,[2,180]),o($V01,[2,181]),o($V01,[2,182]),o($V01,[2,183]),o($V01,[2,184]),o($V01,[2,185]),o($V01,[2,186]),o($V01,[2,187]),o($V01,[2,188]),o($V01,[2,189]),o($V01,[2,190]),{9:130,20:$VG,21:$VH,23:$VI},{11:131,14:[1,132]},o($V11,[2,8]),o($V4,[2,20]),o($V4,[2,26]),o($V4,[2,27]),{21:[1,133]},o($V21,[2,34],{30:134,22:$VE}),o($VF,[2,35]),{50:135,51:45,52:$Ve,54:46,66:$Vf,67:$Vg,91:$Vm,95:$Vn,105:$Vo,106:$Vp,109:$Vq,111:$Vr,112:$Vs,116:47,122:$Vx,123:$Vy,124:$Vz,125:$VA,126:$VB,127:$VC},o($V31,[2,48]),o($V31,[2,49]),o($V31,[2,50]),o($V41,[2,78],{79:136,68:[1,138],80:[1,137]}),{22:$V51,24:$V61,26:$V71,38:$V81,39:139,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},o([52,66,67,68,80,91,95,105,106,109,111,112,122,123,124,125,126,127],[2,80]),o($VF,[2,36]),o($VF,[2,37]),o($VF,[2,38]),o($VF,[2,39]),o($VF,[2,40]),{22:$V51,24:$V61,26:$V71,38:$V81,39:163,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},o($Vo1,$V5,{17:164}),o($VF,[2,45]),o($VF,[2,46]),o($VJ,[2,53],{52:$Vp1}),{26:$VK,52:$VL,66:$VM,67:$VN,91:$VO,97:166,102:[1,167],105:$VP,106:$VQ,109:$VR,111:$VS,112:$VT,115:100,117:98,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{95:[1,168],103:169,105:[1,170]},{26:$VK,52:$VL,66:$VM,67:$VN,91:$VO,95:[1,171],97:172,105:$VP,106:$VQ,109:$VR,111:$VS,112:$VT,115:100,117:98,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{26:$VK,52:$VL,66:$VM,67:$VN,91:$VO,97:173,105:$VP,106:$VQ,109:$VR,111:$VS,112:$VT,115:100,117:98,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},o($V11,[2,101],{22:[1,174],99:[1,175]}),o($V11,[2,105],{22:[1,176]}),o($V11,[2,109],{115:100,117:178,22:[1,177],26:$VK,52:$VL,66:$VM,67:$VN,91:$VO,105:$VP,106:$VQ,109:$VR,111:$VS,112:$VT,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ}),o($V11,[2,111],{22:[1,179]}),o($Vq1,[2,152]),o($Vq1,[2,154]),o($Vq1,[2,155]),o($Vq1,[2,156]),o($Vq1,[2,157]),o($Vr1,[2,162]),o($Vr1,[2,163]),o($Vr1,[2,164]),o($Vr1,[2,165]),o($Vr1,[2,166]),o($Vr1,[2,167]),o($Vr1,[2,168]),o($Vr1,[2,169]),o($Vr1,[2,170]),o($Vr1,[2,171]),o($Vr1,[2,172]),o($Vr1,[2,173]),o($Vr1,[2,174]),{52:$Ve,54:180,66:$Vf,67:$Vg,91:$Vm,95:$Vn,105:$Vo,106:$Vp,109:$Vq,111:$Vr,112:$Vs,116:47,122:$Vx,123:$Vy,124:$Vz,125:$VA,126:$VB,127:$VC},{22:$V51,24:$V61,26:$V71,38:$V81,39:181,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,39:182,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,39:184,42:$V91,52:$VL,57:[1,183],66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,39:185,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,39:186,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,39:187,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{66:[1,188]},{22:$V51,24:$V61,26:$V71,38:$V81,39:189,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,39:190,42:$V91,52:$VL,66:$VM,67:$VN,71:[1,191],73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,39:192,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,39:193,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,39:194,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},o($V01,[2,151]),o($Vs1,[2,3]),{8:195,15:$VD},{15:[2,7]},o($V4,[2,28]),o($V21,[2,33]),o($VJ,[2,51],{30:196,22:$VE}),o($V41,[2,75],{22:[1,197]}),{22:[1,198]},{22:$V51,24:$V61,26:$V71,38:$V81,39:199,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,82:[1,200],83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},o($Vr1,[2,82]),o($Vr1,[2,84]),o($Vr1,[2,140]),o($Vr1,[2,141]),o($Vr1,[2,142]),o($Vr1,[2,143]),o($Vr1,[2,144]),o($Vr1,[2,145]),o($Vr1,[2,146]),o($Vr1,[2,147]),o($Vr1,[2,148]),o($Vr1,[2,149]),o($Vr1,[2,85]),o($Vr1,[2,86]),o($Vr1,[2,87]),o($Vr1,[2,88]),o($Vr1,[2,89]),o($Vr1,[2,90]),o($Vr1,[2,91]),o($Vr1,[2,92]),o($Vr1,[2,93]),o($Vr1,[2,94]),o($Vr1,[2,95]),{9:203,20:$VG,21:$VH,22:$V51,23:$VI,24:$V61,26:$V71,38:$V81,40:[1,202],42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{18:18,19:19,20:$V6,21:$V7,22:$V8,23:$V9,32:24,33:25,34:26,35:27,36:28,37:29,38:$Va,42:[1,204],43:31,44:$Vb,46:$Vc,48:$Vd,50:35,51:45,52:$Ve,54:46,66:$Vf,67:$Vg,86:$Vh,87:$Vi,88:$Vj,89:$Vk,90:$Vl,91:$Vm,95:$Vn,105:$Vo,106:$Vp,109:$Vq,111:$Vr,112:$Vs,116:47,118:$Vt,119:$Vu,120:$Vv,121:$Vw,122:$Vx,123:$Vy,124:$Vz,125:$VA,126:$VB,127:$VC},{22:$VE,30:205},{22:[1,206],26:$VK,52:$VL,66:$VM,67:$VN,91:$VO,105:$VP,106:$VQ,109:$VR,111:$VS,112:$VT,115:100,117:178,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:[1,207]},{22:[1,208]},{22:[1,209],106:[1,210]},o($Vt1,[2,123]),{22:[1,211]},{22:[1,212],26:$VK,52:$VL,66:$VM,67:$VN,91:$VO,105:$VP,106:$VQ,109:$VR,111:$VS,112:$VT,115:100,117:178,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:[1,213],26:$VK,52:$VL,66:$VM,67:$VN,91:$VO,105:$VP,106:$VQ,109:$VR,111:$VS,112:$VT,115:100,117:178,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{84:[1,214]},o($V11,[2,103],{22:[1,215]}),{84:[1,216],101:[1,217]},{84:[1,218]},o($Vq1,[2,153]),{84:[1,219],101:[1,220]},o($V_,[2,57],{116:129,52:$Ve,66:$Vf,67:$Vg,91:$Vm,95:$Vn,105:$Vo,106:$Vp,109:$Vq,111:$Vr,112:$Vs,122:$Vx,123:$Vy,124:$Vz,125:$VA,126:$VB,127:$VC}),{22:$V51,24:$V61,26:$V71,38:$V81,41:[1,221],42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,42:$V91,52:$VL,56:[1,222],66:$VM,67:$VN,73:$Va1,81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,39:223,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,42:$V91,52:$VL,58:[1,224],66:$VM,67:$VN,73:$Va1,81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,42:$V91,52:$VL,60:[1,225],66:$VM,67:$VN,73:$Va1,81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,42:$V91,52:$VL,62:[1,226],66:$VM,67:$VN,73:$Va1,81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,42:$V91,52:$VL,64:[1,227],66:$VM,67:$VN,73:$Va1,81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{67:[1,228]},{22:$V51,24:$V61,26:$V71,38:$V81,42:$V91,52:$VL,66:$VM,67:$VN,70:[1,229],73:$Va1,81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,42:$V91,52:$VL,66:$VM,67:$VN,72:[1,230],73:$Va1,81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,39:231,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,41:[1,232],42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,75:[1,233],77:[1,234],81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{22:$V51,24:$V61,26:$V71,38:$V81,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,75:[1,236],77:[1,235],81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{9:237,20:$VG,21:$VH,23:$VI},o($VJ,[2,52],{52:$Vp1}),o($V41,[2,77]),o($V41,[2,76]),{22:$V51,24:$V61,26:$V71,38:$V81,42:$V91,52:$VL,66:$VM,67:$VN,68:[1,238],73:$Va1,81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},o($V41,[2,79]),o($Vr1,[2,83]),{22:$V51,24:$V61,26:$V71,38:$V81,39:239,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},o($Vo1,$V5,{17:240}),o($VF,[2,43]),{51:241,52:$Ve,54:46,66:$Vf,67:$Vg,91:$Vm,95:$Vn,105:$Vo,106:$Vp,109:$Vq,111:$Vr,112:$Vs,116:47,122:$Vx,123:$Vy,124:$Vz,125:$VA,126:$VB,127:$VC},{22:$Vu1,66:$Vv1,67:$Vw1,86:$Vx1,96:242,102:$Vy1,105:$Vz1,107:243,108:244,109:$VA1,110:$VB1,111:$VC1,112:$VD1,113:$VE1},{22:$Vu1,66:$Vv1,67:$Vw1,86:$Vx1,96:256,102:$Vy1,105:$Vz1,107:243,108:244,109:$VA1,110:$VB1,111:$VC1,112:$VD1,113:$VE1},{22:$Vu1,66:$Vv1,67:$Vw1,86:$Vx1,96:257,102:$Vy1,104:[1,258],105:$Vz1,107:243,108:244,109:$VA1,110:$VB1,111:$VC1,112:$VD1,113:$VE1},{22:$Vu1,66:$Vv1,67:$Vw1,86:$Vx1,96:259,102:$Vy1,104:[1,260],105:$Vz1,107:243,108:244,109:$VA1,110:$VB1,111:$VC1,112:$VD1,113:$VE1},{105:[1,261]},{22:$Vu1,66:$Vv1,67:$Vw1,86:$Vx1,96:262,102:$Vy1,105:$Vz1,107:243,108:244,109:$VA1,110:$VB1,111:$VC1,112:$VD1,113:$VE1},{22:$Vu1,66:$Vv1,67:$Vw1,86:$Vx1,96:263,102:$Vy1,105:$Vz1,107:243,108:244,109:$VA1,110:$VB1,111:$VC1,112:$VD1,113:$VE1},{26:$VK,52:$VL,66:$VM,67:$VN,91:$VO,97:264,105:$VP,106:$VQ,109:$VR,111:$VS,112:$VT,115:100,117:98,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},o($V11,[2,102]),{84:[1,265]},o($V11,[2,106],{22:[1,266]}),o($V11,[2,107]),o($V11,[2,110]),o($V11,[2,112],{22:[1,267]}),o($V11,[2,113]),o($V$,[2,58]),o($V$,[2,59]),{22:$V51,24:$V61,26:$V71,38:$V81,42:$V91,52:$VL,58:[1,268],66:$VM,67:$VN,73:$Va1,81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},o($V$,[2,66]),o($V$,[2,61]),o($V$,[2,62]),o($V$,[2,63]),{66:[1,269]},o($V$,[2,65]),o($V$,[2,67]),{22:$V51,24:$V61,26:$V71,38:$V81,42:$V91,52:$VL,66:$VM,67:$VN,72:[1,270],73:$Va1,81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},o($V$,[2,69]),o($V$,[2,70]),o($V$,[2,72]),o($V$,[2,71]),o($V$,[2,73]),o($Vs1,[2,4]),o([22,52,66,67,91,95,105,106,109,111,112,122,123,124,125,126,127],[2,81]),{22:$V51,24:$V61,26:$V71,38:$V81,41:[1,271],42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{18:18,19:19,20:$V6,21:$V7,22:$V8,23:$V9,32:24,33:25,34:26,35:27,36:28,37:29,38:$Va,42:[1,272],43:31,44:$Vb,46:$Vc,48:$Vd,50:35,51:45,52:$Ve,54:46,66:$Vf,67:$Vg,86:$Vh,87:$Vi,88:$Vj,89:$Vk,90:$Vl,91:$Vm,95:$Vn,105:$Vo,106:$Vp,109:$Vq,111:$Vr,112:$Vs,116:47,118:$Vt,119:$Vu,120:$Vv,121:$Vw,122:$Vx,123:$Vy,124:$Vz,125:$VA,126:$VB,127:$VC},o($V_,[2,56]),o($V11,[2,115],{106:$VF1}),o($VG1,[2,125],{108:274,22:$Vu1,66:$Vv1,67:$Vw1,86:$Vx1,102:$Vy1,105:$Vz1,109:$VA1,110:$VB1,111:$VC1,112:$VD1,113:$VE1}),o($VH1,[2,127]),o($VH1,[2,129]),o($VH1,[2,130]),o($VH1,[2,131]),o($VH1,[2,132]),o($VH1,[2,133]),o($VH1,[2,134]),o($VH1,[2,135]),o($VH1,[2,136]),o($VH1,[2,137]),o($VH1,[2,138]),o($VH1,[2,139]),o($V11,[2,116],{106:$VF1}),o($V11,[2,117],{106:$VF1}),{22:[1,275]},o($V11,[2,118],{106:$VF1}),{22:[1,276]},o($Vt1,[2,124]),o($V11,[2,98],{106:$VF1}),o($V11,[2,99],{106:$VF1}),o($V11,[2,100],{115:100,117:178,26:$VK,52:$VL,66:$VM,67:$VN,91:$VO,105:$VP,106:$VQ,109:$VR,111:$VS,112:$VT,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ}),o($V11,[2,104]),{101:[1,277]},{101:[1,278]},{58:[1,279]},{68:[1,280]},{72:[1,281]},{9:282,20:$VG,21:$VH,23:$VI},o($VF,[2,42]),{22:$Vu1,66:$Vv1,67:$Vw1,86:$Vx1,102:$Vy1,105:$Vz1,107:283,108:244,109:$VA1,110:$VB1,111:$VC1,112:$VD1,113:$VE1},o($VH1,[2,128]),{26:$VK,52:$VL,66:$VM,67:$VN,91:$VO,97:284,105:$VP,106:$VQ,109:$VR,111:$VS,112:$VT,115:100,117:98,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{26:$VK,52:$VL,66:$VM,67:$VN,91:$VO,97:285,105:$VP,106:$VQ,109:$VR,111:$VS,112:$VT,115:100,117:98,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},o($V11,[2,108]),o($V11,[2,114]),o($V$,[2,60]),{22:$V51,24:$V61,26:$V71,38:$V81,39:286,42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:140,84:$Vc1,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},o($V$,[2,68]),o($Vo1,$V5,{17:287}),o($VG1,[2,126],{108:274,22:$Vu1,66:$Vv1,67:$Vw1,86:$Vx1,102:$Vy1,105:$Vz1,109:$VA1,110:$VB1,111:$VC1,112:$VD1,113:$VE1}),o($V11,[2,121],{115:100,117:178,22:[1,288],26:$VK,52:$VL,66:$VM,67:$VN,91:$VO,105:$VP,106:$VQ,109:$VR,111:$VS,112:$VT,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ}),o($V11,[2,122],{115:100,117:178,22:[1,289],26:$VK,52:$VL,66:$VM,67:$VN,91:$VO,105:$VP,106:$VQ,109:$VR,111:$VS,112:$VT,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ}),{22:$V51,24:$V61,26:$V71,38:$V81,41:[1,290],42:$V91,52:$VL,66:$VM,67:$VN,73:$Va1,81:$Vb1,83:201,85:151,86:$Vd1,87:$Ve1,88:$Vf1,89:$Vg1,90:$Vh1,91:$Vi1,92:$Vj1,94:142,95:$Vk1,105:$VP,106:$VQ,109:$Vl1,111:$VS,112:$VT,113:$Vm1,114:$Vn1,115:148,122:$VU,123:$VV,124:$VW,125:$VX,126:$VY,127:$VZ},{18:18,19:19,20:$V6,21:$V7,22:$V8,23:$V9,32:24,33:25,34:26,35:27,36:28,37:29,38:$Va,42:[1,291],43:31,44:$Vb,46:$Vc,48:$Vd,50:35,51:45,52:$Ve,54:46,66:$Vf,67:$Vg,86:$Vh,87:$Vi,88:$Vj,89:$Vk,90:$Vl,91:$Vm,95:$Vn,105:$Vo,106:$Vp,109:$Vq,111:$Vr,112:$Vs,116:47,118:$Vt,119:$Vu,120:$Vv,121:$Vw,122:$Vx,123:$Vy,124:$Vz,125:$VA,126:$VB,127:$VC},{22:$Vu1,66:$Vv1,67:$Vw1,86:$Vx1,96:292,102:$Vy1,105:$Vz1,107:243,108:244,109:$VA1,110:$VB1,111:$VC1,112:$VD1,113:$VE1},{22:$Vu1,66:$Vv1,67:$Vw1,86:$Vx1,96:293,102:$Vy1,105:$Vz1,107:243,108:244,109:$VA1,110:$VB1,111:$VC1,112:$VD1,113:$VE1},o($V$,[2,64]),o($VF,[2,41]),o($V11,[2,119],{106:$VF1}),o($V11,[2,120],{106:$VF1})],\ndefaultActions: {2:[2,1],9:[2,5],10:[2,2],132:[2,7]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n            function lex() {\n            var token;\n            token = tstack.pop() || lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                if (token instanceof Array) {\n                    tstack = token;\n                    token = tstack.pop();\n                }\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var errStr = '';\n            expected = [];\n            for (p in table[state]) {\n                if (this.terminals_[p] && p > TERROR) {\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\n                }\n            }\n            if (lexer.showPosition) {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n            } else {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n            }\n            this.parseError(errStr, {\n                text: lexer.match,\n                token: this.terminals_[symbol] || symbol,\n                line: lexer.yylineno,\n                loc: yyloc,\n                expected: expected\n            });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0: this.begin('open_directive'); return 12; \nbreak;\ncase 1: this.begin('type_directive'); return 13; \nbreak;\ncase 2: this.popState(); this.begin('arg_directive'); return 10; \nbreak;\ncase 3: this.popState(); this.popState(); return 15; \nbreak;\ncase 4:return 14;\nbreak;\ncase 5:/* skip comments */\nbreak;\ncase 6:/* skip comments */\nbreak;\ncase 7: this.begin(\"acc_title\");return 44; \nbreak;\ncase 8: this.popState(); return \"acc_title_value\"; \nbreak;\ncase 9: this.begin(\"acc_descr\");return 46; \nbreak;\ncase 10: this.popState(); return \"acc_descr_value\"; \nbreak;\ncase 11: this.begin(\"acc_descr_multiline\");\nbreak;\ncase 12: this.popState(); \nbreak;\ncase 13:return \"acc_descr_multiline_value\";\nbreak;\ncase 14:this.begin(\"string\");\nbreak;\ncase 15:this.popState();\nbreak;\ncase 16:return \"STR\";\nbreak;\ncase 17:return 86;\nbreak;\ncase 18:return 95;\nbreak;\ncase 19:return 87;\nbreak;\ncase 20:return 104;\nbreak;\ncase 21:return 88;\nbreak;\ncase 22:return 89;\nbreak;\ncase 23:this.begin(\"href\");\nbreak;\ncase 24:this.popState();\nbreak;\ncase 25:return 100;\nbreak;\ncase 26:this.begin(\"callbackname\");\nbreak;\ncase 27:this.popState();\nbreak;\ncase 28:this.popState(); this.begin(\"callbackargs\");\nbreak;\ncase 29:return 98;\nbreak;\ncase 30:this.popState();\nbreak;\ncase 31:return 99;\nbreak;\ncase 32:this.begin(\"click\");\nbreak;\ncase 33:this.popState();\nbreak;\ncase 34:return 90;\nbreak;\ncase 35:if(yy.lex.firstGraph()){this.begin(\"dir\");}  return 24;\nbreak;\ncase 36:if(yy.lex.firstGraph()){this.begin(\"dir\");}  return 24;\nbreak;\ncase 37:return 38;\nbreak;\ncase 38:return 42;\nbreak;\ncase 39:return 101;\nbreak;\ncase 40:return 101;\nbreak;\ncase 41:return 101;\nbreak;\ncase 42:return 101;\nbreak;\ncase 43:   this.popState();  return 25; \nbreak;\ncase 44:   this.popState();  return 26; \nbreak;\ncase 45:   this.popState();  return 26; \nbreak;\ncase 46:   this.popState();  return 26; \nbreak;\ncase 47:   this.popState();  return 26; \nbreak;\ncase 48:   this.popState();  return 26; \nbreak;\ncase 49:   this.popState();  return 26; \nbreak;\ncase 50:   this.popState();  return 26; \nbreak;\ncase 51:   this.popState();  return 26; \nbreak;\ncase 52:   this.popState();  return 26; \nbreak;\ncase 53:   this.popState();  return 26; \nbreak;\ncase 54:return 118;\nbreak;\ncase 55:return 119;\nbreak;\ncase 56:return 120;\nbreak;\ncase 57:return 121;\nbreak;\ncase 58: return 105;\nbreak;\ncase 59:return 111;\nbreak;\ncase 60:return 53;\nbreak;\ncase 61:return 67;\nbreak;\ncase 62:return 52;\nbreak;\ncase 63:return 20;\nbreak;\ncase 64:return 106;\nbreak;\ncase 65:return 126;\nbreak;\ncase 66:return 82;\nbreak;\ncase 67:return 82;\nbreak;\ncase 68:return 82;\nbreak;\ncase 69:return 81;\nbreak;\ncase 70:return 81;\nbreak;\ncase 71:return 81;\nbreak;\ncase 72:return 59;\nbreak;\ncase 73:return 60;\nbreak;\ncase 74:return 61;\nbreak;\ncase 75:return 62;\nbreak;\ncase 76:return 63;\nbreak;\ncase 77:return 64;\nbreak;\ncase 78:return 65;\nbreak;\ncase 79:return 69;\nbreak;\ncase 80:return 70;\nbreak;\ncase 81:return 55;\nbreak;\ncase 82:return 56;\nbreak;\ncase 83:return 109;\nbreak;\ncase 84:return 112;\nbreak;\ncase 85:return 127;\nbreak;\ncase 86:return 124;\nbreak;\ncase 87:return 113;\nbreak;\ncase 88:return 125;\nbreak;\ncase 89:return 125;\nbreak;\ncase 90:return 114;\nbreak;\ncase 91:return 73;\nbreak;\ncase 92:return 92;\nbreak;\ncase 93:return 'SEP';\nbreak;\ncase 94:return 91;\nbreak;\ncase 95:return 66;\nbreak;\ncase 96:return 75;\nbreak;\ncase 97:return 74;\nbreak;\ncase 98:return 77;\nbreak;\ncase 99:return 76;\nbreak;\ncase 100:return 122;\nbreak;\ncase 101:return 123;\nbreak;\ncase 102:return 68;\nbreak;\ncase 103:return 57;\nbreak;\ncase 104:return 58;\nbreak;\ncase 105:return 40;\nbreak;\ncase 106:return 41;\nbreak;\ncase 107:return 71\nbreak;\ncase 108:return 72\nbreak;\ncase 109:return 133;\nbreak;\ncase 110:return 21;\nbreak;\ncase 111:return 22;\nbreak;\ncase 112:return 23;\nbreak;\n}\n},\nrules: [/^(?:%%\\{)/,/^(?:((?:(?!\\}%%)[^:.])*))/,/^(?::)/,/^(?:\\}%%)/,/^(?:((?:(?!\\}%%).|\\n)*))/,/^(?:%%(?!\\{)[^\\n]*)/,/^(?:[^\\}]%%[^\\n]*)/,/^(?:accTitle\\s*:\\s*)/,/^(?:(?!\\n||)*[^\\n]*)/,/^(?:accDescr\\s*:\\s*)/,/^(?:(?!\\n||)*[^\\n]*)/,/^(?:accDescr\\s*\\{\\s*)/,/^(?:[\\}])/,/^(?:[^\\}]*)/,/^(?:[\"])/,/^(?:[\"])/,/^(?:[^\"]*)/,/^(?:style\\b)/,/^(?:default\\b)/,/^(?:linkStyle\\b)/,/^(?:interpolate\\b)/,/^(?:classDef\\b)/,/^(?:class\\b)/,/^(?:href[\\s]+[\"])/,/^(?:[\"])/,/^(?:[^\"]*)/,/^(?:call[\\s]+)/,/^(?:\\([\\s]*\\))/,/^(?:\\()/,/^(?:[^(]*)/,/^(?:\\))/,/^(?:[^)]*)/,/^(?:click[\\s]+)/,/^(?:[\\s\\n])/,/^(?:[^\\s\\n]*)/,/^(?:graph\\b)/,/^(?:flowchart\\b)/,/^(?:subgraph\\b)/,/^(?:end\\b\\s*)/,/^(?:_self\\b)/,/^(?:_blank\\b)/,/^(?:_parent\\b)/,/^(?:_top\\b)/,/^(?:(\\r?\\n)*\\s*\\n)/,/^(?:\\s*LR\\b)/,/^(?:\\s*RL\\b)/,/^(?:\\s*TB\\b)/,/^(?:\\s*BT\\b)/,/^(?:\\s*TD\\b)/,/^(?:\\s*BR\\b)/,/^(?:\\s*<)/,/^(?:\\s*>)/,/^(?:\\s*\\^)/,/^(?:\\s*v\\b)/,/^(?:.*direction\\s+TB[^\\n]*)/,/^(?:.*direction\\s+BT[^\\n]*)/,/^(?:.*direction\\s+RL[^\\n]*)/,/^(?:.*direction\\s+LR[^\\n]*)/,/^(?:[0-9]+)/,/^(?:#)/,/^(?::::)/,/^(?::)/,/^(?:&)/,/^(?:;)/,/^(?:,)/,/^(?:\\*)/,/^(?:\\s*[xo<]?--+[-xo>]\\s*)/,/^(?:\\s*[xo<]?==+[=xo>]\\s*)/,/^(?:\\s*[xo<]?-?\\.+-[xo>]?\\s*)/,/^(?:\\s*[xo<]?--\\s*)/,/^(?:\\s*[xo<]?==\\s*)/,/^(?:\\s*[xo<]?-\\.\\s*)/,/^(?:\\(-)/,/^(?:-\\))/,/^(?:\\(\\[)/,/^(?:\\]\\))/,/^(?:\\[\\[)/,/^(?:\\]\\])/,/^(?:\\[\\|)/,/^(?:\\[\\()/,/^(?:\\)\\])/,/^(?:\\(\\(\\()/,/^(?:\\)\\)\\))/,/^(?:-)/,/^(?:\\.)/,/^(?:[\\_])/,/^(?:\\+)/,/^(?:%)/,/^(?:=)/,/^(?:=)/,/^(?:<)/,/^(?:>)/,/^(?:\\^)/,/^(?:\\\\\\|)/,/^(?:v\\b)/,/^(?:[A-Za-z]+)/,/^(?:\\\\\\])/,/^(?:\\[\\/)/,/^(?:\\/\\])/,/^(?:\\[\\\\)/,/^(?:[!\"#$%&'*+,-.`?\\\\_/])/,/^(?:[\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6]|[\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377]|[\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5]|[\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA]|[\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE]|[\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA]|[\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0]|[\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977]|[\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2]|[\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A]|[\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39]|[\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8]|[\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C]|[\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C]|[\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99]|[\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0]|[\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D]|[\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3]|[\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10]|[\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1]|[\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81]|[\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3]|[\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6]|[\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A]|[\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081]|[\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D]|[\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0]|[\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310]|[\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C]|[\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711]|[\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7]|[\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C]|[\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16]|[\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF]|[\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC]|[\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D]|[\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D]|[\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3]|[\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F]|[\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128]|[\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184]|[\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3]|[\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6]|[\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE]|[\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C]|[\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D]|[\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC]|[\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B]|[\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788]|[\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805]|[\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB]|[\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28]|[\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5]|[\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4]|[\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E]|[\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D]|[\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36]|[\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D]|[\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC]|[\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF]|[\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC])/,/^(?:\\|)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\{)/,/^(?:\\})/,/^(?:\")/,/^(?:(\\r?\\n)+)/,/^(?:\\s)/,/^(?:$)/],\nconditions: {\"close_directive\":{\"rules\":[],\"inclusive\":false},\"arg_directive\":{\"rules\":[3,4],\"inclusive\":false},\"type_directive\":{\"rules\":[2,3],\"inclusive\":false},\"open_directive\":{\"rules\":[1],\"inclusive\":false},\"callbackargs\":{\"rules\":[30,31],\"inclusive\":false},\"callbackname\":{\"rules\":[27,28,29],\"inclusive\":false},\"href\":{\"rules\":[24,25],\"inclusive\":false},\"click\":{\"rules\":[33,34],\"inclusive\":false},\"vertex\":{\"rules\":[],\"inclusive\":false},\"dir\":{\"rules\":[43,44,45,46,47,48,49,50,51,52,53],\"inclusive\":false},\"acc_descr_multiline\":{\"rules\":[12,13],\"inclusive\":false},\"acc_descr\":{\"rules\":[10],\"inclusive\":false},\"acc_title\":{\"rules\":[8],\"inclusive\":false},\"string\":{\"rules\":[15,16],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,5,6,7,9,11,14,17,18,19,20,21,22,23,26,32,35,36,37,38,39,40,41,42,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,3],$V1=[1,5],$V2=[7,9,11,12,13,14,15,16,17,18,19,20,22,24,25,27,34,39],$V3=[1,15],$V4=[1,16],$V5=[1,17],$V6=[1,18],$V7=[1,19],$V8=[1,20],$V9=[1,21],$Va=[1,22],$Vb=[1,23],$Vc=[1,24],$Vd=[1,25],$Ve=[1,26],$Vf=[1,28],$Vg=[1,30],$Vh=[1,33],$Vi=[5,7,9,11,12,13,14,15,16,17,18,19,20,22,24,25,27,34,39];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"directive\":4,\"gantt\":5,\"document\":6,\"EOF\":7,\"line\":8,\"SPACE\":9,\"statement\":10,\"NL\":11,\"dateFormat\":12,\"inclusiveEndDates\":13,\"topAxis\":14,\"axisFormat\":15,\"excludes\":16,\"includes\":17,\"todayMarker\":18,\"title\":19,\"acc_title\":20,\"acc_title_value\":21,\"acc_descr\":22,\"acc_descr_value\":23,\"acc_descr_multiline_value\":24,\"section\":25,\"clickStatement\":26,\"taskTxt\":27,\"taskData\":28,\"openDirective\":29,\"typeDirective\":30,\"closeDirective\":31,\":\":32,\"argDirective\":33,\"click\":34,\"callbackname\":35,\"callbackargs\":36,\"href\":37,\"clickStatementDebug\":38,\"open_directive\":39,\"type_directive\":40,\"arg_directive\":41,\"close_directive\":42,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"gantt\",7:\"EOF\",9:\"SPACE\",11:\"NL\",12:\"dateFormat\",13:\"inclusiveEndDates\",14:\"topAxis\",15:\"axisFormat\",16:\"excludes\",17:\"includes\",18:\"todayMarker\",19:\"title\",20:\"acc_title\",21:\"acc_title_value\",22:\"acc_descr\",23:\"acc_descr_value\",24:\"acc_descr_multiline_value\",25:\"section\",27:\"taskTxt\",28:\"taskData\",32:\":\",34:\"click\",35:\"callbackname\",36:\"callbackargs\",37:\"href\",39:\"open_directive\",40:\"type_directive\",41:\"arg_directive\",42:\"close_directive\"},\nproductions_: [0,[3,2],[3,3],[6,0],[6,2],[8,2],[8,1],[8,1],[8,1],[10,1],[10,1],[10,1],[10,1],[10,1],[10,1],[10,1],[10,1],[10,2],[10,2],[10,1],[10,1],[10,1],[10,2],[10,1],[4,4],[4,6],[26,2],[26,3],[26,3],[26,4],[26,3],[26,4],[26,2],[38,2],[38,3],[38,3],[38,4],[38,3],[38,4],[38,2],[29,1],[30,1],[33,1],[31,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 2:\n return $$[$0-1]; \nbreak;\ncase 3:\n this.$ = [] \nbreak;\ncase 4:\n$$[$0-1].push($$[$0]);this.$ = $$[$0-1]\nbreak;\ncase 5: case 6:\n this.$ = $$[$0] \nbreak;\ncase 7: case 8:\n this.$=[];\nbreak;\ncase 9:\nyy.setDateFormat($$[$0].substr(11));this.$=$$[$0].substr(11);\nbreak;\ncase 10:\nyy.enableInclusiveEndDates();this.$=$$[$0].substr(18);\nbreak;\ncase 11:\nyy.TopAxis();this.$=$$[$0].substr(8);\nbreak;\ncase 12:\nyy.setAxisFormat($$[$0].substr(11));this.$=$$[$0].substr(11);\nbreak;\ncase 13:\nyy.setExcludes($$[$0].substr(9));this.$=$$[$0].substr(9);\nbreak;\ncase 14:\nyy.setIncludes($$[$0].substr(9));this.$=$$[$0].substr(9);\nbreak;\ncase 15:\nyy.setTodayMarker($$[$0].substr(12));this.$=$$[$0].substr(12);\nbreak;\ncase 16:\nyy.setTitle($$[$0].substr(6));this.$=$$[$0].substr(6);\nbreak;\ncase 17:\n this.$=$$[$0].trim();yy.setTitle(this.$); \nbreak;\ncase 18: case 19:\n this.$=$$[$0].trim();yy.setAccDescription(this.$); \nbreak;\ncase 20:\nyy.addSection($$[$0].substr(8));this.$=$$[$0].substr(8);\nbreak;\ncase 22:\nyy.addTask($$[$0-1],$$[$0]);this.$='task';\nbreak;\ncase 26:\nthis.$ = $$[$0-1];yy.setClickEvent($$[$0-1], $$[$0], null);\nbreak;\ncase 27:\nthis.$ = $$[$0-2];yy.setClickEvent($$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 28:\nthis.$ = $$[$0-2];yy.setClickEvent($$[$0-2], $$[$0-1], null);yy.setLink($$[$0-2],$$[$0]);\nbreak;\ncase 29:\nthis.$ = $$[$0-3];yy.setClickEvent($$[$0-3], $$[$0-2], $$[$0-1]);yy.setLink($$[$0-3],$$[$0]);\nbreak;\ncase 30:\nthis.$ = $$[$0-2];yy.setClickEvent($$[$0-2], $$[$0], null);yy.setLink($$[$0-2],$$[$0-1]);\nbreak;\ncase 31:\nthis.$ = $$[$0-3];yy.setClickEvent($$[$0-3], $$[$0-1], $$[$0]);yy.setLink($$[$0-3],$$[$0-2]);\nbreak;\ncase 32:\nthis.$ = $$[$0-1];yy.setLink($$[$0-1], $$[$0]);\nbreak;\ncase 33: case 39:\nthis.$=$$[$0-1] + ' ' + $$[$0];\nbreak;\ncase 34: case 35: case 37:\nthis.$=$$[$0-2] + ' ' + $$[$0-1] + ' ' + $$[$0];\nbreak;\ncase 36: case 38:\nthis.$=$$[$0-3] + ' ' + $$[$0-2] + ' ' + $$[$0-1] + ' ' + $$[$0];\nbreak;\ncase 40:\n yy.parseDirective('%%{', 'open_directive'); \nbreak;\ncase 41:\n yy.parseDirective($$[$0], 'type_directive'); \nbreak;\ncase 42:\n $$[$0] = $$[$0].trim().replace(/'/g, '\"'); yy.parseDirective($$[$0], 'arg_directive'); \nbreak;\ncase 43:\n yy.parseDirective('}%%', 'close_directive', 'gantt'); \nbreak;\n}\n},\ntable: [{3:1,4:2,5:$V0,29:4,39:$V1},{1:[3]},{3:6,4:2,5:$V0,29:4,39:$V1},o($V2,[2,3],{6:7}),{30:8,40:[1,9]},{40:[2,40]},{1:[2,1]},{4:29,7:[1,10],8:11,9:[1,12],10:13,11:[1,14],12:$V3,13:$V4,14:$V5,15:$V6,16:$V7,17:$V8,18:$V9,19:$Va,20:$Vb,22:$Vc,24:$Vd,25:$Ve,26:27,27:$Vf,29:4,34:$Vg,39:$V1},{31:31,32:[1,32],42:$Vh},o([32,42],[2,41]),o($V2,[2,8],{1:[2,2]}),o($V2,[2,4]),{4:29,10:34,12:$V3,13:$V4,14:$V5,15:$V6,16:$V7,17:$V8,18:$V9,19:$Va,20:$Vb,22:$Vc,24:$Vd,25:$Ve,26:27,27:$Vf,29:4,34:$Vg,39:$V1},o($V2,[2,6]),o($V2,[2,7]),o($V2,[2,9]),o($V2,[2,10]),o($V2,[2,11]),o($V2,[2,12]),o($V2,[2,13]),o($V2,[2,14]),o($V2,[2,15]),o($V2,[2,16]),{21:[1,35]},{23:[1,36]},o($V2,[2,19]),o($V2,[2,20]),o($V2,[2,21]),{28:[1,37]},o($V2,[2,23]),{35:[1,38],37:[1,39]},{11:[1,40]},{33:41,41:[1,42]},{11:[2,43]},o($V2,[2,5]),o($V2,[2,17]),o($V2,[2,18]),o($V2,[2,22]),o($V2,[2,26],{36:[1,43],37:[1,44]}),o($V2,[2,32],{35:[1,45]}),o($Vi,[2,24]),{31:46,42:$Vh},{42:[2,42]},o($V2,[2,27],{37:[1,47]}),o($V2,[2,28]),o($V2,[2,30],{36:[1,48]}),{11:[1,49]},o($V2,[2,29]),o($V2,[2,31]),o($Vi,[2,25])],\ndefaultActions: {5:[2,40],6:[2,1],33:[2,43],42:[2,42]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n            function lex() {\n            var token;\n            token = tstack.pop() || lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                if (token instanceof Array) {\n                    tstack = token;\n                    token = tstack.pop();\n                }\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var errStr = '';\n            expected = [];\n            for (p in table[state]) {\n                if (this.terminals_[p] && p > TERROR) {\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\n                }\n            }\n            if (lexer.showPosition) {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n            } else {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n            }\n            this.parseError(errStr, {\n                text: lexer.match,\n                token: this.terminals_[symbol] || symbol,\n                line: lexer.yylineno,\n                loc: yyloc,\n                expected: expected\n            });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0: this.begin('open_directive'); return 39; \nbreak;\ncase 1: this.begin('type_directive'); return 40; \nbreak;\ncase 2: this.popState(); this.begin('arg_directive'); return 32; \nbreak;\ncase 3: this.popState(); this.popState(); return 42; \nbreak;\ncase 4:return 41;\nbreak;\ncase 5: this.begin(\"acc_title\");return 20; \nbreak;\ncase 6: this.popState(); return \"acc_title_value\"; \nbreak;\ncase 7: this.begin(\"acc_descr\");return 22; \nbreak;\ncase 8: this.popState(); return \"acc_descr_value\"; \nbreak;\ncase 9: this.begin(\"acc_descr_multiline\");\nbreak;\ncase 10: this.popState(); \nbreak;\ncase 11:return \"acc_descr_multiline_value\";\nbreak;\ncase 12:/* skip comments */\nbreak;\ncase 13:/* skip comments */\nbreak;\ncase 14:/* do nothing */\nbreak;\ncase 15:return 11;\nbreak;\ncase 16:/* skip whitespace */\nbreak;\ncase 17:/* skip comments */\nbreak;\ncase 18:/* skip comments */\nbreak;\ncase 19:this.begin(\"href\");\nbreak;\ncase 20:this.popState();\nbreak;\ncase 21:return 37;\nbreak;\ncase 22:this.begin(\"callbackname\");\nbreak;\ncase 23:this.popState();\nbreak;\ncase 24:this.popState(); this.begin(\"callbackargs\");\nbreak;\ncase 25:return 35;\nbreak;\ncase 26:this.popState();\nbreak;\ncase 27:return 36;\nbreak;\ncase 28:this.begin(\"click\");\nbreak;\ncase 29:this.popState();\nbreak;\ncase 30:return 34;\nbreak;\ncase 31:return 5;\nbreak;\ncase 32:return 12;\nbreak;\ncase 33:return 13;\nbreak;\ncase 34:return 14;\nbreak;\ncase 35:return 15;\nbreak;\ncase 36:return 17;\nbreak;\ncase 37:return 16;\nbreak;\ncase 38:return 18;\nbreak;\ncase 39:return 'date';\nbreak;\ncase 40:return 19;\nbreak;\ncase 41:return 'accDescription'\nbreak;\ncase 42:return 25;\nbreak;\ncase 43:return 27;\nbreak;\ncase 44:return 28;\nbreak;\ncase 45:return 32;\nbreak;\ncase 46:return 7;\nbreak;\ncase 47:return 'INVALID';\nbreak;\n}\n},\nrules: [/^(?:%%\\{)/i,/^(?:((?:(?!\\}%%)[^:.])*))/i,/^(?::)/i,/^(?:\\}%%)/i,/^(?:((?:(?!\\}%%).|\\n)*))/i,/^(?:accTitle\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*\\{\\s*)/i,/^(?:[\\}])/i,/^(?:[^\\}]*)/i,/^(?:%%(?!\\{)*[^\\n]*)/i,/^(?:[^\\}]%%*[^\\n]*)/i,/^(?:%%*[^\\n]*[\\n]*)/i,/^(?:[\\n]+)/i,/^(?:\\s+)/i,/^(?:#[^\\n]*)/i,/^(?:%[^\\n]*)/i,/^(?:href[\\s]+[\"])/i,/^(?:[\"])/i,/^(?:[^\"]*)/i,/^(?:call[\\s]+)/i,/^(?:\\([\\s]*\\))/i,/^(?:\\()/i,/^(?:[^(]*)/i,/^(?:\\))/i,/^(?:[^)]*)/i,/^(?:click[\\s]+)/i,/^(?:[\\s\\n])/i,/^(?:[^\\s\\n]*)/i,/^(?:gantt\\b)/i,/^(?:dateFormat\\s[^#\\n;]+)/i,/^(?:inclusiveEndDates\\b)/i,/^(?:topAxis\\b)/i,/^(?:axisFormat\\s[^#\\n;]+)/i,/^(?:includes\\s[^#\\n;]+)/i,/^(?:excludes\\s[^#\\n;]+)/i,/^(?:todayMarker\\s[^\\n;]+)/i,/^(?:\\d\\d\\d\\d-\\d\\d-\\d\\d\\b)/i,/^(?:title\\s[^#\\n;]+)/i,/^(?:accDescription\\s[^#\\n;]+)/i,/^(?:section\\s[^#:\\n;]+)/i,/^(?:[^#:\\n;]+)/i,/^(?::[^#\\n;]+)/i,/^(?::)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"acc_descr_multiline\":{\"rules\":[10,11],\"inclusive\":false},\"acc_descr\":{\"rules\":[8],\"inclusive\":false},\"acc_title\":{\"rules\":[6],\"inclusive\":false},\"close_directive\":{\"rules\":[],\"inclusive\":false},\"arg_directive\":{\"rules\":[3,4],\"inclusive\":false},\"type_directive\":{\"rules\":[2,3],\"inclusive\":false},\"open_directive\":{\"rules\":[1],\"inclusive\":false},\"callbackargs\":{\"rules\":[26,27],\"inclusive\":false},\"callbackname\":{\"rules\":[23,24,25],\"inclusive\":false},\"href\":{\"rules\":[20,21],\"inclusive\":false},\"click\":{\"rules\":[29,30],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,5,7,9,12,13,14,15,16,17,18,19,22,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,7],$V2=[1,5],$V3=[1,9],$V4=[1,6],$V5=[2,6],$V6=[1,16],$V7=[6,8,14,19,21,23,24,26,28,31,34,47,51],$V8=[8,14,19,21,23,24,26,28,31,34],$V9=[8,13,14,19,21,23,24,26,28,31,34],$Va=[1,26],$Vb=[6,8,14,47,51],$Vc=[8,14,51],$Vd=[1,61],$Ve=[1,62],$Vf=[1,63],$Vg=[8,14,32,38,39,51];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"eol\":4,\"directive\":5,\"GG\":6,\"document\":7,\"EOF\":8,\":\":9,\"DIR\":10,\"options\":11,\"body\":12,\"OPT\":13,\"NL\":14,\"line\":15,\"statement\":16,\"commitStatement\":17,\"mergeStatement\":18,\"acc_title\":19,\"acc_title_value\":20,\"acc_descr\":21,\"acc_descr_value\":22,\"acc_descr_multiline_value\":23,\"section\":24,\"branchStatement\":25,\"CHECKOUT\":26,\"ID\":27,\"BRANCH\":28,\"ORDER\":29,\"NUM\":30,\"MERGE\":31,\"COMMIT_TAG\":32,\"STR\":33,\"COMMIT\":34,\"commit_arg\":35,\"COMMIT_TYPE\":36,\"commitType\":37,\"COMMIT_ID\":38,\"COMMIT_MSG\":39,\"NORMAL\":40,\"REVERSE\":41,\"HIGHLIGHT\":42,\"openDirective\":43,\"typeDirective\":44,\"closeDirective\":45,\"argDirective\":46,\"open_directive\":47,\"type_directive\":48,\"arg_directive\":49,\"close_directive\":50,\";\":51,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",6:\"GG\",8:\"EOF\",9:\":\",10:\"DIR\",13:\"OPT\",14:\"NL\",19:\"acc_title\",20:\"acc_title_value\",21:\"acc_descr\",22:\"acc_descr_value\",23:\"acc_descr_multiline_value\",24:\"section\",26:\"CHECKOUT\",27:\"ID\",28:\"BRANCH\",29:\"ORDER\",30:\"NUM\",31:\"MERGE\",32:\"COMMIT_TAG\",33:\"STR\",34:\"COMMIT\",36:\"COMMIT_TYPE\",38:\"COMMIT_ID\",39:\"COMMIT_MSG\",40:\"NORMAL\",41:\"REVERSE\",42:\"HIGHLIGHT\",47:\"open_directive\",48:\"type_directive\",49:\"arg_directive\",50:\"close_directive\",51:\";\"},\nproductions_: [0,[3,2],[3,2],[3,3],[3,4],[3,5],[7,0],[7,2],[11,2],[11,1],[12,0],[12,2],[15,2],[15,1],[16,1],[16,1],[16,2],[16,2],[16,1],[16,1],[16,1],[16,2],[25,2],[25,4],[18,2],[18,4],[17,2],[17,3],[17,3],[17,5],[17,5],[17,3],[17,5],[17,5],[17,5],[17,5],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,3],[17,5],[17,5],[17,5],[17,5],[17,5],[17,5],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[35,0],[35,1],[37,1],[37,1],[37,1],[5,3],[5,5],[43,1],[44,1],[46,1],[45,1],[4,1],[4,1],[4,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 3:\n return $$[$0]; \nbreak;\ncase 4:\n return $$[$0-1]; \nbreak;\ncase 5:\nyy.setDirection($$[$0-3]); return $$[$0-1];\nbreak;\ncase 7:\n yy.setOptions($$[$0-1]); this.$ = $$[$0]\nbreak;\ncase 8:\n$$[$0-1] +=$$[$0]; this.$=$$[$0-1]\nbreak;\ncase 10:\nthis.$ = []\nbreak;\ncase 11:\n$$[$0-1].push($$[$0]); this.$=$$[$0-1];\nbreak;\ncase 12:\nthis.$ =$$[$0-1]\nbreak;\ncase 16:\n this.$=$$[$0].trim();yy.setTitle(this.$); \nbreak;\ncase 17: case 18:\n this.$=$$[$0].trim();yy.setAccDescription(this.$); \nbreak;\ncase 19:\nyy.addSection($$[$0].substr(8));this.$=$$[$0].substr(8);\nbreak;\ncase 21:\nyy.checkout($$[$0])\nbreak;\ncase 22:\nyy.branch($$[$0])\nbreak;\ncase 23:\nyy.branch($$[$0-2], $$[$0])\nbreak;\ncase 24:\nyy.merge($$[$0])\nbreak;\ncase 25:\nyy.merge($$[$0-2], $$[$0])\nbreak;\ncase 26:\nyy.commit($$[$0])\nbreak;\ncase 27:\nyy.commit('','',yy.commitType.NORMAL,$$[$0])\nbreak;\ncase 28:\nyy.commit('','',$$[$0],'')\nbreak;\ncase 29:\nyy.commit('','',$$[$0],$$[$0-2])\nbreak;\ncase 30:\nyy.commit('','',$$[$0-2],$$[$0])\nbreak;\ncase 31:\nyy.commit('',$$[$0],yy.commitType.NORMAL,'')\nbreak;\ncase 32:\nyy.commit('',$$[$0-2],yy.commitType.NORMAL,$$[$0])\nbreak;\ncase 33:\nyy.commit('',$$[$0],yy.commitType.NORMAL,$$[$0-2])\nbreak;\ncase 34:\nyy.commit('',$$[$0-2],$$[$0],'')\nbreak;\ncase 35:\nyy.commit('',$$[$0],$$[$0-2],'')\nbreak;\ncase 36:\nyy.commit('',$$[$0-4],$$[$0-2],$$[$0])\nbreak;\ncase 37:\nyy.commit('',$$[$0-4],$$[$0],$$[$0-2])\nbreak;\ncase 38:\nyy.commit('',$$[$0-2],$$[$0-4],$$[$0])\nbreak;\ncase 39:\nyy.commit('',$$[$0],$$[$0-4],$$[$0-2])\nbreak;\ncase 40:\nyy.commit('',$$[$0],$$[$0-2],$$[$0-4])\nbreak;\ncase 41:\nyy.commit('',$$[$0-2],$$[$0],$$[$0-4])\nbreak;\ncase 42:\nyy.commit($$[$0],'',yy.commitType.NORMAL,'')\nbreak;\ncase 43:\nyy.commit($$[$0],'',yy.commitType.NORMAL,$$[$0-2])\nbreak;\ncase 44:\nyy.commit($$[$0-2],'',yy.commitType.NORMAL,$$[$0])\nbreak;\ncase 45:\nyy.commit($$[$0-2],'',$$[$0],'')\nbreak;\ncase 46:\nyy.commit($$[$0],'',$$[$0-2],'')\nbreak;\ncase 47:\nyy.commit($$[$0],$$[$0-2],yy.commitType.NORMAL,'')\nbreak;\ncase 48:\nyy.commit($$[$0-2],$$[$0],yy.commitType.NORMAL,'')\nbreak;\ncase 49:\nyy.commit($$[$0-4],'',$$[$0-2],$$[$0])\nbreak;\ncase 50:\nyy.commit($$[$0-4],'',$$[$0],$$[$0-2])\nbreak;\ncase 51:\nyy.commit($$[$0-2],'',$$[$0-4],$$[$0])\nbreak;\ncase 52:\nyy.commit($$[$0],'',$$[$0-4],$$[$0-2])\nbreak;\ncase 53:\nyy.commit($$[$0],'',$$[$0-2],$$[$0-4])\nbreak;\ncase 54:\nyy.commit($$[$0-2],'',$$[$0],$$[$0-4])\nbreak;\ncase 55:\nyy.commit($$[$0-4],$$[$0],$$[$0-2],'')\nbreak;\ncase 56:\nyy.commit($$[$0-4],$$[$0-2],$$[$0],'')\nbreak;\ncase 57:\nyy.commit($$[$0-2],$$[$0],$$[$0-4],'')\nbreak;\ncase 58:\nyy.commit($$[$0],$$[$0-2],$$[$0-4],'')\nbreak;\ncase 59:\nyy.commit($$[$0],$$[$0-4],$$[$0-2],'')\nbreak;\ncase 60:\nyy.commit($$[$0-2],$$[$0-4],$$[$0],'')\nbreak;\ncase 61:\nyy.commit($$[$0-4],$$[$0],yy.commitType.NORMAL,$$[$0-2])\nbreak;\ncase 62:\nyy.commit($$[$0-4],$$[$0-2],yy.commitType.NORMAL,$$[$0])\nbreak;\ncase 63:\nyy.commit($$[$0-2],$$[$0],yy.commitType.NORMAL,$$[$0-4])\nbreak;\ncase 64:\nyy.commit($$[$0],$$[$0-2],yy.commitType.NORMAL,$$[$0-4])\nbreak;\ncase 65:\nyy.commit($$[$0],$$[$0-4],yy.commitType.NORMAL,$$[$0-2])\nbreak;\ncase 66:\nyy.commit($$[$0-2],$$[$0-4],yy.commitType.NORMAL,$$[$0])\nbreak;\ncase 67:\nyy.commit($$[$0-6],$$[$0-4],$$[$0-2],$$[$0])\nbreak;\ncase 68:\nyy.commit($$[$0-6],$$[$0-4],$$[$0],$$[$0-2])\nbreak;\ncase 69:\nyy.commit($$[$0-6],$$[$0-2],$$[$0-4],$$[$0])\nbreak;\ncase 70:\nyy.commit($$[$0-6],$$[$0],$$[$0-4],$$[$0-2])\nbreak;\ncase 71:\nyy.commit($$[$0-6],$$[$0-2],$$[$0],$$[$0-4])\nbreak;\ncase 72:\nyy.commit($$[$0-6],$$[$0],$$[$0-2],$$[$0-4])\nbreak;\ncase 73:\nyy.commit($$[$0-4],$$[$0-6],$$[$0-2],$$[$0])\nbreak;\ncase 74:\nyy.commit($$[$0-4],$$[$0-6],$$[$0],$$[$0-2])\nbreak;\ncase 75:\nyy.commit($$[$0-2],$$[$0-6],$$[$0-4],$$[$0])\nbreak;\ncase 76:\nyy.commit($$[$0],$$[$0-6],$$[$0-4],$$[$0-2])\nbreak;\ncase 77:\nyy.commit($$[$0-2],$$[$0-6],$$[$0],$$[$0-4])\nbreak;\ncase 78:\nyy.commit($$[$0],$$[$0-6],$$[$0-2],$$[$0-4])\nbreak;\ncase 79:\nyy.commit($$[$0],$$[$0-4],$$[$0-2],$$[$0-6])\nbreak;\ncase 80:\nyy.commit($$[$0-2],$$[$0-4],$$[$0],$$[$0-6])\nbreak;\ncase 81:\nyy.commit($$[$0],$$[$0-2],$$[$0-4],$$[$0-6])\nbreak;\ncase 82:\nyy.commit($$[$0-2],$$[$0],$$[$0-4],$$[$0-6])\nbreak;\ncase 83:\nyy.commit($$[$0-4],$$[$0-2],$$[$0],$$[$0-6])\nbreak;\ncase 84:\nyy.commit($$[$0-4],$$[$0],$$[$0-2],$$[$0-6])\nbreak;\ncase 85:\nyy.commit($$[$0-2],$$[$0-4],$$[$0-6],$$[$0])\nbreak;\ncase 86:\nyy.commit($$[$0],$$[$0-4],$$[$0-6],$$[$0-2])\nbreak;\ncase 87:\nyy.commit($$[$0-2],$$[$0],$$[$0-6],$$[$0-4])\nbreak;\ncase 88:\nyy.commit($$[$0],$$[$0-2],$$[$0-6],$$[$0-4])\nbreak;\ncase 89:\nyy.commit($$[$0-4],$$[$0-2],$$[$0-6],$$[$0])\nbreak;\ncase 90:\nyy.commit($$[$0-4],$$[$0],$$[$0-6],$$[$0-2])\nbreak;\ncase 91:\nthis.$ = \"\"\nbreak;\ncase 92:\nthis.$=$$[$0]\nbreak;\ncase 93:\n this.$=yy.commitType.NORMAL;\nbreak;\ncase 94:\n this.$=yy.commitType.REVERSE;\nbreak;\ncase 95:\n this.$=yy.commitType.HIGHLIGHT;\nbreak;\ncase 98:\n yy.parseDirective('%%{', 'open_directive'); \nbreak;\ncase 99:\n yy.parseDirective($$[$0], 'type_directive'); \nbreak;\ncase 100:\n $$[$0] = $$[$0].trim().replace(/'/g, '\"'); yy.parseDirective($$[$0], 'arg_directive'); \nbreak;\ncase 101:\n yy.parseDirective('}%%', 'close_directive', 'gitGraph'); \nbreak;\n}\n},\ntable: [{3:1,4:2,5:3,6:$V0,8:$V1,14:$V2,43:8,47:$V3,51:$V4},{1:[3]},{3:10,4:2,5:3,6:$V0,8:$V1,14:$V2,43:8,47:$V3,51:$V4},{3:11,4:2,5:3,6:$V0,8:$V1,14:$V2,43:8,47:$V3,51:$V4},{7:12,8:$V5,9:[1,13],10:[1,14],11:15,14:$V6},o($V7,[2,102]),o($V7,[2,103]),o($V7,[2,104]),{44:17,48:[1,18]},{48:[2,98]},{1:[2,1]},{1:[2,2]},{8:[1,19]},{7:20,8:$V5,11:15,14:$V6},{9:[1,21]},o($V8,[2,10],{12:22,13:[1,23]}),o($V9,[2,9]),{9:[1,25],45:24,50:$Va},o([9,50],[2,99]),{1:[2,3]},{8:[1,27]},{7:28,8:$V5,11:15,14:$V6},{8:[2,7],14:[1,31],15:29,16:30,17:32,18:33,19:[1,34],21:[1,35],23:[1,36],24:[1,37],25:38,26:[1,39],28:[1,42],31:[1,41],34:[1,40]},o($V9,[2,8]),o($Vb,[2,96]),{46:43,49:[1,44]},o($Vb,[2,101]),{1:[2,4]},{8:[1,45]},o($V8,[2,11]),{4:46,8:$V1,14:$V2,51:$V4},o($V8,[2,13]),o($Vc,[2,14]),o($Vc,[2,15]),{20:[1,47]},{22:[1,48]},o($Vc,[2,18]),o($Vc,[2,19]),o($Vc,[2,20]),{27:[1,49]},o($Vc,[2,91],{35:50,32:[1,51],33:[1,55],36:[1,52],38:[1,53],39:[1,54]}),{27:[1,56]},{27:[1,57]},{45:58,50:$Va},{50:[2,100]},{1:[2,5]},o($V8,[2,12]),o($Vc,[2,16]),o($Vc,[2,17]),o($Vc,[2,21]),o($Vc,[2,26]),{33:[1,59]},{37:60,40:$Vd,41:$Ve,42:$Vf},{33:[1,64]},{33:[1,65]},o($Vc,[2,92]),o($Vc,[2,24],{32:[1,66]}),o($Vc,[2,22],{29:[1,67]}),o($Vb,[2,97]),o($Vc,[2,27],{36:[1,68],38:[1,69],39:[1,70]}),o($Vc,[2,28],{32:[1,71],38:[1,72],39:[1,73]}),o($Vg,[2,93]),o($Vg,[2,94]),o($Vg,[2,95]),o($Vc,[2,31],{32:[1,74],36:[1,75],39:[1,76]}),o($Vc,[2,42],{32:[1,77],36:[1,78],38:[1,79]}),{33:[1,80]},{30:[1,81]},{37:82,40:$Vd,41:$Ve,42:$Vf},{33:[1,83]},{33:[1,84]},{33:[1,85]},{33:[1,86]},{33:[1,87]},{33:[1,88]},{37:89,40:$Vd,41:$Ve,42:$Vf},{33:[1,90]},{33:[1,91]},{37:92,40:$Vd,41:$Ve,42:$Vf},{33:[1,93]},o($Vc,[2,25]),o($Vc,[2,23]),o($Vc,[2,29],{38:[1,94],39:[1,95]}),o($Vc,[2,33],{36:[1,96],39:[1,97]}),o($Vc,[2,43],{36:[1,98],38:[1,99]}),o($Vc,[2,30],{38:[1,100],39:[1,101]}),o($Vc,[2,35],{32:[1,102],39:[1,103]}),o($Vc,[2,46],{32:[1,104],38:[1,105]}),o($Vc,[2,32],{36:[1,106],39:[1,107]}),o($Vc,[2,34],{32:[1,108],39:[1,109]}),o($Vc,[2,47],{32:[1,111],36:[1,110]}),o($Vc,[2,44],{36:[1,112],38:[1,113]}),o($Vc,[2,45],{32:[1,114],38:[1,115]}),o($Vc,[2,48],{32:[1,117],36:[1,116]}),{33:[1,118]},{33:[1,119]},{37:120,40:$Vd,41:$Ve,42:$Vf},{33:[1,121]},{37:122,40:$Vd,41:$Ve,42:$Vf},{33:[1,123]},{33:[1,124]},{33:[1,125]},{33:[1,126]},{33:[1,127]},{33:[1,128]},{33:[1,129]},{37:130,40:$Vd,41:$Ve,42:$Vf},{33:[1,131]},{33:[1,132]},{33:[1,133]},{37:134,40:$Vd,41:$Ve,42:$Vf},{33:[1,135]},{37:136,40:$Vd,41:$Ve,42:$Vf},{33:[1,137]},{33:[1,138]},{33:[1,139]},{37:140,40:$Vd,41:$Ve,42:$Vf},{33:[1,141]},o($Vc,[2,40],{39:[1,142]}),o($Vc,[2,53],{38:[1,143]}),o($Vc,[2,41],{39:[1,144]}),o($Vc,[2,64],{36:[1,145]}),o($Vc,[2,54],{38:[1,146]}),o($Vc,[2,63],{36:[1,147]}),o($Vc,[2,39],{39:[1,148]}),o($Vc,[2,52],{38:[1,149]}),o($Vc,[2,38],{39:[1,150]}),o($Vc,[2,58],{32:[1,151]}),o($Vc,[2,51],{38:[1,152]}),o($Vc,[2,57],{32:[1,153]}),o($Vc,[2,37],{39:[1,154]}),o($Vc,[2,65],{36:[1,155]}),o($Vc,[2,36],{39:[1,156]}),o($Vc,[2,59],{32:[1,157]}),o($Vc,[2,60],{32:[1,158]}),o($Vc,[2,66],{36:[1,159]}),o($Vc,[2,50],{38:[1,160]}),o($Vc,[2,61],{36:[1,161]}),o($Vc,[2,49],{38:[1,162]}),o($Vc,[2,55],{32:[1,163]}),o($Vc,[2,56],{32:[1,164]}),o($Vc,[2,62],{36:[1,165]}),{33:[1,166]},{33:[1,167]},{33:[1,168]},{37:169,40:$Vd,41:$Ve,42:$Vf},{33:[1,170]},{37:171,40:$Vd,41:$Ve,42:$Vf},{33:[1,172]},{33:[1,173]},{33:[1,174]},{33:[1,175]},{33:[1,176]},{33:[1,177]},{33:[1,178]},{37:179,40:$Vd,41:$Ve,42:$Vf},{33:[1,180]},{33:[1,181]},{33:[1,182]},{37:183,40:$Vd,41:$Ve,42:$Vf},{33:[1,184]},{37:185,40:$Vd,41:$Ve,42:$Vf},{33:[1,186]},{33:[1,187]},{33:[1,188]},{37:189,40:$Vd,41:$Ve,42:$Vf},o($Vc,[2,81]),o($Vc,[2,82]),o($Vc,[2,79]),o($Vc,[2,80]),o($Vc,[2,84]),o($Vc,[2,83]),o($Vc,[2,88]),o($Vc,[2,87]),o($Vc,[2,86]),o($Vc,[2,85]),o($Vc,[2,90]),o($Vc,[2,89]),o($Vc,[2,78]),o($Vc,[2,77]),o($Vc,[2,76]),o($Vc,[2,75]),o($Vc,[2,73]),o($Vc,[2,74]),o($Vc,[2,72]),o($Vc,[2,71]),o($Vc,[2,70]),o($Vc,[2,69]),o($Vc,[2,67]),o($Vc,[2,68])],\ndefaultActions: {9:[2,98],10:[2,1],11:[2,2],19:[2,3],27:[2,4],44:[2,100],45:[2,5]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n            function lex() {\n            var token;\n            token = tstack.pop() || lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                if (token instanceof Array) {\n                    tstack = token;\n                    token = tstack.pop();\n                }\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var errStr = '';\n            expected = [];\n            for (p in table[state]) {\n                if (this.terminals_[p] && p > TERROR) {\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\n                }\n            }\n            if (lexer.showPosition) {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n            } else {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n            }\n            this.parseError(errStr, {\n                text: lexer.match,\n                token: this.terminals_[symbol] || symbol,\n                line: lexer.yylineno,\n                loc: yyloc,\n                expected: expected\n            });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0: this.begin('open_directive'); return 47; \nbreak;\ncase 1: this.begin('type_directive'); return 48; \nbreak;\ncase 2: this.popState(); this.begin('arg_directive'); return 9; \nbreak;\ncase 3: this.popState(); this.popState(); return 50; \nbreak;\ncase 4:return 49;\nbreak;\ncase 5: this.begin(\"acc_title\");return 19; \nbreak;\ncase 6: this.popState(); return \"acc_title_value\"; \nbreak;\ncase 7: this.begin(\"acc_descr\");return 21; \nbreak;\ncase 8: this.popState(); return \"acc_descr_value\"; \nbreak;\ncase 9: this.begin(\"acc_descr_multiline\");\nbreak;\ncase 10: this.popState(); \nbreak;\ncase 11:return \"acc_descr_multiline_value\";\nbreak;\ncase 12:/*{console.log('New line');return 14;}*/ return 14;\nbreak;\ncase 13:/* skip all whitespace */\nbreak;\ncase 14:/* skip comments */\nbreak;\ncase 15:/* skip comments */\nbreak;\ncase 16:return 6;\nbreak;\ncase 17:return 34;\nbreak;\ncase 18:return 38;\nbreak;\ncase 19:return 36;\nbreak;\ncase 20:return 39;\nbreak;\ncase 21:return 40;\nbreak;\ncase 22:return 41;\nbreak;\ncase 23:return 42;\nbreak;\ncase 24:return 32;\nbreak;\ncase 25:return 28;\nbreak;\ncase 26:return 29;\nbreak;\ncase 27:return 31;\nbreak;\ncase 28:return 26;\nbreak;\ncase 29:return 10;\nbreak;\ncase 30:return 10;\nbreak;\ncase 31:return 9;\nbreak;\ncase 32:return 'CARET'\nbreak;\ncase 33:this.begin(\"options\"); //\nbreak;\ncase 34:this.popState();       // not used anymore in the renderer, fixed for backward compatibility\nbreak;\ncase 35:return 13;          //\nbreak;\ncase 36:this.begin(\"string\");\nbreak;\ncase 37:this.popState();\nbreak;\ncase 38:return 33;\nbreak;\ncase 39:return 30;\nbreak;\ncase 40:return 27;\nbreak;\ncase 41:return 8;\nbreak;\n}\n},\nrules: [/^(?:%%\\{)/i,/^(?:((?:(?!\\}%%)[^:.])*))/i,/^(?::)/i,/^(?:\\}%%)/i,/^(?:((?:(?!\\}%%).|\\n)*))/i,/^(?:accTitle\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*\\{\\s*)/i,/^(?:[\\}])/i,/^(?:[^\\}]*)/i,/^(?:(\\r?\\n)+)/i,/^(?:\\s+)/i,/^(?:#[^\\n]*)/i,/^(?:%[^\\n]*)/i,/^(?:gitGraph\\b)/i,/^(?:commit\\b)/i,/^(?:id:)/i,/^(?:type:)/i,/^(?:msg:)/i,/^(?:NORMAL\\b)/i,/^(?:REVERSE\\b)/i,/^(?:HIGHLIGHT\\b)/i,/^(?:tag:)/i,/^(?:branch\\b)/i,/^(?:order:)/i,/^(?:merge\\b)/i,/^(?:checkout\\b)/i,/^(?:LR\\b)/i,/^(?:BT\\b)/i,/^(?::)/i,/^(?:\\^)/i,/^(?:options\\r?\\n)/i,/^(?:[ \\r\\n\\t]+end\\b)/i,/^(?:[\\s\\S]+(?=[ \\r\\n\\t]+end))/i,/^(?:[\"])/i,/^(?:[\"])/i,/^(?:[^\"]*)/i,/^(?:[0-9]+)/i,/^(?:[a-zA-Z][-_\\./a-zA-Z0-9]*[-_a-zA-Z0-9])/i,/^(?:$)/i],\nconditions: {\"acc_descr_multiline\":{\"rules\":[10,11],\"inclusive\":false},\"acc_descr\":{\"rules\":[8],\"inclusive\":false},\"acc_title\":{\"rules\":[6],\"inclusive\":false},\"close_directive\":{\"rules\":[],\"inclusive\":false},\"arg_directive\":{\"rules\":[3,4],\"inclusive\":false},\"type_directive\":{\"rules\":[2,3],\"inclusive\":false},\"open_directive\":{\"rules\":[1],\"inclusive\":false},\"options\":{\"rules\":[34,35],\"inclusive\":false},\"string\":{\"rules\":[37,38],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,5,7,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,39,40,41],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[6,9,10];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"info\":4,\"document\":5,\"EOF\":6,\"line\":7,\"statement\":8,\"NL\":9,\"showInfo\":10,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"info\",6:\"EOF\",9:\"NL\",10:\"showInfo\"},\nproductions_: [0,[3,3],[5,0],[5,2],[7,1],[7,1],[8,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n return yy; \nbreak;\ncase 4:\n \nbreak;\ncase 6:\n yy.setInfo(true);  \nbreak;\n}\n},\ntable: [{3:1,4:[1,2]},{1:[3]},o($V0,[2,2],{5:3}),{6:[1,4],7:5,8:6,9:[1,7],10:[1,8]},{1:[2,1]},o($V0,[2,3]),o($V0,[2,4]),o($V0,[2,5]),o($V0,[2,6])],\ndefaultActions: {4:[2,1]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n            function lex() {\n            var token;\n            token = tstack.pop() || lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                if (token instanceof Array) {\n                    tstack = token;\n                    token = tstack.pop();\n                }\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var errStr = '';\n            expected = [];\n            for (p in table[state]) {\n                if (this.terminals_[p] && p > TERROR) {\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\n                }\n            }\n            if (lexer.showPosition) {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n            } else {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n            }\n            this.parseError(errStr, {\n                text: lexer.match,\n                token: this.terminals_[symbol] || symbol,\n                line: lexer.yylineno,\n                loc: yyloc,\n                expected: expected\n            });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\n\t// Pre-lexer code can go here\r\n\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 4    ;\nbreak;\ncase 1:return 9      ;\nbreak;\ncase 2:return 'space';\nbreak;\ncase 3:return 10;\nbreak;\ncase 4:return 6     ;\nbreak;\ncase 5:return 'TXT' ;\nbreak;\n}\n},\nrules: [/^(?:info\\b)/i,/^(?:[\\s\\n\\r]+)/i,/^(?:[\\s]+)/i,/^(?:showInfo\\b)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,5],$V2=[1,6],$V3=[1,7],$V4=[1,9],$V5=[1,11,13,15,17,19,20,26,27,28,29],$V6=[2,5],$V7=[1,6,11,13,15,17,19,20,26,27,28,29],$V8=[26,27,28],$V9=[2,8],$Va=[1,18],$Vb=[1,19],$Vc=[1,20],$Vd=[1,21],$Ve=[1,22],$Vf=[1,23],$Vg=[1,28],$Vh=[6,26,27,28,29];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"eol\":4,\"directive\":5,\"PIE\":6,\"document\":7,\"showData\":8,\"line\":9,\"statement\":10,\"txt\":11,\"value\":12,\"title\":13,\"title_value\":14,\"acc_title\":15,\"acc_title_value\":16,\"acc_descr\":17,\"acc_descr_value\":18,\"acc_descr_multiline_value\":19,\"section\":20,\"openDirective\":21,\"typeDirective\":22,\"closeDirective\":23,\":\":24,\"argDirective\":25,\"NEWLINE\":26,\";\":27,\"EOF\":28,\"open_directive\":29,\"type_directive\":30,\"arg_directive\":31,\"close_directive\":32,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",6:\"PIE\",8:\"showData\",11:\"txt\",12:\"value\",13:\"title\",14:\"title_value\",15:\"acc_title\",16:\"acc_title_value\",17:\"acc_descr\",18:\"acc_descr_value\",19:\"acc_descr_multiline_value\",20:\"section\",24:\":\",26:\"NEWLINE\",27:\";\",28:\"EOF\",29:\"open_directive\",30:\"type_directive\",31:\"arg_directive\",32:\"close_directive\"},\nproductions_: [0,[3,2],[3,2],[3,2],[3,3],[7,0],[7,2],[9,2],[10,0],[10,2],[10,2],[10,2],[10,2],[10,1],[10,1],[10,1],[5,3],[5,5],[4,1],[4,1],[4,1],[21,1],[22,1],[25,1],[23,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 4:\nyy.setShowData(true);\nbreak;\ncase 7:\n this.$ = $$[$0-1] \nbreak;\ncase 9:\n yy.addSection($$[$0-1],yy.cleanupValue($$[$0])); \nbreak;\ncase 10:\n this.$=$$[$0].trim();yy.setPieTitle(this.$); \nbreak;\ncase 11:\n this.$=$$[$0].trim();yy.setTitle(this.$); \nbreak;\ncase 12: case 13:\n this.$=$$[$0].trim();yy.setAccDescription(this.$); \nbreak;\ncase 14:\nyy.addSection($$[$0].substr(8));this.$=$$[$0].substr(8);\nbreak;\ncase 21:\n yy.parseDirective('%%{', 'open_directive'); \nbreak;\ncase 22:\n yy.parseDirective($$[$0], 'type_directive'); \nbreak;\ncase 23:\n $$[$0] = $$[$0].trim().replace(/'/g, '\"'); yy.parseDirective($$[$0], 'arg_directive'); \nbreak;\ncase 24:\n yy.parseDirective('}%%', 'close_directive', 'pie'); \nbreak;\n}\n},\ntable: [{3:1,4:2,5:3,6:$V0,21:8,26:$V1,27:$V2,28:$V3,29:$V4},{1:[3]},{3:10,4:2,5:3,6:$V0,21:8,26:$V1,27:$V2,28:$V3,29:$V4},{3:11,4:2,5:3,6:$V0,21:8,26:$V1,27:$V2,28:$V3,29:$V4},o($V5,$V6,{7:12,8:[1,13]}),o($V7,[2,18]),o($V7,[2,19]),o($V7,[2,20]),{22:14,30:[1,15]},{30:[2,21]},{1:[2,1]},{1:[2,2]},o($V8,$V9,{21:8,9:16,10:17,5:24,1:[2,3],11:$Va,13:$Vb,15:$Vc,17:$Vd,19:$Ve,20:$Vf,29:$V4}),o($V5,$V6,{7:25}),{23:26,24:[1,27],32:$Vg},o([24,32],[2,22]),o($V5,[2,6]),{4:29,26:$V1,27:$V2,28:$V3},{12:[1,30]},{14:[1,31]},{16:[1,32]},{18:[1,33]},o($V8,[2,13]),o($V8,[2,14]),o($V8,[2,15]),o($V8,$V9,{21:8,9:16,10:17,5:24,1:[2,4],11:$Va,13:$Vb,15:$Vc,17:$Vd,19:$Ve,20:$Vf,29:$V4}),o($Vh,[2,16]),{25:34,31:[1,35]},o($Vh,[2,24]),o($V5,[2,7]),o($V8,[2,9]),o($V8,[2,10]),o($V8,[2,11]),o($V8,[2,12]),{23:36,32:$Vg},{32:[2,23]},o($Vh,[2,17])],\ndefaultActions: {9:[2,21],10:[2,1],11:[2,2],35:[2,23]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n            function lex() {\n            var token;\n            token = tstack.pop() || lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                if (token instanceof Array) {\n                    tstack = token;\n                    token = tstack.pop();\n                }\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var errStr = '';\n            expected = [];\n            for (p in table[state]) {\n                if (this.terminals_[p] && p > TERROR) {\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\n                }\n            }\n            if (lexer.showPosition) {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n            } else {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n            }\n            this.parseError(errStr, {\n                text: lexer.match,\n                token: this.terminals_[symbol] || symbol,\n                line: lexer.yylineno,\n                loc: yyloc,\n                expected: expected\n            });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0: this.begin('open_directive'); return 29; \nbreak;\ncase 1: this.begin('type_directive'); return 30; \nbreak;\ncase 2: this.popState(); this.begin('arg_directive'); return 24; \nbreak;\ncase 3: this.popState(); this.popState(); return 32; \nbreak;\ncase 4:return 31;\nbreak;\ncase 5:/* skip comments */\nbreak;\ncase 6:/* skip comments */{ /*console.log('');*/ }\nbreak;\ncase 7:return 26;\nbreak;\ncase 8:/* do nothing */\nbreak;\ncase 9:/* ignore */\nbreak;\ncase 10: this.begin(\"title\");return 13; \nbreak;\ncase 11: this.popState(); return \"title_value\"; \nbreak;\ncase 12: this.begin(\"acc_title\");return 15; \nbreak;\ncase 13: this.popState(); return \"acc_title_value\"; \nbreak;\ncase 14: this.begin(\"acc_descr\");return 17; \nbreak;\ncase 15: this.popState(); return \"acc_descr_value\"; \nbreak;\ncase 16: this.begin(\"acc_descr_multiline\");\nbreak;\ncase 17: this.popState(); \nbreak;\ncase 18:return \"acc_descr_multiline_value\";\nbreak;\ncase 19: this.begin(\"string\"); \nbreak;\ncase 20: this.popState(); \nbreak;\ncase 21: return \"txt\"; \nbreak;\ncase 22:return 6;\nbreak;\ncase 23:return 8;\nbreak;\ncase 24:return \"value\";\nbreak;\ncase 25:return 28;\nbreak;\n}\n},\nrules: [/^(?:%%\\{)/i,/^(?:((?:(?!\\}%%)[^:.])*))/i,/^(?::)/i,/^(?:\\}%%)/i,/^(?:((?:(?!\\}%%).|\\n)*))/i,/^(?:%%(?!\\{)[^\\n]*)/i,/^(?:[^\\}]%%[^\\n]*)/i,/^(?:[\\n\\r]+)/i,/^(?:%%[^\\n]*)/i,/^(?:[\\s]+)/i,/^(?:title\\b)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accTitle\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*\\{\\s*)/i,/^(?:[\\}])/i,/^(?:[^\\}]*)/i,/^(?:[\"])/i,/^(?:[\"])/i,/^(?:[^\"]*)/i,/^(?:pie\\b)/i,/^(?:showData\\b)/i,/^(?::[\\s]*[\\d]+(?:\\.[\\d]+)?)/i,/^(?:$)/i],\nconditions: {\"acc_descr_multiline\":{\"rules\":[17,18],\"inclusive\":false},\"acc_descr\":{\"rules\":[15],\"inclusive\":false},\"acc_title\":{\"rules\":[13],\"inclusive\":false},\"close_directive\":{\"rules\":[],\"inclusive\":false},\"arg_directive\":{\"rules\":[3,4],\"inclusive\":false},\"type_directive\":{\"rules\":[2,3],\"inclusive\":false},\"open_directive\":{\"rules\":[1],\"inclusive\":false},\"title\":{\"rules\":[11],\"inclusive\":false},\"string\":{\"rules\":[20,21],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,5,6,7,8,9,10,12,14,16,19,22,23,24,25],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,3],$V1=[1,5],$V2=[1,6],$V3=[1,7],$V4=[1,8],$V5=[5,6,8,14,16,18,19,40,41,42,43,44,45,53,71,72],$V6=[1,22],$V7=[2,13],$V8=[1,26],$V9=[1,27],$Va=[1,28],$Vb=[1,29],$Vc=[1,30],$Vd=[1,31],$Ve=[1,24],$Vf=[1,32],$Vg=[1,33],$Vh=[1,36],$Vi=[71,72],$Vj=[5,8,14,16,18,19,40,41,42,43,44,45,53,60,62,71,72],$Vk=[1,56],$Vl=[1,57],$Vm=[1,58],$Vn=[1,59],$Vo=[1,60],$Vp=[1,61],$Vq=[1,62],$Vr=[62,63],$Vs=[1,74],$Vt=[1,70],$Vu=[1,71],$Vv=[1,72],$Vw=[1,73],$Vx=[1,75],$Vy=[1,79],$Vz=[1,80],$VA=[1,77],$VB=[1,78],$VC=[5,8,14,16,18,19,40,41,42,43,44,45,53,71,72];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"directive\":4,\"NEWLINE\":5,\"RD\":6,\"diagram\":7,\"EOF\":8,\"openDirective\":9,\"typeDirective\":10,\"closeDirective\":11,\":\":12,\"argDirective\":13,\"acc_title\":14,\"acc_title_value\":15,\"acc_descr\":16,\"acc_descr_value\":17,\"acc_descr_multiline_value\":18,\"open_directive\":19,\"type_directive\":20,\"arg_directive\":21,\"close_directive\":22,\"requirementDef\":23,\"elementDef\":24,\"relationshipDef\":25,\"requirementType\":26,\"requirementName\":27,\"STRUCT_START\":28,\"requirementBody\":29,\"ID\":30,\"COLONSEP\":31,\"id\":32,\"TEXT\":33,\"text\":34,\"RISK\":35,\"riskLevel\":36,\"VERIFYMTHD\":37,\"verifyType\":38,\"STRUCT_STOP\":39,\"REQUIREMENT\":40,\"FUNCTIONAL_REQUIREMENT\":41,\"INTERFACE_REQUIREMENT\":42,\"PERFORMANCE_REQUIREMENT\":43,\"PHYSICAL_REQUIREMENT\":44,\"DESIGN_CONSTRAINT\":45,\"LOW_RISK\":46,\"MED_RISK\":47,\"HIGH_RISK\":48,\"VERIFY_ANALYSIS\":49,\"VERIFY_DEMONSTRATION\":50,\"VERIFY_INSPECTION\":51,\"VERIFY_TEST\":52,\"ELEMENT\":53,\"elementName\":54,\"elementBody\":55,\"TYPE\":56,\"type\":57,\"DOCREF\":58,\"ref\":59,\"END_ARROW_L\":60,\"relationship\":61,\"LINE\":62,\"END_ARROW_R\":63,\"CONTAINS\":64,\"COPIES\":65,\"DERIVES\":66,\"SATISFIES\":67,\"VERIFIES\":68,\"REFINES\":69,\"TRACES\":70,\"unqString\":71,\"qString\":72,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"NEWLINE\",6:\"RD\",8:\"EOF\",12:\":\",14:\"acc_title\",15:\"acc_title_value\",16:\"acc_descr\",17:\"acc_descr_value\",18:\"acc_descr_multiline_value\",19:\"open_directive\",20:\"type_directive\",21:\"arg_directive\",22:\"close_directive\",28:\"STRUCT_START\",30:\"ID\",31:\"COLONSEP\",33:\"TEXT\",35:\"RISK\",37:\"VERIFYMTHD\",39:\"STRUCT_STOP\",40:\"REQUIREMENT\",41:\"FUNCTIONAL_REQUIREMENT\",42:\"INTERFACE_REQUIREMENT\",43:\"PERFORMANCE_REQUIREMENT\",44:\"PHYSICAL_REQUIREMENT\",45:\"DESIGN_CONSTRAINT\",46:\"LOW_RISK\",47:\"MED_RISK\",48:\"HIGH_RISK\",49:\"VERIFY_ANALYSIS\",50:\"VERIFY_DEMONSTRATION\",51:\"VERIFY_INSPECTION\",52:\"VERIFY_TEST\",53:\"ELEMENT\",56:\"TYPE\",58:\"DOCREF\",60:\"END_ARROW_L\",62:\"LINE\",63:\"END_ARROW_R\",64:\"CONTAINS\",65:\"COPIES\",66:\"DERIVES\",67:\"SATISFIES\",68:\"VERIFIES\",69:\"REFINES\",70:\"TRACES\",71:\"unqString\",72:\"qString\"},\nproductions_: [0,[3,3],[3,2],[3,4],[4,3],[4,5],[4,2],[4,2],[4,1],[9,1],[10,1],[13,1],[11,1],[7,0],[7,2],[7,2],[7,2],[7,2],[7,2],[23,5],[29,5],[29,5],[29,5],[29,5],[29,2],[29,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[36,1],[36,1],[36,1],[38,1],[38,1],[38,1],[38,1],[24,5],[55,5],[55,5],[55,2],[55,1],[25,5],[25,5],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[61,1],[27,1],[27,1],[32,1],[32,1],[34,1],[34,1],[54,1],[54,1],[57,1],[57,1],[59,1],[59,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 6:\n this.$=$$[$0].trim();yy.setTitle(this.$); \nbreak;\ncase 7: case 8:\n this.$=$$[$0].trim();yy.setAccDescription(this.$); \nbreak;\ncase 9:\n yy.parseDirective('%%{', 'open_directive'); \nbreak;\ncase 10:\n yy.parseDirective($$[$0], 'type_directive'); \nbreak;\ncase 11:\n $$[$0] = $$[$0].trim().replace(/'/g, '\"'); yy.parseDirective($$[$0], 'arg_directive'); \nbreak;\ncase 12:\n yy.parseDirective('}%%', 'close_directive', 'pie'); \nbreak;\ncase 13:\n this.$ = [] \nbreak;\ncase 19:\n yy.addRequirement($$[$0-3], $$[$0-4]) \nbreak;\ncase 20:\n yy.setNewReqId($$[$0-2]); \nbreak;\ncase 21:\n yy.setNewReqText($$[$0-2]); \nbreak;\ncase 22:\n yy.setNewReqRisk($$[$0-2]); \nbreak;\ncase 23:\n yy.setNewReqVerifyMethod($$[$0-2]); \nbreak;\ncase 26:\n this.$=yy.RequirementType.REQUIREMENT;\nbreak;\ncase 27:\n this.$=yy.RequirementType.FUNCTIONAL_REQUIREMENT;\nbreak;\ncase 28:\n this.$=yy.RequirementType.INTERFACE_REQUIREMENT;\nbreak;\ncase 29:\n this.$=yy.RequirementType.PERFORMANCE_REQUIREMENT;\nbreak;\ncase 30:\n this.$=yy.RequirementType.PHYSICAL_REQUIREMENT;\nbreak;\ncase 31:\n this.$=yy.RequirementType.DESIGN_CONSTRAINT;\nbreak;\ncase 32:\n this.$=yy.RiskLevel.LOW_RISK;\nbreak;\ncase 33:\n this.$=yy.RiskLevel.MED_RISK;\nbreak;\ncase 34:\n this.$=yy.RiskLevel.HIGH_RISK;\nbreak;\ncase 35:\n this.$=yy.VerifyType.VERIFY_ANALYSIS;\nbreak;\ncase 36:\n this.$=yy.VerifyType.VERIFY_DEMONSTRATION;\nbreak;\ncase 37:\n this.$=yy.VerifyType.VERIFY_INSPECTION;\nbreak;\ncase 38:\n this.$=yy.VerifyType.VERIFY_TEST;\nbreak;\ncase 39:\n yy.addElement($$[$0-3]) \nbreak;\ncase 40:\n yy.setNewElementType($$[$0-2]); \nbreak;\ncase 41:\n yy.setNewElementDocRef($$[$0-2]); \nbreak;\ncase 44:\n  yy.addRelationship($$[$0-2], $$[$0], $$[$0-4]) \nbreak;\ncase 45:\n yy.addRelationship($$[$0-2], $$[$0-4], $$[$0]) \nbreak;\ncase 46:\n this.$=yy.Relationships.CONTAINS;\nbreak;\ncase 47:\n this.$=yy.Relationships.COPIES;\nbreak;\ncase 48:\n this.$=yy.Relationships.DERIVES;\nbreak;\ncase 49:\n this.$=yy.Relationships.SATISFIES;\nbreak;\ncase 50:\n this.$=yy.Relationships.VERIFIES;\nbreak;\ncase 51:\n this.$=yy.Relationships.REFINES;\nbreak;\ncase 52:\n this.$=yy.Relationships.TRACES;\nbreak;\n}\n},\ntable: [{3:1,4:2,6:$V0,9:4,14:$V1,16:$V2,18:$V3,19:$V4},{1:[3]},{3:10,4:2,5:[1,9],6:$V0,9:4,14:$V1,16:$V2,18:$V3,19:$V4},{5:[1,11]},{10:12,20:[1,13]},{15:[1,14]},{17:[1,15]},o($V5,[2,8]),{20:[2,9]},{3:16,4:2,6:$V0,9:4,14:$V1,16:$V2,18:$V3,19:$V4},{1:[2,2]},{4:21,5:$V6,7:17,8:$V7,9:4,14:$V1,16:$V2,18:$V3,19:$V4,23:18,24:19,25:20,26:23,32:25,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,53:$Ve,71:$Vf,72:$Vg},{11:34,12:[1,35],22:$Vh},o([12,22],[2,10]),o($V5,[2,6]),o($V5,[2,7]),{1:[2,1]},{8:[1,37]},{4:21,5:$V6,7:38,8:$V7,9:4,14:$V1,16:$V2,18:$V3,19:$V4,23:18,24:19,25:20,26:23,32:25,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,53:$Ve,71:$Vf,72:$Vg},{4:21,5:$V6,7:39,8:$V7,9:4,14:$V1,16:$V2,18:$V3,19:$V4,23:18,24:19,25:20,26:23,32:25,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,53:$Ve,71:$Vf,72:$Vg},{4:21,5:$V6,7:40,8:$V7,9:4,14:$V1,16:$V2,18:$V3,19:$V4,23:18,24:19,25:20,26:23,32:25,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,53:$Ve,71:$Vf,72:$Vg},{4:21,5:$V6,7:41,8:$V7,9:4,14:$V1,16:$V2,18:$V3,19:$V4,23:18,24:19,25:20,26:23,32:25,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,53:$Ve,71:$Vf,72:$Vg},{4:21,5:$V6,7:42,8:$V7,9:4,14:$V1,16:$V2,18:$V3,19:$V4,23:18,24:19,25:20,26:23,32:25,40:$V8,41:$V9,42:$Va,43:$Vb,44:$Vc,45:$Vd,53:$Ve,71:$Vf,72:$Vg},{27:43,71:[1,44],72:[1,45]},{54:46,71:[1,47],72:[1,48]},{60:[1,49],62:[1,50]},o($Vi,[2,26]),o($Vi,[2,27]),o($Vi,[2,28]),o($Vi,[2,29]),o($Vi,[2,30]),o($Vi,[2,31]),o($Vj,[2,55]),o($Vj,[2,56]),o($V5,[2,4]),{13:51,21:[1,52]},o($V5,[2,12]),{1:[2,3]},{8:[2,14]},{8:[2,15]},{8:[2,16]},{8:[2,17]},{8:[2,18]},{28:[1,53]},{28:[2,53]},{28:[2,54]},{28:[1,54]},{28:[2,59]},{28:[2,60]},{61:55,64:$Vk,65:$Vl,66:$Vm,67:$Vn,68:$Vo,69:$Vp,70:$Vq},{61:63,64:$Vk,65:$Vl,66:$Vm,67:$Vn,68:$Vo,69:$Vp,70:$Vq},{11:64,22:$Vh},{22:[2,11]},{5:[1,65]},{5:[1,66]},{62:[1,67]},o($Vr,[2,46]),o($Vr,[2,47]),o($Vr,[2,48]),o($Vr,[2,49]),o($Vr,[2,50]),o($Vr,[2,51]),o($Vr,[2,52]),{63:[1,68]},o($V5,[2,5]),{5:$Vs,29:69,30:$Vt,33:$Vu,35:$Vv,37:$Vw,39:$Vx},{5:$Vy,39:$Vz,55:76,56:$VA,58:$VB},{32:81,71:$Vf,72:$Vg},{32:82,71:$Vf,72:$Vg},o($VC,[2,19]),{31:[1,83]},{31:[1,84]},{31:[1,85]},{31:[1,86]},{5:$Vs,29:87,30:$Vt,33:$Vu,35:$Vv,37:$Vw,39:$Vx},o($VC,[2,25]),o($VC,[2,39]),{31:[1,88]},{31:[1,89]},{5:$Vy,39:$Vz,55:90,56:$VA,58:$VB},o($VC,[2,43]),o($VC,[2,44]),o($VC,[2,45]),{32:91,71:$Vf,72:$Vg},{34:92,71:[1,93],72:[1,94]},{36:95,46:[1,96],47:[1,97],48:[1,98]},{38:99,49:[1,100],50:[1,101],51:[1,102],52:[1,103]},o($VC,[2,24]),{57:104,71:[1,105],72:[1,106]},{59:107,71:[1,108],72:[1,109]},o($VC,[2,42]),{5:[1,110]},{5:[1,111]},{5:[2,57]},{5:[2,58]},{5:[1,112]},{5:[2,32]},{5:[2,33]},{5:[2,34]},{5:[1,113]},{5:[2,35]},{5:[2,36]},{5:[2,37]},{5:[2,38]},{5:[1,114]},{5:[2,61]},{5:[2,62]},{5:[1,115]},{5:[2,63]},{5:[2,64]},{5:$Vs,29:116,30:$Vt,33:$Vu,35:$Vv,37:$Vw,39:$Vx},{5:$Vs,29:117,30:$Vt,33:$Vu,35:$Vv,37:$Vw,39:$Vx},{5:$Vs,29:118,30:$Vt,33:$Vu,35:$Vv,37:$Vw,39:$Vx},{5:$Vs,29:119,30:$Vt,33:$Vu,35:$Vv,37:$Vw,39:$Vx},{5:$Vy,39:$Vz,55:120,56:$VA,58:$VB},{5:$Vy,39:$Vz,55:121,56:$VA,58:$VB},o($VC,[2,20]),o($VC,[2,21]),o($VC,[2,22]),o($VC,[2,23]),o($VC,[2,40]),o($VC,[2,41])],\ndefaultActions: {8:[2,9],10:[2,2],16:[2,1],37:[2,3],38:[2,14],39:[2,15],40:[2,16],41:[2,17],42:[2,18],44:[2,53],45:[2,54],47:[2,59],48:[2,60],52:[2,11],93:[2,57],94:[2,58],96:[2,32],97:[2,33],98:[2,34],100:[2,35],101:[2,36],102:[2,37],103:[2,38],105:[2,61],106:[2,62],108:[2,63],109:[2,64]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n            function lex() {\n            var token;\n            token = tstack.pop() || lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                if (token instanceof Array) {\n                    tstack = token;\n                    token = tstack.pop();\n                }\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var errStr = '';\n            expected = [];\n            for (p in table[state]) {\n                if (this.terminals_[p] && p > TERROR) {\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\n                }\n            }\n            if (lexer.showPosition) {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n            } else {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n            }\n            this.parseError(errStr, {\n                text: lexer.match,\n                token: this.terminals_[symbol] || symbol,\n                line: lexer.yylineno,\n                loc: yyloc,\n                expected: expected\n            });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0: this.begin('open_directive'); return 19; \nbreak;\ncase 1: this.begin('type_directive'); return 20; \nbreak;\ncase 2: this.popState(); this.begin('arg_directive'); return 12; \nbreak;\ncase 3: this.popState(); this.popState(); return 22; \nbreak;\ncase 4:return 21;\nbreak;\ncase 5:return 'title';\nbreak;\ncase 6: this.begin(\"acc_title\");return 14; \nbreak;\ncase 7: this.popState(); return \"acc_title_value\"; \nbreak;\ncase 8: this.begin(\"acc_descr\");return 16; \nbreak;\ncase 9: this.popState(); return \"acc_descr_value\"; \nbreak;\ncase 10: this.begin(\"acc_descr_multiline\");\nbreak;\ncase 11: this.popState(); \nbreak;\ncase 12:return \"acc_descr_multiline_value\";\nbreak;\ncase 13:return 5;\nbreak;\ncase 14:/* skip all whitespace */\nbreak;\ncase 15:/* skip comments */\nbreak;\ncase 16:/* skip comments */\nbreak;\ncase 17:return 8;\nbreak;\ncase 18:return 6;\nbreak;\ncase 19:return 28;\nbreak;\ncase 20:return 39;\nbreak;\ncase 21:return 31;\nbreak;\ncase 22:return 30;\nbreak;\ncase 23:return 33;\nbreak;\ncase 24:return 35;\nbreak;\ncase 25:return 37;\nbreak;\ncase 26:return 40;\nbreak;\ncase 27:return 41;\nbreak;\ncase 28:return 42;\nbreak;\ncase 29:return 43;\nbreak;\ncase 30:return 44;\nbreak;\ncase 31:return 45;\nbreak;\ncase 32:return 46;\nbreak;\ncase 33:return 47;\nbreak;\ncase 34:return 48;\nbreak;\ncase 35:return 49;\nbreak;\ncase 36:return 50;\nbreak;\ncase 37:return 51;\nbreak;\ncase 38:return 52;\nbreak;\ncase 39:return 53;\nbreak;\ncase 40:return 64;\nbreak;\ncase 41:return 65;\nbreak;\ncase 42:return 66;\nbreak;\ncase 43:return 67;\nbreak;\ncase 44:return 68;\nbreak;\ncase 45:return 69;\nbreak;\ncase 46:return 70;\nbreak;\ncase 47:return 56;\nbreak;\ncase 48:return 58;\nbreak;\ncase 49:return 60;\nbreak;\ncase 50:return 63;\nbreak;\ncase 51:return 62;\nbreak;\ncase 52: this.begin(\"string\"); \nbreak;\ncase 53: this.popState(); \nbreak;\ncase 54: return \"qString\"; \nbreak;\ncase 55: yy_.yytext = yy_.yytext.trim(); return 71;\nbreak;\n}\n},\nrules: [/^(?:%%\\{)/i,/^(?:((?:(?!\\}%%)[^:.])*))/i,/^(?::)/i,/^(?:\\}%%)/i,/^(?:((?:(?!\\}%%).|\\n)*))/i,/^(?:title\\s[^#\\n;]+)/i,/^(?:accTitle\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*\\{\\s*)/i,/^(?:[\\}])/i,/^(?:[^\\}]*)/i,/^(?:(\\r?\\n)+)/i,/^(?:\\s+)/i,/^(?:#[^\\n]*)/i,/^(?:%[^\\n]*)/i,/^(?:$)/i,/^(?:requirementDiagram\\b)/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?::)/i,/^(?:id\\b)/i,/^(?:text\\b)/i,/^(?:risk\\b)/i,/^(?:verifyMethod\\b)/i,/^(?:requirement\\b)/i,/^(?:functionalRequirement\\b)/i,/^(?:interfaceRequirement\\b)/i,/^(?:performanceRequirement\\b)/i,/^(?:physicalRequirement\\b)/i,/^(?:designConstraint\\b)/i,/^(?:low\\b)/i,/^(?:medium\\b)/i,/^(?:high\\b)/i,/^(?:analysis\\b)/i,/^(?:demonstration\\b)/i,/^(?:inspection\\b)/i,/^(?:test\\b)/i,/^(?:element\\b)/i,/^(?:contains\\b)/i,/^(?:copies\\b)/i,/^(?:derives\\b)/i,/^(?:satisfies\\b)/i,/^(?:verifies\\b)/i,/^(?:refines\\b)/i,/^(?:traces\\b)/i,/^(?:type\\b)/i,/^(?:docref\\b)/i,/^(?:<-)/i,/^(?:->)/i,/^(?:-)/i,/^(?:[\"])/i,/^(?:[\"])/i,/^(?:[^\"]*)/i,/^(?:[\\w][^\\r\\n\\{\\<\\>\\-\\=]*)/i],\nconditions: {\"acc_descr_multiline\":{\"rules\":[11,12],\"inclusive\":false},\"acc_descr\":{\"rules\":[9],\"inclusive\":false},\"acc_title\":{\"rules\":[7],\"inclusive\":false},\"close_directive\":{\"rules\":[],\"inclusive\":false},\"arg_directive\":{\"rules\":[3,4],\"inclusive\":false},\"type_directive\":{\"rules\":[2,3],\"inclusive\":false},\"open_directive\":{\"rules\":[1],\"inclusive\":false},\"unqString\":{\"rules\":[],\"inclusive\":false},\"token\":{\"rules\":[],\"inclusive\":false},\"string\":{\"rules\":[53,54],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,5,6,8,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,2],$V1=[1,3],$V2=[1,5],$V3=[1,7],$V4=[2,5],$V5=[1,15],$V6=[1,17],$V7=[1,18],$V8=[1,19],$V9=[1,21],$Va=[1,22],$Vb=[1,23],$Vc=[1,29],$Vd=[1,30],$Ve=[1,31],$Vf=[1,32],$Vg=[1,33],$Vh=[1,34],$Vi=[1,35],$Vj=[1,36],$Vk=[1,37],$Vl=[1,38],$Vm=[1,41],$Vn=[1,42],$Vo=[1,43],$Vp=[1,44],$Vq=[1,45],$Vr=[1,46],$Vs=[1,49],$Vt=[1,4,5,16,20,22,25,26,32,33,34,36,38,39,40,41,42,43,45,47,48,49,54,55,56,57,65,75],$Vu=[4,5,16,20,22,25,26,32,33,34,36,38,39,40,41,42,43,45,49,54,55,56,57,65,75],$Vv=[4,5,16,20,22,25,26,32,33,34,36,38,39,40,41,42,43,45,48,49,54,55,56,57,65,75],$Vw=[4,5,16,20,22,25,26,32,33,34,36,38,39,40,41,42,43,45,47,49,54,55,56,57,65,75],$Vx=[63,64,65],$Vy=[1,114],$Vz=[1,4,5,7,16,20,22,25,26,32,33,34,36,38,39,40,41,42,43,45,47,48,49,54,55,56,57,65,75];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"SPACE\":4,\"NEWLINE\":5,\"directive\":6,\"SD\":7,\"document\":8,\"line\":9,\"statement\":10,\"openDirective\":11,\"typeDirective\":12,\"closeDirective\":13,\":\":14,\"argDirective\":15,\"participant\":16,\"actor\":17,\"AS\":18,\"restOfLine\":19,\"participant_actor\":20,\"signal\":21,\"autonumber\":22,\"NUM\":23,\"off\":24,\"activate\":25,\"deactivate\":26,\"note_statement\":27,\"links_statement\":28,\"link_statement\":29,\"properties_statement\":30,\"details_statement\":31,\"title\":32,\"legacy_title\":33,\"acc_title\":34,\"acc_title_value\":35,\"acc_descr\":36,\"acc_descr_value\":37,\"acc_descr_multiline_value\":38,\"loop\":39,\"end\":40,\"rect\":41,\"opt\":42,\"alt\":43,\"else_sections\":44,\"par\":45,\"par_sections\":46,\"and\":47,\"else\":48,\"note\":49,\"placement\":50,\"text2\":51,\"over\":52,\"actor_pair\":53,\"links\":54,\"link\":55,\"properties\":56,\"details\":57,\"spaceList\":58,\",\":59,\"left_of\":60,\"right_of\":61,\"signaltype\":62,\"+\":63,\"-\":64,\"ACTOR\":65,\"SOLID_OPEN_ARROW\":66,\"DOTTED_OPEN_ARROW\":67,\"SOLID_ARROW\":68,\"DOTTED_ARROW\":69,\"SOLID_CROSS\":70,\"DOTTED_CROSS\":71,\"SOLID_POINT\":72,\"DOTTED_POINT\":73,\"TXT\":74,\"open_directive\":75,\"type_directive\":76,\"arg_directive\":77,\"close_directive\":78,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"SPACE\",5:\"NEWLINE\",7:\"SD\",14:\":\",16:\"participant\",18:\"AS\",19:\"restOfLine\",20:\"participant_actor\",22:\"autonumber\",23:\"NUM\",24:\"off\",25:\"activate\",26:\"deactivate\",32:\"title\",33:\"legacy_title\",34:\"acc_title\",35:\"acc_title_value\",36:\"acc_descr\",37:\"acc_descr_value\",38:\"acc_descr_multiline_value\",39:\"loop\",40:\"end\",41:\"rect\",42:\"opt\",43:\"alt\",45:\"par\",47:\"and\",48:\"else\",49:\"note\",52:\"over\",54:\"links\",55:\"link\",56:\"properties\",57:\"details\",59:\",\",60:\"left_of\",61:\"right_of\",63:\"+\",64:\"-\",65:\"ACTOR\",66:\"SOLID_OPEN_ARROW\",67:\"DOTTED_OPEN_ARROW\",68:\"SOLID_ARROW\",69:\"DOTTED_ARROW\",70:\"SOLID_CROSS\",71:\"DOTTED_CROSS\",72:\"SOLID_POINT\",73:\"DOTTED_POINT\",74:\"TXT\",75:\"open_directive\",76:\"type_directive\",77:\"arg_directive\",78:\"close_directive\"},\nproductions_: [0,[3,2],[3,2],[3,2],[3,2],[8,0],[8,2],[9,2],[9,1],[9,1],[6,4],[6,6],[10,5],[10,3],[10,5],[10,3],[10,2],[10,4],[10,3],[10,3],[10,2],[10,3],[10,3],[10,2],[10,2],[10,2],[10,2],[10,2],[10,1],[10,1],[10,2],[10,2],[10,1],[10,4],[10,4],[10,4],[10,4],[10,4],[10,1],[46,1],[46,4],[44,1],[44,4],[27,4],[27,4],[28,3],[29,3],[30,3],[31,3],[58,2],[58,1],[53,3],[53,1],[50,1],[50,1],[21,5],[21,5],[21,4],[17,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[51,1],[11,1],[12,1],[15,1],[13,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 4:\n yy.apply($$[$0]);return $$[$0]; \nbreak;\ncase 5:\n this.$ = [] \nbreak;\ncase 6:\n$$[$0-1].push($$[$0]);this.$ = $$[$0-1]\nbreak;\ncase 7: case 8:\n this.$ = $$[$0] \nbreak;\ncase 9:\n this.$=[]; \nbreak;\ncase 12:\n$$[$0-3].type='addParticipant';$$[$0-3].description=yy.parseMessage($$[$0-1]); this.$=$$[$0-3];\nbreak;\ncase 13:\n$$[$0-1].type='addParticipant';this.$=$$[$0-1];\nbreak;\ncase 14:\n$$[$0-3].type='addActor';$$[$0-3].description=yy.parseMessage($$[$0-1]); this.$=$$[$0-3];\nbreak;\ncase 15:\n$$[$0-1].type='addActor'; this.$=$$[$0-1];\nbreak;\ncase 17:\n this.$= {type:'sequenceIndex',sequenceIndex: Number($$[$0-2]), sequenceIndexStep:Number($$[$0-1]), sequenceVisible:true, signalType:yy.LINETYPE.AUTONUMBER};\nbreak;\ncase 18:\n this.$ = {type:'sequenceIndex',sequenceIndex: Number($$[$0-1]), sequenceIndexStep:1, sequenceVisible:true, signalType:yy.LINETYPE.AUTONUMBER};\nbreak;\ncase 19:\n this.$ = {type:'sequenceIndex', sequenceVisible:false, signalType:yy.LINETYPE.AUTONUMBER};\nbreak;\ncase 20:\nthis.$ = {type:'sequenceIndex', sequenceVisible:true, signalType:yy.LINETYPE.AUTONUMBER}; \nbreak;\ncase 21:\nthis.$={type: 'activeStart', signalType: yy.LINETYPE.ACTIVE_START, actor: $$[$0-1]};\nbreak;\ncase 22:\nthis.$={type: 'activeEnd', signalType: yy.LINETYPE.ACTIVE_END, actor: $$[$0-1]};\nbreak;\ncase 28:\nyy.setDiagramTitle($$[$0].substring(6));this.$=$$[$0].substring(6);\nbreak;\ncase 29:\nyy.setDiagramTitle($$[$0].substring(7));this.$=$$[$0].substring(7);\nbreak;\ncase 30:\n this.$=$$[$0].trim();yy.setTitle(this.$); \nbreak;\ncase 31: case 32:\n this.$=$$[$0].trim();yy.setAccDescription(this.$); \nbreak;\ncase 33:\n\n\t\t$$[$0-1].unshift({type: 'loopStart', loopText:yy.parseMessage($$[$0-2]), signalType: yy.LINETYPE.LOOP_START});\n\t\t$$[$0-1].push({type: 'loopEnd', loopText:$$[$0-2], signalType: yy.LINETYPE.LOOP_END});\n\t\tthis.$=$$[$0-1];\nbreak;\ncase 34:\n\n\t\t$$[$0-1].unshift({type: 'rectStart', color:yy.parseMessage($$[$0-2]), signalType: yy.LINETYPE.RECT_START });\n\t\t$$[$0-1].push({type: 'rectEnd', color:yy.parseMessage($$[$0-2]), signalType: yy.LINETYPE.RECT_END });\n\t\tthis.$=$$[$0-1];\nbreak;\ncase 35:\n\n\t\t$$[$0-1].unshift({type: 'optStart', optText:yy.parseMessage($$[$0-2]), signalType: yy.LINETYPE.OPT_START});\n\t\t$$[$0-1].push({type: 'optEnd', optText:yy.parseMessage($$[$0-2]), signalType: yy.LINETYPE.OPT_END});\n\t\tthis.$=$$[$0-1];\nbreak;\ncase 36:\n\n\t\t// Alt start\n\t\t$$[$0-1].unshift({type: 'altStart', altText:yy.parseMessage($$[$0-2]), signalType: yy.LINETYPE.ALT_START});\n\t\t// Content in alt is already in $$[$0-1]\n\t\t// End\n\t\t$$[$0-1].push({type: 'altEnd', signalType: yy.LINETYPE.ALT_END});\n\t\tthis.$=$$[$0-1];\nbreak;\ncase 37:\n\n\t\t// Parallel start\n\t\t$$[$0-1].unshift({type: 'parStart', parText:yy.parseMessage($$[$0-2]), signalType: yy.LINETYPE.PAR_START});\n\t\t// Content in par is already in $$[$0-1]\n\t\t// End\n\t\t$$[$0-1].push({type: 'parEnd', signalType: yy.LINETYPE.PAR_END});\n\t\tthis.$=$$[$0-1];\nbreak;\ncase 40:\n this.$ = $$[$0-3].concat([{type: 'and', parText:yy.parseMessage($$[$0-1]), signalType: yy.LINETYPE.PAR_AND}, $$[$0]]); \nbreak;\ncase 42:\n this.$ = $$[$0-3].concat([{type: 'else', altText:yy.parseMessage($$[$0-1]), signalType: yy.LINETYPE.ALT_ELSE}, $$[$0]]); \nbreak;\ncase 43:\n\n\t\tthis.$ = [$$[$0-1], {type:'addNote', placement:$$[$0-2], actor:$$[$0-1].actor, text:$$[$0]}];\nbreak;\ncase 44:\n\n\t\t// Coerce actor_pair into a [to, from, ...] array\n\t\t$$[$0-2] = [].concat($$[$0-1], $$[$0-1]).slice(0, 2);\n\t\t$$[$0-2][0] = $$[$0-2][0].actor;\n\t\t$$[$0-2][1] = $$[$0-2][1].actor;\n\t\tthis.$ = [$$[$0-1], {type:'addNote', placement:yy.PLACEMENT.OVER, actor:$$[$0-2].slice(0, 2), text:$$[$0]}];\nbreak;\ncase 45:\n\n\t\tthis.$ = [$$[$0-1], {type:'addLinks', actor:$$[$0-1].actor, text:$$[$0]}];\n  \nbreak;\ncase 46:\n\n\t\tthis.$ = [$$[$0-1], {type:'addALink', actor:$$[$0-1].actor, text:$$[$0]}];\n  \nbreak;\ncase 47:\n\n\t\tthis.$ = [$$[$0-1], {type:'addProperties', actor:$$[$0-1].actor, text:$$[$0]}];\n  \nbreak;\ncase 48:\n\n\t\tthis.$ = [$$[$0-1], {type:'addDetails', actor:$$[$0-1].actor, text:$$[$0]}];\n  \nbreak;\ncase 51:\n this.$ = [$$[$0-2], $$[$0]]; \nbreak;\ncase 52:\n this.$ = $$[$0]; \nbreak;\ncase 53:\n this.$ = yy.PLACEMENT.LEFTOF; \nbreak;\ncase 54:\n this.$ = yy.PLACEMENT.RIGHTOF; \nbreak;\ncase 55:\n this.$ = [$$[$0-4],$$[$0-1],{type: 'addMessage', from:$$[$0-4].actor, to:$$[$0-1].actor, signalType:$$[$0-3], msg:$$[$0]},\n\t              {type: 'activeStart', signalType: yy.LINETYPE.ACTIVE_START, actor: $$[$0-1]}\n\t             ]\nbreak;\ncase 56:\n this.$ = [$$[$0-4],$$[$0-1],{type: 'addMessage', from:$$[$0-4].actor, to:$$[$0-1].actor, signalType:$$[$0-3], msg:$$[$0]},\n\t             {type: 'activeEnd', signalType: yy.LINETYPE.ACTIVE_END, actor: $$[$0-4]}\n\t             ]\nbreak;\ncase 57:\n this.$ = [$$[$0-3],$$[$0-1],{type: 'addMessage', from:$$[$0-3].actor, to:$$[$0-1].actor, signalType:$$[$0-2], msg:$$[$0]}]\nbreak;\ncase 58:\nthis.$={ type: 'addParticipant', actor:$$[$0]}\nbreak;\ncase 59:\n this.$ = yy.LINETYPE.SOLID_OPEN; \nbreak;\ncase 60:\n this.$ = yy.LINETYPE.DOTTED_OPEN; \nbreak;\ncase 61:\n this.$ = yy.LINETYPE.SOLID; \nbreak;\ncase 62:\n this.$ = yy.LINETYPE.DOTTED; \nbreak;\ncase 63:\n this.$ = yy.LINETYPE.SOLID_CROSS; \nbreak;\ncase 64:\n this.$ = yy.LINETYPE.DOTTED_CROSS; \nbreak;\ncase 65:\n this.$ = yy.LINETYPE.SOLID_POINT; \nbreak;\ncase 66:\n this.$ = yy.LINETYPE.DOTTED_POINT; \nbreak;\ncase 67:\nthis.$ = yy.parseMessage($$[$0].trim().substring(1)) \nbreak;\ncase 68:\n yy.parseDirective('%%{', 'open_directive'); \nbreak;\ncase 69:\n yy.parseDirective($$[$0], 'type_directive'); \nbreak;\ncase 70:\n $$[$0] = $$[$0].trim().replace(/'/g, '\"'); yy.parseDirective($$[$0], 'arg_directive'); \nbreak;\ncase 71:\n yy.parseDirective('}%%', 'close_directive', 'sequence'); \nbreak;\n}\n},\ntable: [{3:1,4:$V0,5:$V1,6:4,7:$V2,11:6,75:$V3},{1:[3]},{3:8,4:$V0,5:$V1,6:4,7:$V2,11:6,75:$V3},{3:9,4:$V0,5:$V1,6:4,7:$V2,11:6,75:$V3},{3:10,4:$V0,5:$V1,6:4,7:$V2,11:6,75:$V3},o([1,4,5,16,20,22,25,26,32,33,34,36,38,39,41,42,43,45,49,54,55,56,57,65,75],$V4,{8:11}),{12:12,76:[1,13]},{76:[2,68]},{1:[2,1]},{1:[2,2]},{1:[2,3]},{1:[2,4],4:$V5,5:$V6,6:39,9:14,10:16,11:6,16:$V7,17:40,20:$V8,21:20,22:$V9,25:$Va,26:$Vb,27:24,28:25,29:26,30:27,31:28,32:$Vc,33:$Vd,34:$Ve,36:$Vf,38:$Vg,39:$Vh,41:$Vi,42:$Vj,43:$Vk,45:$Vl,49:$Vm,54:$Vn,55:$Vo,56:$Vp,57:$Vq,65:$Vr,75:$V3},{13:47,14:[1,48],78:$Vs},o([14,78],[2,69]),o($Vt,[2,6]),{6:39,10:50,11:6,16:$V7,17:40,20:$V8,21:20,22:$V9,25:$Va,26:$Vb,27:24,28:25,29:26,30:27,31:28,32:$Vc,33:$Vd,34:$Ve,36:$Vf,38:$Vg,39:$Vh,41:$Vi,42:$Vj,43:$Vk,45:$Vl,49:$Vm,54:$Vn,55:$Vo,56:$Vp,57:$Vq,65:$Vr,75:$V3},o($Vt,[2,8]),o($Vt,[2,9]),{17:51,65:$Vr},{17:52,65:$Vr},{5:[1,53]},{5:[1,56],23:[1,54],24:[1,55]},{17:57,65:$Vr},{17:58,65:$Vr},{5:[1,59]},{5:[1,60]},{5:[1,61]},{5:[1,62]},{5:[1,63]},o($Vt,[2,28]),o($Vt,[2,29]),{35:[1,64]},{37:[1,65]},o($Vt,[2,32]),{19:[1,66]},{19:[1,67]},{19:[1,68]},{19:[1,69]},{19:[1,70]},o($Vt,[2,38]),{62:71,66:[1,72],67:[1,73],68:[1,74],69:[1,75],70:[1,76],71:[1,77],72:[1,78],73:[1,79]},{50:80,52:[1,81],60:[1,82],61:[1,83]},{17:84,65:$Vr},{17:85,65:$Vr},{17:86,65:$Vr},{17:87,65:$Vr},o([5,18,59,66,67,68,69,70,71,72,73,74],[2,58]),{5:[1,88]},{15:89,77:[1,90]},{5:[2,71]},o($Vt,[2,7]),{5:[1,92],18:[1,91]},{5:[1,94],18:[1,93]},o($Vt,[2,16]),{5:[1,96],23:[1,95]},{5:[1,97]},o($Vt,[2,20]),{5:[1,98]},{5:[1,99]},o($Vt,[2,23]),o($Vt,[2,24]),o($Vt,[2,25]),o($Vt,[2,26]),o($Vt,[2,27]),o($Vt,[2,30]),o($Vt,[2,31]),o($Vu,$V4,{8:100}),o($Vu,$V4,{8:101}),o($Vu,$V4,{8:102}),o($Vv,$V4,{44:103,8:104}),o($Vw,$V4,{46:105,8:106}),{17:109,63:[1,107],64:[1,108],65:$Vr},o($Vx,[2,59]),o($Vx,[2,60]),o($Vx,[2,61]),o($Vx,[2,62]),o($Vx,[2,63]),o($Vx,[2,64]),o($Vx,[2,65]),o($Vx,[2,66]),{17:110,65:$Vr},{17:112,53:111,65:$Vr},{65:[2,53]},{65:[2,54]},{51:113,74:$Vy},{51:115,74:$Vy},{51:116,74:$Vy},{51:117,74:$Vy},o($Vz,[2,10]),{13:118,78:$Vs},{78:[2,70]},{19:[1,119]},o($Vt,[2,13]),{19:[1,120]},o($Vt,[2,15]),{5:[1,121]},o($Vt,[2,18]),o($Vt,[2,19]),o($Vt,[2,21]),o($Vt,[2,22]),{4:$V5,5:$V6,6:39,9:14,10:16,11:6,16:$V7,17:40,20:$V8,21:20,22:$V9,25:$Va,26:$Vb,27:24,28:25,29:26,30:27,31:28,32:$Vc,33:$Vd,34:$Ve,36:$Vf,38:$Vg,39:$Vh,40:[1,122],41:$Vi,42:$Vj,43:$Vk,45:$Vl,49:$Vm,54:$Vn,55:$Vo,56:$Vp,57:$Vq,65:$Vr,75:$V3},{4:$V5,5:$V6,6:39,9:14,10:16,11:6,16:$V7,17:40,20:$V8,21:20,22:$V9,25:$Va,26:$Vb,27:24,28:25,29:26,30:27,31:28,32:$Vc,33:$Vd,34:$Ve,36:$Vf,38:$Vg,39:$Vh,40:[1,123],41:$Vi,42:$Vj,43:$Vk,45:$Vl,49:$Vm,54:$Vn,55:$Vo,56:$Vp,57:$Vq,65:$Vr,75:$V3},{4:$V5,5:$V6,6:39,9:14,10:16,11:6,16:$V7,17:40,20:$V8,21:20,22:$V9,25:$Va,26:$Vb,27:24,28:25,29:26,30:27,31:28,32:$Vc,33:$Vd,34:$Ve,36:$Vf,38:$Vg,39:$Vh,40:[1,124],41:$Vi,42:$Vj,43:$Vk,45:$Vl,49:$Vm,54:$Vn,55:$Vo,56:$Vp,57:$Vq,65:$Vr,75:$V3},{40:[1,125]},{4:$V5,5:$V6,6:39,9:14,10:16,11:6,16:$V7,17:40,20:$V8,21:20,22:$V9,25:$Va,26:$Vb,27:24,28:25,29:26,30:27,31:28,32:$Vc,33:$Vd,34:$Ve,36:$Vf,38:$Vg,39:$Vh,40:[2,41],41:$Vi,42:$Vj,43:$Vk,45:$Vl,48:[1,126],49:$Vm,54:$Vn,55:$Vo,56:$Vp,57:$Vq,65:$Vr,75:$V3},{40:[1,127]},{4:$V5,5:$V6,6:39,9:14,10:16,11:6,16:$V7,17:40,20:$V8,21:20,22:$V9,25:$Va,26:$Vb,27:24,28:25,29:26,30:27,31:28,32:$Vc,33:$Vd,34:$Ve,36:$Vf,38:$Vg,39:$Vh,40:[2,39],41:$Vi,42:$Vj,43:$Vk,45:$Vl,47:[1,128],49:$Vm,54:$Vn,55:$Vo,56:$Vp,57:$Vq,65:$Vr,75:$V3},{17:129,65:$Vr},{17:130,65:$Vr},{51:131,74:$Vy},{51:132,74:$Vy},{51:133,74:$Vy},{59:[1,134],74:[2,52]},{5:[2,45]},{5:[2,67]},{5:[2,46]},{5:[2,47]},{5:[2,48]},{5:[1,135]},{5:[1,136]},{5:[1,137]},o($Vt,[2,17]),o($Vt,[2,33]),o($Vt,[2,34]),o($Vt,[2,35]),o($Vt,[2,36]),{19:[1,138]},o($Vt,[2,37]),{19:[1,139]},{51:140,74:$Vy},{51:141,74:$Vy},{5:[2,57]},{5:[2,43]},{5:[2,44]},{17:142,65:$Vr},o($Vz,[2,11]),o($Vt,[2,12]),o($Vt,[2,14]),o($Vv,$V4,{8:104,44:143}),o($Vw,$V4,{8:106,46:144}),{5:[2,55]},{5:[2,56]},{74:[2,51]},{40:[2,42]},{40:[2,40]}],\ndefaultActions: {7:[2,68],8:[2,1],9:[2,2],10:[2,3],49:[2,71],82:[2,53],83:[2,54],90:[2,70],113:[2,45],114:[2,67],115:[2,46],116:[2,47],117:[2,48],131:[2,57],132:[2,43],133:[2,44],140:[2,55],141:[2,56],142:[2,51],143:[2,42],144:[2,40]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n            function lex() {\n            var token;\n            token = tstack.pop() || lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                if (token instanceof Array) {\n                    tstack = token;\n                    token = tstack.pop();\n                }\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var errStr = '';\n            expected = [];\n            for (p in table[state]) {\n                if (this.terminals_[p] && p > TERROR) {\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\n                }\n            }\n            if (lexer.showPosition) {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n            } else {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n            }\n            this.parseError(errStr, {\n                text: lexer.match,\n                token: this.terminals_[symbol] || symbol,\n                line: lexer.yylineno,\n                loc: yyloc,\n                expected: expected\n            });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0: this.begin('open_directive'); return 75; \nbreak;\ncase 1: this.begin('type_directive'); return 76; \nbreak;\ncase 2: this.popState(); this.begin('arg_directive'); return 14; \nbreak;\ncase 3: this.popState(); this.popState(); return 78; \nbreak;\ncase 4:return 77;\nbreak;\ncase 5:return 5;\nbreak;\ncase 6:/* skip all whitespace */\nbreak;\ncase 7:/* skip same-line whitespace */\nbreak;\ncase 8:/* skip comments */\nbreak;\ncase 9:/* skip comments */\nbreak;\ncase 10:/* skip comments */\nbreak;\ncase 11:return 23;\nbreak;\ncase 12: this.begin('ID'); return 16; \nbreak;\ncase 13: this.begin('ID'); return 20; \nbreak;\ncase 14: yy_.yytext = yy_.yytext.trim(); this.begin('ALIAS'); return 65; \nbreak;\ncase 15: this.popState(); this.popState(); this.begin('LINE'); return 18; \nbreak;\ncase 16: this.popState(); this.popState(); return 5; \nbreak;\ncase 17: this.begin('LINE'); return 39; \nbreak;\ncase 18: this.begin('LINE'); return 41; \nbreak;\ncase 19: this.begin('LINE'); return 42; \nbreak;\ncase 20: this.begin('LINE'); return 43; \nbreak;\ncase 21: this.begin('LINE'); return 48; \nbreak;\ncase 22: this.begin('LINE'); return 45; \nbreak;\ncase 23: this.begin('LINE'); return 47; \nbreak;\ncase 24: this.popState(); return 19; \nbreak;\ncase 25:return 40;\nbreak;\ncase 26:return 60;\nbreak;\ncase 27:return 61;\nbreak;\ncase 28:return 54;\nbreak;\ncase 29:return 55;\nbreak;\ncase 30:return 56;\nbreak;\ncase 31:return 57;\nbreak;\ncase 32:return 52;\nbreak;\ncase 33:return 49;\nbreak;\ncase 34: this.begin('ID'); return 25; \nbreak;\ncase 35: this.begin('ID'); return 26; \nbreak;\ncase 36:return 32;\nbreak;\ncase 37:return 33;\nbreak;\ncase 38: this.begin(\"acc_title\");return 34; \nbreak;\ncase 39: this.popState(); return \"acc_title_value\"; \nbreak;\ncase 40: this.begin(\"acc_descr\");return 36; \nbreak;\ncase 41: this.popState(); return \"acc_descr_value\"; \nbreak;\ncase 42: this.begin(\"acc_descr_multiline\");\nbreak;\ncase 43: this.popState(); \nbreak;\ncase 44:return \"acc_descr_multiline_value\";\nbreak;\ncase 45:return 7;\nbreak;\ncase 46:return 22;\nbreak;\ncase 47:return 24;\nbreak;\ncase 48:return 59;\nbreak;\ncase 49:return 5;\nbreak;\ncase 50: yy_.yytext = yy_.yytext.trim(); return 65; \nbreak;\ncase 51:return 68;\nbreak;\ncase 52:return 69;\nbreak;\ncase 53:return 66;\nbreak;\ncase 54:return 67;\nbreak;\ncase 55:return 70;\nbreak;\ncase 56:return 71;\nbreak;\ncase 57:return 72;\nbreak;\ncase 58:return 73;\nbreak;\ncase 59:return 74;\nbreak;\ncase 60:return 63;\nbreak;\ncase 61:return 64;\nbreak;\ncase 62:return 5;\nbreak;\ncase 63:return 'INVALID';\nbreak;\n}\n},\nrules: [/^(?:%%\\{)/i,/^(?:((?:(?!\\}%%)[^:.])*))/i,/^(?::)/i,/^(?:\\}%%)/i,/^(?:((?:(?!\\}%%).|\\n)*))/i,/^(?:[\\n]+)/i,/^(?:\\s+)/i,/^(?:((?!\\n)\\s)+)/i,/^(?:#[^\\n]*)/i,/^(?:%(?!\\{)[^\\n]*)/i,/^(?:[^\\}]%%[^\\n]*)/i,/^(?:[0-9]+(?=[ \\n]+))/i,/^(?:participant\\b)/i,/^(?:actor\\b)/i,/^(?:[^\\->:\\n,;]+?(?=((?!\\n)\\s)+as(?!\\n)\\s|[#\\n;]|$))/i,/^(?:as\\b)/i,/^(?:(?:))/i,/^(?:loop\\b)/i,/^(?:rect\\b)/i,/^(?:opt\\b)/i,/^(?:alt\\b)/i,/^(?:else\\b)/i,/^(?:par\\b)/i,/^(?:and\\b)/i,/^(?:(?:[:]?(?:no)?wrap)?[^#\\n;]*)/i,/^(?:end\\b)/i,/^(?:left of\\b)/i,/^(?:right of\\b)/i,/^(?:links\\b)/i,/^(?:link\\b)/i,/^(?:properties\\b)/i,/^(?:details\\b)/i,/^(?:over\\b)/i,/^(?:note\\b)/i,/^(?:activate\\b)/i,/^(?:deactivate\\b)/i,/^(?:title\\s[^#\\n;]+)/i,/^(?:title:\\s[^#\\n;]+)/i,/^(?:accTitle\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*\\{\\s*)/i,/^(?:[\\}])/i,/^(?:[^\\}]*)/i,/^(?:sequenceDiagram\\b)/i,/^(?:autonumber\\b)/i,/^(?:off\\b)/i,/^(?:,)/i,/^(?:;)/i,/^(?:[^\\+\\->:\\n,;]+((?!(-x|--x|-\\)|--\\)))[\\-]*[^\\+\\->:\\n,;]+)*)/i,/^(?:->>)/i,/^(?:-->>)/i,/^(?:->)/i,/^(?:-->)/i,/^(?:-[x])/i,/^(?:--[x])/i,/^(?:-[\\)])/i,/^(?:--[\\)])/i,/^(?::(?:(?:no)?wrap)?[^#\\n;]+)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"acc_descr_multiline\":{\"rules\":[43,44],\"inclusive\":false},\"acc_descr\":{\"rules\":[41],\"inclusive\":false},\"acc_title\":{\"rules\":[39],\"inclusive\":false},\"open_directive\":{\"rules\":[1,8],\"inclusive\":false},\"type_directive\":{\"rules\":[2,3,8],\"inclusive\":false},\"arg_directive\":{\"rules\":[3,4,8],\"inclusive\":false},\"ID\":{\"rules\":[7,8,14],\"inclusive\":false},\"ALIAS\":{\"rules\":[7,8,15,16],\"inclusive\":false},\"LINE\":{\"rules\":[7,8,24],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,5,6,8,9,10,11,12,13,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,2],$V1=[1,3],$V2=[1,5],$V3=[1,7],$V4=[2,5],$V5=[1,15],$V6=[1,17],$V7=[1,19],$V8=[1,20],$V9=[1,21],$Va=[1,22],$Vb=[1,33],$Vc=[1,23],$Vd=[1,24],$Ve=[1,25],$Vf=[1,26],$Vg=[1,27],$Vh=[1,30],$Vi=[1,31],$Vj=[1,32],$Vk=[1,35],$Vl=[1,36],$Vm=[1,37],$Vn=[1,38],$Vo=[1,34],$Vp=[1,41],$Vq=[1,4,5,14,15,17,19,20,22,23,24,25,26,27,31,33,35,41,42,43,44,47,50],$Vr=[1,4,5,12,13,14,15,17,19,20,22,23,24,25,26,27,31,33,35,41,42,43,44,47,50],$Vs=[1,4,5,7,14,15,17,19,20,22,23,24,25,26,27,31,33,35,41,42,43,44,47,50],$Vt=[4,5,14,15,17,19,20,22,23,24,25,26,27,31,33,35,41,42,43,44,47,50];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"SPACE\":4,\"NL\":5,\"directive\":6,\"SD\":7,\"document\":8,\"line\":9,\"statement\":10,\"idStatement\":11,\"DESCR\":12,\"-->\":13,\"HIDE_EMPTY\":14,\"scale\":15,\"WIDTH\":16,\"COMPOSIT_STATE\":17,\"STRUCT_START\":18,\"STRUCT_STOP\":19,\"STATE_DESCR\":20,\"AS\":21,\"ID\":22,\"FORK\":23,\"JOIN\":24,\"CHOICE\":25,\"CONCURRENT\":26,\"note\":27,\"notePosition\":28,\"NOTE_TEXT\":29,\"direction\":30,\"acc_title\":31,\"acc_title_value\":32,\"acc_descr\":33,\"acc_descr_value\":34,\"acc_descr_multiline_value\":35,\"openDirective\":36,\"typeDirective\":37,\"closeDirective\":38,\":\":39,\"argDirective\":40,\"direction_tb\":41,\"direction_bt\":42,\"direction_rl\":43,\"direction_lr\":44,\"eol\":45,\";\":46,\"EDGE_STATE\":47,\"left_of\":48,\"right_of\":49,\"open_directive\":50,\"type_directive\":51,\"arg_directive\":52,\"close_directive\":53,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"SPACE\",5:\"NL\",7:\"SD\",12:\"DESCR\",13:\"-->\",14:\"HIDE_EMPTY\",15:\"scale\",16:\"WIDTH\",17:\"COMPOSIT_STATE\",18:\"STRUCT_START\",19:\"STRUCT_STOP\",20:\"STATE_DESCR\",21:\"AS\",22:\"ID\",23:\"FORK\",24:\"JOIN\",25:\"CHOICE\",26:\"CONCURRENT\",27:\"note\",29:\"NOTE_TEXT\",31:\"acc_title\",32:\"acc_title_value\",33:\"acc_descr\",34:\"acc_descr_value\",35:\"acc_descr_multiline_value\",39:\":\",41:\"direction_tb\",42:\"direction_bt\",43:\"direction_rl\",44:\"direction_lr\",46:\";\",47:\"EDGE_STATE\",48:\"left_of\",49:\"right_of\",50:\"open_directive\",51:\"type_directive\",52:\"arg_directive\",53:\"close_directive\"},\nproductions_: [0,[3,2],[3,2],[3,2],[3,2],[8,0],[8,2],[9,2],[9,1],[9,1],[10,1],[10,2],[10,3],[10,4],[10,1],[10,2],[10,1],[10,4],[10,3],[10,6],[10,1],[10,1],[10,1],[10,1],[10,4],[10,4],[10,1],[10,1],[10,2],[10,2],[10,1],[6,3],[6,5],[30,1],[30,1],[30,1],[30,1],[45,1],[45,1],[11,1],[11,1],[28,1],[28,1],[36,1],[37,1],[40,1],[38,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 4:\n /*console.warn('Root document', $$[$0]);*/ yy.setRootDoc($$[$0]);return $$[$0]; \nbreak;\ncase 5:\n this.$ = [] \nbreak;\ncase 6:\n\n        if($$[$0]!='nl'){\n            $$[$0-1].push($$[$0]);this.$ = $$[$0-1]\n        }\n        // console.warn('Got document',$$[$0-1], $$[$0]);\n    \nbreak;\ncase 7: case 8:\n this.$ = $$[$0] \nbreak;\ncase 9:\n this.$='nl';\nbreak;\ncase 10:\n /*console.warn('got id and descr', $$[$0]);*/this.$={ stmt: 'state', id: $$[$0], type: 'default', description: ''};\nbreak;\ncase 11:\n /*console.warn('got id and descr', $$[$0-1], $$[$0].trim());*/this.$={ stmt: 'state', id: $$[$0-1], type: 'default', description: yy.trimColon($$[$0])};\nbreak;\ncase 12:\n\n        /*console.warn('got id', $$[$0-2]);yy.addRelation($$[$0-2], $$[$0]);*/\n        this.$={ stmt: 'relation', state1: { stmt: 'state', id: $$[$0-2], type: 'default', description: '' }, state2:{ stmt: 'state', id: $$[$0] ,type: 'default', description: ''}};\n    \nbreak;\ncase 13:\n\n        /*yy.addRelation($$[$0-3], $$[$0-1], $$[$0].substr(1).trim());*/\n        this.$={ stmt: 'relation', state1: { stmt: 'state', id: $$[$0-3], type: 'default', description: '' }, state2:{ stmt: 'state', id: $$[$0-1] ,type: 'default', description: ''}, description: $$[$0].substr(1).trim()};\n    \nbreak;\ncase 17:\n\n        /* console.warn('Adding document for state without id ', $$[$0-3]);*/\n        this.$={ stmt: 'state', id: $$[$0-3], type: 'default', description: '', doc: $$[$0-1] }\n    \nbreak;\ncase 18:\n\n        var id=$$[$0];\n        var description = $$[$0-2].trim();\n        if($$[$0].match(':')){\n            var parts = $$[$0].split(':');\n            id=parts[0];\n            description = [description, parts[1]];\n        }\n        this.$={stmt: 'state', id: id, type: 'default', description: description};\n\n    \nbreak;\ncase 19:\n\n         // console.warn('Adding document for state with id zxzx', $$[$0-3], $$[$0-2], yy.getDirection()); yy.addDocument($$[$0-3]);\n         this.$={ stmt: 'state', id: $$[$0-3], type: 'default', description: $$[$0-5], doc: $$[$0-1] }\n    \nbreak;\ncase 20:\n\n        this.$={ stmt: 'state', id: $$[$0], type: 'fork' }\n    \nbreak;\ncase 21:\n\n        this.$={ stmt: 'state', id: $$[$0], type: 'join' }\n    \nbreak;\ncase 22:\n\n        this.$={ stmt: 'state', id: $$[$0], type: 'choice' }\n    \nbreak;\ncase 23:\n\n        this.$={ stmt: 'state', id: yy.getDividerId(), type: 'divider' }\n    \nbreak;\ncase 24:\n\n        /* console.warn('got NOTE, position: ', $$[$0-2].trim(), 'id = ', $$[$0-1].trim(), 'note: ', $$[$0]);*/\n        this.$={ stmt: 'state', id: $$[$0-1].trim(), note:{position: $$[$0-2].trim(), text: $$[$0].trim()}};\n    \nbreak;\ncase 28:\n this.$=$$[$0].trim();yy.setTitle(this.$); \nbreak;\ncase 29: case 30:\n this.$=$$[$0].trim();yy.setAccDescription(this.$); \nbreak;\ncase 33:\n yy.setDirection('TB');this.$={stmt:'dir', value:'TB'};\nbreak;\ncase 34:\n yy.setDirection('BT');this.$={stmt:'dir', value:'BT'};\nbreak;\ncase 35:\n yy.setDirection('RL'); this.$={stmt:'dir', value:'RL'};\nbreak;\ncase 36:\n yy.setDirection('LR');this.$={stmt:'dir', value:'LR'};\nbreak;\ncase 39: case 40:\nthis.$=$$[$0];\nbreak;\ncase 43:\n yy.parseDirective('%%{', 'open_directive'); \nbreak;\ncase 44:\n yy.parseDirective($$[$0], 'type_directive'); \nbreak;\ncase 45:\n $$[$0] = $$[$0].trim().replace(/'/g, '\"'); yy.parseDirective($$[$0], 'arg_directive'); \nbreak;\ncase 46:\n yy.parseDirective('}%%', 'close_directive', 'state'); \nbreak;\n}\n},\ntable: [{3:1,4:$V0,5:$V1,6:4,7:$V2,36:6,50:$V3},{1:[3]},{3:8,4:$V0,5:$V1,6:4,7:$V2,36:6,50:$V3},{3:9,4:$V0,5:$V1,6:4,7:$V2,36:6,50:$V3},{3:10,4:$V0,5:$V1,6:4,7:$V2,36:6,50:$V3},o([1,4,5,14,15,17,20,22,23,24,25,26,27,31,33,35,41,42,43,44,47,50],$V4,{8:11}),{37:12,51:[1,13]},{51:[2,43]},{1:[2,1]},{1:[2,2]},{1:[2,3]},{1:[2,4],4:$V5,5:$V6,6:28,9:14,10:16,11:18,14:$V7,15:$V8,17:$V9,20:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf,27:$Vg,30:29,31:$Vh,33:$Vi,35:$Vj,36:6,41:$Vk,42:$Vl,43:$Vm,44:$Vn,47:$Vo,50:$V3},{38:39,39:[1,40],53:$Vp},o([39,53],[2,44]),o($Vq,[2,6]),{6:28,10:42,11:18,14:$V7,15:$V8,17:$V9,20:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf,27:$Vg,30:29,31:$Vh,33:$Vi,35:$Vj,36:6,41:$Vk,42:$Vl,43:$Vm,44:$Vn,47:$Vo,50:$V3},o($Vq,[2,8]),o($Vq,[2,9]),o($Vq,[2,10],{12:[1,43],13:[1,44]}),o($Vq,[2,14]),{16:[1,45]},o($Vq,[2,16],{18:[1,46]}),{21:[1,47]},o($Vq,[2,20]),o($Vq,[2,21]),o($Vq,[2,22]),o($Vq,[2,23]),{28:48,29:[1,49],48:[1,50],49:[1,51]},o($Vq,[2,26]),o($Vq,[2,27]),{32:[1,52]},{34:[1,53]},o($Vq,[2,30]),o($Vr,[2,39]),o($Vr,[2,40]),o($Vq,[2,33]),o($Vq,[2,34]),o($Vq,[2,35]),o($Vq,[2,36]),o($Vs,[2,31]),{40:54,52:[1,55]},o($Vs,[2,46]),o($Vq,[2,7]),o($Vq,[2,11]),{11:56,22:$Vb,47:$Vo},o($Vq,[2,15]),o($Vt,$V4,{8:57}),{22:[1,58]},{22:[1,59]},{21:[1,60]},{22:[2,41]},{22:[2,42]},o($Vq,[2,28]),o($Vq,[2,29]),{38:61,53:$Vp},{53:[2,45]},o($Vq,[2,12],{12:[1,62]}),{4:$V5,5:$V6,6:28,9:14,10:16,11:18,14:$V7,15:$V8,17:$V9,19:[1,63],20:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf,27:$Vg,30:29,31:$Vh,33:$Vi,35:$Vj,36:6,41:$Vk,42:$Vl,43:$Vm,44:$Vn,47:$Vo,50:$V3},o($Vq,[2,18],{18:[1,64]}),{29:[1,65]},{22:[1,66]},o($Vs,[2,32]),o($Vq,[2,13]),o($Vq,[2,17]),o($Vt,$V4,{8:67}),o($Vq,[2,24]),o($Vq,[2,25]),{4:$V5,5:$V6,6:28,9:14,10:16,11:18,14:$V7,15:$V8,17:$V9,19:[1,68],20:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf,27:$Vg,30:29,31:$Vh,33:$Vi,35:$Vj,36:6,41:$Vk,42:$Vl,43:$Vm,44:$Vn,47:$Vo,50:$V3},o($Vq,[2,19])],\ndefaultActions: {7:[2,43],8:[2,1],9:[2,2],10:[2,3],50:[2,41],51:[2,42],55:[2,45]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n            function lex() {\n            var token;\n            token = tstack.pop() || lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                if (token instanceof Array) {\n                    tstack = token;\n                    token = tstack.pop();\n                }\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var errStr = '';\n            expected = [];\n            for (p in table[state]) {\n                if (this.terminals_[p] && p > TERROR) {\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\n                }\n            }\n            if (lexer.showPosition) {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n            } else {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n            }\n            this.parseError(errStr, {\n                text: lexer.match,\n                token: this.terminals_[symbol] || symbol,\n                line: lexer.yylineno,\n                loc: yyloc,\n                expected: expected\n            });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 41;\nbreak;\ncase 1:return 42;\nbreak;\ncase 2:return 43;\nbreak;\ncase 3:return 44;\nbreak;\ncase 4: this.begin('open_directive'); return 50; \nbreak;\ncase 5: this.begin('type_directive'); return 51; \nbreak;\ncase 6: this.popState(); this.begin('arg_directive'); return 39; \nbreak;\ncase 7: this.popState(); this.popState(); return 53; \nbreak;\ncase 8:return 52;\nbreak;\ncase 9:/* skip comments */\nbreak;\ncase 10:/* skip comments */{ /*console.log('Crap after close');*/ }\nbreak;\ncase 11:return 5;\nbreak;\ncase 12:/* skip all whitespace */\nbreak;\ncase 13:/* skip same-line whitespace */\nbreak;\ncase 14:/* skip comments */\nbreak;\ncase 15:/* skip comments */\nbreak;\ncase 16: this.pushState('SCALE'); /* console.log('Got scale', yy_.yytext);*/ return 15; \nbreak;\ncase 17:return 16;\nbreak;\ncase 18:this.popState();\nbreak;\ncase 19: this.begin(\"acc_title\");return 31; \nbreak;\ncase 20: this.popState(); return \"acc_title_value\"; \nbreak;\ncase 21: this.begin(\"acc_descr\");return 33; \nbreak;\ncase 22: this.popState(); return \"acc_descr_value\"; \nbreak;\ncase 23: this.begin(\"acc_descr_multiline\");\nbreak;\ncase 24: this.popState(); \nbreak;\ncase 25:return \"acc_descr_multiline_value\";\nbreak;\ncase 26: /*console.log('Starting STATE zxzx'+yy.getDirection());*/this.pushState('STATE'); \nbreak;\ncase 27:this.popState();yy_.yytext=yy_.yytext.slice(0,-8).trim(); /*console.warn('Fork Fork: ',yy_.yytext);*/return 23;\nbreak;\ncase 28:this.popState();yy_.yytext=yy_.yytext.slice(0,-8).trim();/*console.warn('Fork Join: ',yy_.yytext);*/return 24;\nbreak;\ncase 29:this.popState();yy_.yytext=yy_.yytext.slice(0,-10).trim();/*console.warn('Fork Join: ',yy_.yytext);*/return 25;\nbreak;\ncase 30:this.popState();yy_.yytext=yy_.yytext.slice(0,-8).trim();/*console.warn('Fork Fork: ',yy_.yytext);*/return 23;\nbreak;\ncase 31:this.popState();yy_.yytext=yy_.yytext.slice(0,-8).trim();/*console.warn('Fork Join: ',yy_.yytext);*/return 24;\nbreak;\ncase 32:this.popState();yy_.yytext=yy_.yytext.slice(0,-10).trim();/*console.warn('Fork Join: ',yy_.yytext);*/return 25;\nbreak;\ncase 33: return 41;\nbreak;\ncase 34: return 42;\nbreak;\ncase 35: return 43;\nbreak;\ncase 36: return 44;\nbreak;\ncase 37: /*console.log('Starting STATE_STRING zxzx');*/this.begin(\"STATE_STRING\");\nbreak;\ncase 38:this.popState();this.pushState('STATE_ID');return \"AS\";\nbreak;\ncase 39:this.popState();/* console.log('STATE_ID', yy_.yytext);*/return \"ID\";\nbreak;\ncase 40:this.popState();\nbreak;\ncase 41: /*console.log('Long description:', yy_.yytext);*/return \"STATE_DESCR\";\nbreak;\ncase 42:/*console.log('COMPOSIT_STATE', yy_.yytext);*/return 17;\nbreak;\ncase 43:this.popState();\nbreak;\ncase 44:this.popState();this.pushState('struct'); /*console.log('begin struct', yy_.yytext);*/return 18;\nbreak;\ncase 45: /*console.log('Ending struct');*/ this.popState(); return 19;\nbreak;\ncase 46:/* nothing */\nbreak;\ncase 47: this.begin('NOTE'); return 27; \nbreak;\ncase 48: this.popState();this.pushState('NOTE_ID');return 48;\nbreak;\ncase 49: this.popState();this.pushState('NOTE_ID');return 49;\nbreak;\ncase 50: this.popState();this.pushState('FLOATING_NOTE');\nbreak;\ncase 51:this.popState();this.pushState('FLOATING_NOTE_ID');return \"AS\";\nbreak;\ncase 52:/**/\nbreak;\ncase 53: /*console.log('Floating note text: ', yy_.yytext);*/return \"NOTE_TEXT\";\nbreak;\ncase 54:this.popState();/*console.log('Floating note ID', yy_.yytext);*/return \"ID\";\nbreak;\ncase 55: this.popState();this.pushState('NOTE_TEXT');/*console.log('Got ID for note', yy_.yytext);*/return 22;\nbreak;\ncase 56: this.popState();/*console.log('Got NOTE_TEXT for note',yy_.yytext);*/yy_.yytext = yy_.yytext.substr(2).trim();return 29;\nbreak;\ncase 57: this.popState();/*console.log('Got NOTE_TEXT for note',yy_.yytext);*/yy_.yytext = yy_.yytext.slice(0,-8).trim();return 29;\nbreak;\ncase 58: /*console.log('Got state diagram', yy_.yytext,'#');*/return 7; \nbreak;\ncase 59: /*console.log('Got state diagram', yy_.yytext,'#');*/return 7; \nbreak;\ncase 60: /*console.log('HIDE_EMPTY', yy_.yytext,'#');*/return 14; \nbreak;\ncase 61: /*console.log('EDGE_STATE=',yy_.yytext);*/ return 47;\nbreak;\ncase 62: /*console.log('=>ID=',yy_.yytext);*/ return 22;\nbreak;\ncase 63: yy_.yytext = yy_.yytext.trim(); /*console.log('Descr = ', yy_.yytext);*/ return 12; \nbreak;\ncase 64:return 13;\nbreak;\ncase 65:return 26;\nbreak;\ncase 66:return 5;\nbreak;\ncase 67:return 'INVALID';\nbreak;\n}\n},\nrules: [/^(?:.*direction\\s+TB[^\\n]*)/i,/^(?:.*direction\\s+BT[^\\n]*)/i,/^(?:.*direction\\s+RL[^\\n]*)/i,/^(?:.*direction\\s+LR[^\\n]*)/i,/^(?:%%\\{)/i,/^(?:((?:(?!\\}%%)[^:.])*))/i,/^(?::)/i,/^(?:\\}%%)/i,/^(?:((?:(?!\\}%%).|\\n)*))/i,/^(?:%%(?!\\{)[^\\n]*)/i,/^(?:[^\\}]%%[^\\n]*)/i,/^(?:[\\n]+)/i,/^(?:[\\s]+)/i,/^(?:((?!\\n)\\s)+)/i,/^(?:#[^\\n]*)/i,/^(?:%[^\\n]*)/i,/^(?:scale\\s+)/i,/^(?:\\d+)/i,/^(?:\\s+width\\b)/i,/^(?:accTitle\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*\\{\\s*)/i,/^(?:[\\}])/i,/^(?:[^\\}]*)/i,/^(?:state\\s+)/i,/^(?:.*<<fork>>)/i,/^(?:.*<<join>>)/i,/^(?:.*<<choice>>)/i,/^(?:.*\\[\\[fork\\]\\])/i,/^(?:.*\\[\\[join\\]\\])/i,/^(?:.*\\[\\[choice\\]\\])/i,/^(?:.*direction\\s+TB[^\\n]*)/i,/^(?:.*direction\\s+BT[^\\n]*)/i,/^(?:.*direction\\s+RL[^\\n]*)/i,/^(?:.*direction\\s+LR[^\\n]*)/i,/^(?:[\"])/i,/^(?:\\s*as\\s+)/i,/^(?:[^\\n\\{]*)/i,/^(?:[\"])/i,/^(?:[^\"]*)/i,/^(?:[^\\n\\s\\{]+)/i,/^(?:\\n)/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:[\\n])/i,/^(?:note\\s+)/i,/^(?:left of\\b)/i,/^(?:right of\\b)/i,/^(?:\")/i,/^(?:\\s*as\\s*)/i,/^(?:[\"])/i,/^(?:[^\"]*)/i,/^(?:[^\\n]*)/i,/^(?:\\s*[^:\\n\\s\\-]+)/i,/^(?:\\s*:[^:\\n;]+)/i,/^(?:[\\s\\S]*?end note\\b)/i,/^(?:stateDiagram\\s+)/i,/^(?:stateDiagram-v2\\s+)/i,/^(?:hide empty description\\b)/i,/^(?:\\[\\*\\])/i,/^(?:[^:\\n\\s\\-\\{]+)/i,/^(?:\\s*:[^:\\n;]+)/i,/^(?:-->)/i,/^(?:--)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"LINE\":{\"rules\":[13,14],\"inclusive\":false},\"close_directive\":{\"rules\":[13,14],\"inclusive\":false},\"arg_directive\":{\"rules\":[7,8,13,14],\"inclusive\":false},\"type_directive\":{\"rules\":[6,7,13,14],\"inclusive\":false},\"open_directive\":{\"rules\":[5,13,14],\"inclusive\":false},\"struct\":{\"rules\":[13,14,26,33,34,35,36,45,46,47,61,62,63,64,65],\"inclusive\":false},\"FLOATING_NOTE_ID\":{\"rules\":[54],\"inclusive\":false},\"FLOATING_NOTE\":{\"rules\":[51,52,53],\"inclusive\":false},\"NOTE_TEXT\":{\"rules\":[56,57],\"inclusive\":false},\"NOTE_ID\":{\"rules\":[55],\"inclusive\":false},\"NOTE\":{\"rules\":[48,49,50],\"inclusive\":false},\"acc_descr_multiline\":{\"rules\":[24,25],\"inclusive\":false},\"acc_descr\":{\"rules\":[22],\"inclusive\":false},\"acc_title\":{\"rules\":[20],\"inclusive\":false},\"SCALE\":{\"rules\":[17,18],\"inclusive\":false},\"ALIAS\":{\"rules\":[],\"inclusive\":false},\"STATE_ID\":{\"rules\":[39],\"inclusive\":false},\"STATE_STRING\":{\"rules\":[40,41],\"inclusive\":false},\"FORK_STATE\":{\"rules\":[],\"inclusive\":false},\"STATE\":{\"rules\":[13,14,27,28,29,30,31,32,37,38,42,43,44],\"inclusive\":false},\"ID\":{\"rules\":[13,14],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,4,9,10,11,12,14,15,16,19,21,23,26,44,47,58,59,60,61,62,63,64,66,67],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,2],$V1=[1,5],$V2=[6,9,11,17,18,20,22,23,24,26],$V3=[1,15],$V4=[1,16],$V5=[1,17],$V6=[1,18],$V7=[1,19],$V8=[1,20],$V9=[1,24],$Va=[4,6,9,11,17,18,20,22,23,24,26];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"journey\":4,\"document\":5,\"EOF\":6,\"directive\":7,\"line\":8,\"SPACE\":9,\"statement\":10,\"NEWLINE\":11,\"openDirective\":12,\"typeDirective\":13,\"closeDirective\":14,\":\":15,\"argDirective\":16,\"title\":17,\"acc_title\":18,\"acc_title_value\":19,\"acc_descr\":20,\"acc_descr_value\":21,\"acc_descr_multiline_value\":22,\"section\":23,\"taskName\":24,\"taskData\":25,\"open_directive\":26,\"type_directive\":27,\"arg_directive\":28,\"close_directive\":29,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"journey\",6:\"EOF\",9:\"SPACE\",11:\"NEWLINE\",15:\":\",17:\"title\",18:\"acc_title\",19:\"acc_title_value\",20:\"acc_descr\",21:\"acc_descr_value\",22:\"acc_descr_multiline_value\",23:\"section\",24:\"taskName\",25:\"taskData\",26:\"open_directive\",27:\"type_directive\",28:\"arg_directive\",29:\"close_directive\"},\nproductions_: [0,[3,3],[3,2],[5,0],[5,2],[8,2],[8,1],[8,1],[8,1],[7,4],[7,6],[10,1],[10,2],[10,2],[10,1],[10,1],[10,2],[10,1],[12,1],[13,1],[16,1],[14,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n return $$[$0-1]; \nbreak;\ncase 3:\n this.$ = [] \nbreak;\ncase 4:\n$$[$0-1].push($$[$0]);this.$ = $$[$0-1]\nbreak;\ncase 5: case 6:\n this.$ = $$[$0] \nbreak;\ncase 7: case 8:\n this.$=[];\nbreak;\ncase 11:\nyy.setTitle($$[$0].substr(6));this.$=$$[$0].substr(6);\nbreak;\ncase 12:\n this.$=$$[$0].trim();yy.setTitle(this.$); \nbreak;\ncase 13: case 14:\n this.$=$$[$0].trim();yy.setAccDescription(this.$); \nbreak;\ncase 15:\nyy.addSection($$[$0].substr(8));this.$=$$[$0].substr(8);\nbreak;\ncase 16:\nyy.addTask($$[$0-1], $$[$0]);this.$='task';\nbreak;\ncase 18:\n yy.parseDirective('%%{', 'open_directive'); \nbreak;\ncase 19:\n yy.parseDirective($$[$0], 'type_directive'); \nbreak;\ncase 20:\n $$[$0] = $$[$0].trim().replace(/'/g, '\"'); yy.parseDirective($$[$0], 'arg_directive'); \nbreak;\ncase 21:\n yy.parseDirective('}%%', 'close_directive', 'journey'); \nbreak;\n}\n},\ntable: [{3:1,4:$V0,7:3,12:4,26:$V1},{1:[3]},o($V2,[2,3],{5:6}),{3:7,4:$V0,7:3,12:4,26:$V1},{13:8,27:[1,9]},{27:[2,18]},{6:[1,10],7:21,8:11,9:[1,12],10:13,11:[1,14],12:4,17:$V3,18:$V4,20:$V5,22:$V6,23:$V7,24:$V8,26:$V1},{1:[2,2]},{14:22,15:[1,23],29:$V9},o([15,29],[2,19]),o($V2,[2,8],{1:[2,1]}),o($V2,[2,4]),{7:21,10:25,12:4,17:$V3,18:$V4,20:$V5,22:$V6,23:$V7,24:$V8,26:$V1},o($V2,[2,6]),o($V2,[2,7]),o($V2,[2,11]),{19:[1,26]},{21:[1,27]},o($V2,[2,14]),o($V2,[2,15]),{25:[1,28]},o($V2,[2,17]),{11:[1,29]},{16:30,28:[1,31]},{11:[2,21]},o($V2,[2,5]),o($V2,[2,12]),o($V2,[2,13]),o($V2,[2,16]),o($Va,[2,9]),{14:32,29:$V9},{29:[2,20]},{11:[1,33]},o($Va,[2,10])],\ndefaultActions: {5:[2,18],7:[2,2],24:[2,21],31:[2,20]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n            function lex() {\n            var token;\n            token = tstack.pop() || lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                if (token instanceof Array) {\n                    tstack = token;\n                    token = tstack.pop();\n                }\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var errStr = '';\n            expected = [];\n            for (p in table[state]) {\n                if (this.terminals_[p] && p > TERROR) {\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\n                }\n            }\n            if (lexer.showPosition) {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n            } else {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n            }\n            this.parseError(errStr, {\n                text: lexer.match,\n                token: this.terminals_[symbol] || symbol,\n                line: lexer.yylineno,\n                loc: yyloc,\n                expected: expected\n            });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0: this.begin('open_directive'); return 26; \nbreak;\ncase 1: this.begin('type_directive'); return 27; \nbreak;\ncase 2: this.popState(); this.begin('arg_directive'); return 15; \nbreak;\ncase 3: this.popState(); this.popState(); return 29; \nbreak;\ncase 4:return 28;\nbreak;\ncase 5:/* skip comments */\nbreak;\ncase 6:/* skip comments */\nbreak;\ncase 7:return 11;\nbreak;\ncase 8:/* skip whitespace */\nbreak;\ncase 9:/* skip comments */\nbreak;\ncase 10:return 4;\nbreak;\ncase 11:return 17;\nbreak;\ncase 12: this.begin(\"acc_title\");return 18; \nbreak;\ncase 13: this.popState(); return \"acc_title_value\"; \nbreak;\ncase 14: this.begin(\"acc_descr\");return 20; \nbreak;\ncase 15: this.popState(); return \"acc_descr_value\"; \nbreak;\ncase 16: this.begin(\"acc_descr_multiline\");\nbreak;\ncase 17: this.popState(); \nbreak;\ncase 18:return \"acc_descr_multiline_value\";\nbreak;\ncase 19:return 23;\nbreak;\ncase 20:return 24;\nbreak;\ncase 21:return 25;\nbreak;\ncase 22:return 15;\nbreak;\ncase 23:return 6;\nbreak;\ncase 24:return 'INVALID';\nbreak;\n}\n},\nrules: [/^(?:%%\\{)/i,/^(?:((?:(?!\\}%%)[^:.])*))/i,/^(?::)/i,/^(?:\\}%%)/i,/^(?:((?:(?!\\}%%).|\\n)*))/i,/^(?:%(?!\\{)[^\\n]*)/i,/^(?:[^\\}]%%[^\\n]*)/i,/^(?:[\\n]+)/i,/^(?:\\s+)/i,/^(?:#[^\\n]*)/i,/^(?:journey\\b)/i,/^(?:title\\s[^#\\n;]+)/i,/^(?:accTitle\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*:\\s*)/i,/^(?:(?!\\n||)*[^\\n]*)/i,/^(?:accDescr\\s*\\{\\s*)/i,/^(?:[\\}])/i,/^(?:[^\\}]*)/i,/^(?:section\\s[^#:\\n;]+)/i,/^(?:[^#:\\n;]+)/i,/^(?::[^#\\n;]+)/i,/^(?::)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"open_directive\":{\"rules\":[1],\"inclusive\":false},\"type_directive\":{\"rules\":[2,3],\"inclusive\":false},\"arg_directive\":{\"rules\":[3,4],\"inclusive\":false},\"acc_descr_multiline\":{\"rules\":[17,18],\"inclusive\":false},\"acc_descr\":{\"rules\":[15],\"inclusive\":false},\"acc_title\":{\"rules\":[13],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,5,6,7,8,9,10,11,12,14,16,19,20,21,22,23,24],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/**\n * This method will add a basic title and description element to a chart. The yy parser will need to\n * respond to getTitle and getAccDescription, where the title is the title element on the chart,\n * which is generally not displayed and the accDescription is the description element on the chart,\n * which is never displayed.\n *\n * The following charts display their title as a visual and accessibility element: gantt\n *\n * @param yy_parser\n * @param svg\n * @param id\n */\nexport default function addSVGAccessibilityFields(yy_parser, svg, id) {\n  if (typeof svg.insert === 'undefined') {\n    return;\n  }\n\n  let title_string = yy_parser.getTitle();\n  let description = yy_parser.getAccDescription();\n  svg.attr('role', 'img').attr('aria-labelledby', 'chart-title-' + id + ' chart-desc-' + id);\n  svg\n    .insert('desc', ':first-child')\n    .attr('id', 'chart-desc-' + id)\n    .text(description);\n  svg\n    .insert('title', ':first-child')\n    .attr('id', 'chart-title-' + id)\n    .text(title_string);\n}\n","import { sanitizeText as _sanitizeText } from './diagrams/common/common';\nimport { getConfig } from './config';\nlet title = '';\nlet description = '';\nconst sanitizeText = (txt) => _sanitizeText(txt, getConfig());\n\nexport const clear = function () {\n  title = '';\n  description = '';\n};\n\nexport const setTitle = function (txt) {\n  title = sanitizeText(txt).replace(/^\\s+/g, '');\n};\n\nexport const getTitle = function () {\n  return title;\n};\n\nexport const setAccDescription = function (txt) {\n  description = sanitizeText(txt).replace(/\\n\\s+/g, '\\n');\n};\n\nexport const getAccDescription = function () {\n  return description;\n};\n\nexport default {\n  setTitle,\n  getTitle,\n  getAccDescription,\n  setAccDescription,\n  clear,\n};\n","import { assignWithDepth } from './utils';\nimport { log } from './logger';\nimport theme from './themes';\nimport config from './defaultConfig';\n\nexport const defaultConfig = Object.freeze(config);\n\nlet siteConfig = assignWithDepth({}, defaultConfig);\nlet configFromInitialize;\nlet directives = [];\nlet currentConfig = assignWithDepth({}, defaultConfig);\n\nexport const updateCurrentConfig = (siteCfg, _directives) => {\n  // start with config beeing the siteConfig\n  let cfg = assignWithDepth({}, siteCfg);\n  // let sCfg = assignWithDepth(defaultConfig, siteConfigDelta);\n\n  // Join directives\n  let sumOfDirectives = {};\n  for (let i = 0; i < _directives.length; i++) {\n    const d = _directives[i];\n    sanitize(d);\n\n    // Apply the data from the directive where the the overrides the themeVaraibles\n    sumOfDirectives = assignWithDepth(sumOfDirectives, d);\n  }\n\n  cfg = assignWithDepth(cfg, sumOfDirectives);\n\n  if (sumOfDirectives.theme && theme[sumOfDirectives.theme]) {\n    const tmpConfigFromInitialize = assignWithDepth({}, configFromInitialize);\n    const themeVariables = assignWithDepth(\n      tmpConfigFromInitialize.themeVariables || {},\n      sumOfDirectives.themeVariables\n    );\n    cfg.themeVariables = theme[cfg.theme].getThemeVariables(themeVariables);\n  }\n\n  currentConfig = cfg;\n  return cfg;\n};\n\n/**\n * ## setSiteConfig\n *\n * | Function      | Description                           | Type        | Values                                  |\n * | ------------- | ------------------------------------- | ----------- | --------------------------------------- |\n * | setSiteConfig | Sets the siteConfig to desired values | Put Request | Any Values, except ones in secure array |\n *\n * **Notes:** Sets the siteConfig. The siteConfig is a protected configuration for repeat use. Calls\n * to reset() will reset the currentConfig to siteConfig. Calls to reset(configApi.defaultConfig)\n * will reset siteConfig and currentConfig to the defaultConfig Note: currentConfig is set in this\n * function _Default value: At default, will mirror Global Config_\n *\n * @param conf - The base currentConfig to use as siteConfig\n * @returns {object} - The siteConfig\n */\nexport const setSiteConfig = (conf) => {\n  siteConfig = assignWithDepth({}, defaultConfig);\n  siteConfig = assignWithDepth(siteConfig, conf);\n\n  if (conf.theme && theme[conf.theme]) {\n    siteConfig.themeVariables = theme[conf.theme].getThemeVariables(conf.themeVariables);\n  }\n\n  currentConfig = updateCurrentConfig(siteConfig, directives);\n  return siteConfig;\n};\n\nexport const saveConfigFromInitilize = (conf) => {\n  configFromInitialize = assignWithDepth({}, conf);\n};\n\nexport const updateSiteConfig = (conf) => {\n  siteConfig = assignWithDepth(siteConfig, conf);\n  updateCurrentConfig(siteConfig, directives);\n\n  return siteConfig;\n};\n/**\n * ## getSiteConfig\n *\n * | Function      | Description                                       | Type        | Values                           |\n * | ------------- | ------------------------------------------------- | ----------- | -------------------------------- |\n * | setSiteConfig | Returns the current siteConfig base configuration | Get Request | Returns Any Values in siteConfig |\n *\n * **Notes**: Returns **any** values in siteConfig.\n *\n * @returns {object} - The siteConfig\n */\nexport const getSiteConfig = () => {\n  return assignWithDepth({}, siteConfig);\n};\n/**\n * ## setConfig\n *\n * | Function      | Description                           | Type        | Values                                  |\n * | ------------- | ------------------------------------- | ----------- | --------------------------------------- |\n * | setSiteConfig | Sets the siteConfig to desired values | Put Request | Any Values, except ones in secure array |\n *\n * **Notes**: Sets the currentConfig. The parameter conf is sanitized based on the siteConfig.secure\n * keys. Any values found in conf with key found in siteConfig.secure will be replaced with the\n * corresponding siteConfig value.\n *\n * @param {any} conf - The potential currentConfig\n * @returns {any} - The currentConfig merged with the sanitized conf\n */\nexport const setConfig = (conf) => {\n  // sanitize(conf);\n  // Object.keys(conf).forEach(key => {\n  //   const manipulator = manipulators[key];\n  //   conf[key] = manipulator ? manipulator(conf[key]) : conf[key];\n  // });\n\n  assignWithDepth(currentConfig, conf);\n\n  return getConfig();\n};\n\n/**\n * ## getConfig\n *\n * | Function  | Description               | Type        | Return Values                  |\n * | --------- | ------------------------- | ----------- | ------------------------------ |\n * | getConfig | Obtains the currentConfig | Get Request | Any Values from current Config |\n *\n * **Notes**: Returns **any** the currentConfig\n *\n * @returns {any} - The currentConfig\n */\nexport const getConfig = () => {\n  return assignWithDepth({}, currentConfig);\n};\n/**\n * ## sanitize\n *\n * | Function | Description                            | Type        | Values |\n * | -------- | -------------------------------------- | ----------- | ------ |\n * | sanitize | Sets the siteConfig to desired values. | Put Request | None   |\n *\n * Ensures options parameter does not attempt to override siteConfig secure keys **Notes**: modifies\n * options in-place\n *\n * @param {any} options - The potential setConfig parameter\n */\nexport const sanitize = (options) => {\n  // Checking that options are not in the list of excluded options\n  Object.keys(siteConfig.secure).forEach((key) => {\n    if (typeof options[siteConfig.secure[key]] !== 'undefined') {\n      // DO NOT attempt to print options[siteConfig.secure[key]] within `${}` as a malicious script\n      // can exploit the logger's attempt to stringify the value and execute arbitrary code\n      log.debug(\n        `Denied attempt to modify a secure key ${siteConfig.secure[key]}`,\n        options[siteConfig.secure[key]]\n      );\n      delete options[siteConfig.secure[key]];\n    }\n  });\n\n  // Check that there no attempts of prototype pollution\n  Object.keys(options).forEach((key) => {\n    if (key.indexOf('__') === 0) {\n      delete options[key];\n    }\n  });\n  // Check that there no attempts of xss, there should be no tags at all in the directive\n  // blocking data urls as base64 urls can contain svgs with inline script tags\n  Object.keys(options).forEach((key) => {\n    if (typeof options[key] === 'string') {\n      if (\n        options[key].indexOf('<') > -1 ||\n        options[key].indexOf('>') > -1 ||\n        options[key].indexOf('url(data:') > -1\n      ) {\n        delete options[key];\n      }\n    }\n    if (typeof options[key] === 'object') {\n      sanitize(options[key]);\n    }\n  });\n};\n\n/**\n * Pushes in a directive to the configuration\n *\n * @param {object} directive The directive to push in\n */\nexport const addDirective = (directive) => {\n  if (directive.fontFamily) {\n    if (!directive.themeVariables) {\n      directive.themeVariables = { fontFamily: directive.fontFamily };\n    } else {\n      if (!directive.themeVariables.fontFamily) {\n        directive.themeVariables = { fontFamily: directive.fontFamily };\n      }\n    }\n  }\n  directives.push(directive);\n  updateCurrentConfig(siteConfig, directives);\n};\n\n/**\n * ## reset\n *\n * | Function | Description                  | Type        | Required | Values |\n * | -------- | ---------------------------- | ----------- | -------- | ------ |\n * | reset    | Resets currentConfig to conf | Put Request | Required | None   |\n *\n * ## conf\n *\n * | Parameter | Description                                                   | Type       | Required | Values                                       |\n * | --------- | ------------------------------------------------------------- | ---------- | -------- | -------------------------------------------- |\n * | conf      | base set of values, which currentConfig coul be **reset** to. | Dictionary | Required | Any Values, with respect to the secure Array |\n *\n * **Notes**: (default: current siteConfig ) (optional, default `getSiteConfig()`)\n */\nexport const reset = () => {\n  // Replace current config with siteConfig\n  directives = [];\n  updateCurrentConfig(siteConfig, directives);\n};\n","import intersectRect from './intersect/intersect-rect';\nimport { log } from '../logger';\nimport createLabel from './createLabel';\nimport { select } from 'd3';\nimport { getConfig } from '../config';\nimport { evaluate } from '../diagrams/common/common';\n\nconst rect = (parent, node) => {\n  log.trace('Creating subgraph rect for ', node.id, node);\n\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'cluster' + (node.class ? ' ' + node.class : ''))\n    .attr('id', node.id);\n\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  // Create the label and insert it after the rect\n  const label = shapeSvg.insert('g').attr('class', 'cluster-label');\n\n  const text = label\n    .node()\n    .appendChild(createLabel(node.labelText, node.labelStyle, undefined, true));\n\n  // Get the size of the label\n  let bbox = text.getBBox();\n\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n\n  const width = node.width <= bbox.width + padding ? bbox.width + padding : node.width;\n  if (node.width <= bbox.width + padding) {\n    node.diff = (bbox.width - node.width) / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n\n  log.trace('Data ', node, JSON.stringify(node));\n  // center the rect around its coordinate\n  rect\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', node.x - width / 2)\n    .attr('y', node.y - node.height / 2 - halfPadding)\n    .attr('width', width)\n    .attr('height', node.height + padding);\n\n  // Center the label\n  label.attr(\n    'transform',\n    'translate(' +\n      (node.x - bbox.width / 2) +\n      ', ' +\n      (node.y - node.height / 2 + node.padding / 3) +\n      ')'\n  );\n\n  const rectBox = rect.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n};\n\n/**\n * Non visiable cluster where the note is group with its\n *\n * @param {any} parent\n * @param {any} node\n * @returns {any} ShapeSvg\n */\nconst noteGroup = (parent, node) => {\n  // Add outer g element\n  const shapeSvg = parent.insert('g').attr('class', 'note-cluster').attr('id', node.id);\n\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n\n  // center the rect around its coordinate\n  rect\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', node.x - node.width / 2 - halfPadding)\n    .attr('y', node.y - node.height / 2 - halfPadding)\n    .attr('width', node.width + padding)\n    .attr('height', node.height + padding)\n    .attr('fill', 'none');\n\n  const rectBox = rect.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n};\nconst roundedWithTitle = (parent, node) => {\n  // Add outer g element\n  const shapeSvg = parent.insert('g').attr('class', node.classes).attr('id', node.id);\n\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  // Create the label and insert it after the rect\n  const label = shapeSvg.insert('g').attr('class', 'cluster-label');\n  const innerRect = shapeSvg.append('rect');\n\n  const text = label\n    .node()\n    .appendChild(createLabel(node.labelText, node.labelStyle, undefined, true));\n\n  // Get the size of the label\n  let bbox = text.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  bbox = text.getBBox();\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n\n  const width = node.width <= bbox.width + node.padding ? bbox.width + node.padding : node.width;\n  if (node.width <= bbox.width + node.padding) {\n    node.diff = (bbox.width + node.padding * 0 - node.width) / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n\n  // center the rect around its coordinate\n  rect\n    .attr('class', 'outer')\n    .attr('x', node.x - width / 2 - halfPadding)\n    .attr('y', node.y - node.height / 2 - halfPadding)\n    .attr('width', width + padding)\n    .attr('height', node.height + padding);\n  innerRect\n    .attr('class', 'inner')\n    .attr('x', node.x - width / 2 - halfPadding)\n    .attr('y', node.y - node.height / 2 - halfPadding + bbox.height - 1)\n    .attr('width', width + padding)\n    .attr('height', node.height + padding - bbox.height - 3);\n\n  // Center the label\n  label.attr(\n    'transform',\n    'translate(' +\n      (node.x - bbox.width / 2) +\n      ', ' +\n      (node.y -\n        node.height / 2 -\n        node.padding / 3 +\n        (evaluate(getConfig().flowchart.htmlLabels) ? 5 : 3)) +\n      ')'\n  );\n\n  const rectBox = rect.node().getBBox();\n  node.height = rectBox.height;\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst divider = (parent, node) => {\n  // Add outer g element\n  const shapeSvg = parent.insert('g').attr('class', node.classes).attr('id', node.id);\n\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n\n  // center the rect around its coordinate\n  rect\n    .attr('class', 'divider')\n    .attr('x', node.x - node.width / 2 - halfPadding)\n    .attr('y', node.y - node.height / 2)\n    .attr('width', node.width + padding)\n    .attr('height', node.height + padding);\n\n  const rectBox = rect.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.diff = -node.padding / 2;\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst shapes = { rect, roundedWithTitle, noteGroup, divider };\n\nlet clusterElems = {};\n\nexport const insertCluster = (elem, node) => {\n  log.trace('Inserting cluster');\n  const shape = node.shape || 'rect';\n  clusterElems[node.id] = shapes[shape](elem, node);\n};\nexport const getClusterTitleWidth = (elem, node) => {\n  const label = createLabel(node.labelText, node.labelStyle, undefined, true);\n  elem.node().appendChild(label);\n  const width = label.getBBox().width;\n  elem.node().removeChild(label);\n  return width;\n};\n\nexport const clear = () => {\n  clusterElems = {};\n};\n\nexport const positionCluster = (node) => {\n  log.info('Position cluster (' + node.id + ', ' + node.x + ', ' + node.y + ')');\n  const el = clusterElems[node.id];\n\n  el.attr('transform', 'translate(' + node.x + ', ' + node.y + ')');\n};\n","import { select } from 'd3';\nimport { log } from '../logger'; // eslint-disable-line\nimport { getConfig } from '../config';\nimport { sanitizeText, evaluate } from '../diagrams/common/common';\n\nconst sanitizeTxt = (txt) => sanitizeText(txt, getConfig());\n\n/**\n * @param dom\n * @param styleFn\n */\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\n/**\n * @param {any} node\n * @returns {SVGForeignObjectElement} Node\n */\nfunction addHtmlLabel(node) {\n  const fo = select(document.createElementNS('http://www.w3.org/2000/svg', 'foreignObject'));\n  const div = fo.append('xhtml:div');\n\n  const label = node.label;\n  const labelClass = node.isNode ? 'nodeLabel' : 'edgeLabel';\n  div.html(\n    '<span class=\"' +\n      labelClass +\n      '\" ' +\n      (node.labelStyle ? 'style=\"' + node.labelStyle + '\"' : '') +\n      '>' +\n      label +\n      '</span>'\n  );\n\n  applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block');\n  // Fix for firefox\n  div.style('white-space', 'nowrap');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n  return fo.node();\n}\n\nconst createLabel = (_vertexText, style, isTitle, isNode) => {\n  let vertexText = _vertexText || '';\n  if (typeof vertexText === 'object') vertexText = vertexText[0];\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    // TODO: addHtmlLabel accepts a labelStyle. Do we possibly have that?\n    vertexText = vertexText.replace(/\\\\n|\\n/g, '<br />');\n    log.info('vertexText' + vertexText);\n    const node = {\n      isNode,\n      label: vertexText.replace(\n        /fa[lrsb]?:fa-[\\w-]+/g,\n        (s) => `<i class='${s.replace(':', ' ')}'></i>`\n      ),\n      labelStyle: style.replace('fill:', 'color:'),\n    };\n    let vertexNode = addHtmlLabel(node);\n    // vertexNode.parentNode.removeChild(vertexNode);\n    return vertexNode;\n  } else {\n    const svgLabel = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n    svgLabel.setAttribute('style', style.replace('color:', 'fill:'));\n    let rows = [];\n    if (typeof vertexText === 'string') {\n      rows = vertexText.split(/\\\\n|\\n|<br\\s*\\/?>/gi);\n    } else if (Array.isArray(vertexText)) {\n      rows = vertexText;\n    } else {\n      rows = [];\n    }\n\n    for (let j = 0; j < rows.length; j++) {\n      const tspan = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n      tspan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n      tspan.setAttribute('dy', '1em');\n      tspan.setAttribute('x', '0');\n      if (isTitle) {\n        tspan.setAttribute('class', 'title-row');\n      } else {\n        tspan.setAttribute('class', 'row');\n      }\n      tspan.textContent = rows[j].trim();\n      svgLabel.appendChild(tspan);\n    }\n    return svgLabel;\n  }\n};\n\nexport default createLabel;\n","import { log } from '../logger'; // eslint-disable-line\nimport createLabel from './createLabel';\nimport { line, curveBasis, select } from 'd3';\nimport { getConfig } from '../config';\nimport utils from '../utils';\nimport { evaluate } from '../diagrams/common/common';\n\nlet edgeLabels = {};\nlet terminalLabels = {};\n\nexport const clear = () => {\n  edgeLabels = {};\n  terminalLabels = {};\n};\n\nexport const insertEdgeLabel = (elem, edge) => {\n  // Create the actual text element\n  const labelElement = createLabel(edge.label, edge.labelStyle);\n\n  // Create outer g, edgeLabel, this will be positioned after graph layout\n  const edgeLabel = elem.insert('g').attr('class', 'edgeLabel');\n\n  // Create inner g, label, this will be positioned now for centering the text\n  const label = edgeLabel.insert('g').attr('class', 'label');\n  label.node().appendChild(labelElement);\n\n  // Center the label\n  let bbox = labelElement.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = labelElement.children[0];\n    const dv = select(labelElement);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  label.attr('transform', 'translate(' + -bbox.width / 2 + ', ' + -bbox.height / 2 + ')');\n\n  // Make element accessible by id for positioning\n  edgeLabels[edge.id] = edgeLabel;\n\n  // Update the abstract data of the edge with the new information about its width and height\n  edge.width = bbox.width;\n  edge.height = bbox.height;\n\n  let fo;\n  if (edge.startLabelLeft) {\n    // Create the actual text element\n    const startLabelElement = createLabel(edge.startLabelLeft, edge.labelStyle);\n    const startEdgeLabelLeft = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = startEdgeLabelLeft.insert('g').attr('class', 'inner');\n    fo = inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startLeft = startEdgeLabelLeft;\n    setTerminalWidth(fo, edge.startLabelLeft);\n  }\n  if (edge.startLabelRight) {\n    // Create the actual text element\n    const startLabelElement = createLabel(edge.startLabelRight, edge.labelStyle);\n    const startEdgeLabelRight = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = startEdgeLabelRight.insert('g').attr('class', 'inner');\n    fo = startEdgeLabelRight.node().appendChild(startLabelElement);\n    inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startRight = startEdgeLabelRight;\n    setTerminalWidth(fo, edge.startLabelRight);\n  }\n  if (edge.endLabelLeft) {\n    // Create the actual text element\n    const endLabelElement = createLabel(edge.endLabelLeft, edge.labelStyle);\n    const endEdgeLabelLeft = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = endEdgeLabelLeft.insert('g').attr('class', 'inner');\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    endEdgeLabelLeft.node().appendChild(endLabelElement);\n\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endLeft = endEdgeLabelLeft;\n    setTerminalWidth(fo, edge.endLabelLeft);\n  }\n  if (edge.endLabelRight) {\n    // Create the actual text element\n    const endLabelElement = createLabel(edge.endLabelRight, edge.labelStyle);\n    const endEdgeLabelRight = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = endEdgeLabelRight.insert('g').attr('class', 'inner');\n\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    endEdgeLabelRight.node().appendChild(endLabelElement);\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endRight = endEdgeLabelRight;\n    setTerminalWidth(fo, edge.endLabelRight);\n  }\n};\n\n/**\n * @param {any} fo\n * @param {any} value\n */\nfunction setTerminalWidth(fo, value) {\n  if (getConfig().flowchart.htmlLabels && fo) {\n    fo.style.width = value.length * 9 + 'px';\n    fo.style.height = '12px';\n  }\n}\n\nexport const positionEdgeLabel = (edge, paths) => {\n  log.info('Moving label abc78 ', edge.id, edge.label, edgeLabels[edge.id]);\n  let path = paths.updatedPath ? paths.updatedPath : paths.originalPath;\n  if (edge.label) {\n    const el = edgeLabels[edge.id];\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      //   // debugger;\n      const pos = utils.calcLabelPosition(path);\n      log.info('Moving label from (', x, ',', y, ') to (', pos.x, ',', pos.y, ') abc78');\n      // x = pos.x;\n      // y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n\n  //let path = paths.updatedPath ? paths.updatedPath : paths.originalPath;\n  if (edge.startLabelLeft) {\n    const el = terminalLabels[edge.id].startLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeStart ? 10 : 0, 'start_left', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.startLabelRight) {\n    const el = terminalLabels[edge.id].startRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(\n        edge.arrowTypeStart ? 10 : 0,\n        'start_right',\n        path\n      );\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.endLabelLeft) {\n    const el = terminalLabels[edge.id].endLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, 'end_left', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.endLabelRight) {\n    const el = terminalLabels[edge.id].endRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, 'end_right', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n};\n\n// const getRelationType = function(type) {\n//   switch (type) {\n//     case stateDb.relationType.AGGREGATION:\n//       return 'aggregation';\n//     case stateDb.relationType.EXTENSION:\n//       return 'extension';\n//     case stateDb.relationType.COMPOSITION:\n//       return 'composition';\n//     case stateDb.relationType.DEPENDENCY:\n//       return 'dependency';\n//   }\n// };\n\nconst outsideNode = (node, point) => {\n  // log.warn('Checking bounds ', node, point);\n  const x = node.x;\n  const y = node.y;\n  const dx = Math.abs(point.x - x);\n  const dy = Math.abs(point.y - y);\n  const w = node.width / 2;\n  const h = node.height / 2;\n  if (dx >= w || dy >= h) {\n    return true;\n  }\n  return false;\n};\n\nexport const intersection = (node, outsidePoint, insidePoint) => {\n  log.warn(`intersection calc abc89:\n  outsidePoint: ${JSON.stringify(outsidePoint)}\n  insidePoint : ${JSON.stringify(insidePoint)}\n  node        : x:${node.x} y:${node.y} w:${node.width} h:${node.height}`);\n  const x = node.x;\n  const y = node.y;\n\n  const dx = Math.abs(x - insidePoint.x);\n  // const dy = Math.abs(y - insidePoint.y);\n  const w = node.width / 2;\n  let r = insidePoint.x < outsidePoint.x ? w - dx : w + dx;\n  const h = node.height / 2;\n\n  // const edges = {\n  //   x1: x - w,\n  //   x2: x + w,\n  //   y1: y - h,\n  //   y2: y + h\n  // };\n\n  // if (\n  //   outsidePoint.x === edges.x1 ||\n  //   outsidePoint.x === edges.x2 ||\n  //   outsidePoint.y === edges.y1 ||\n  //   outsidePoint.y === edges.y2\n  // ) {\n  //   log.warn('abc89 calc equals on edge', outsidePoint, edges);\n  //   return outsidePoint;\n  // }\n\n  const Q = Math.abs(outsidePoint.y - insidePoint.y);\n  const R = Math.abs(outsidePoint.x - insidePoint.x);\n  // log.warn();\n  if (Math.abs(y - outsidePoint.y) * w > Math.abs(x - outsidePoint.x) * h) { // eslint-disable-line\n    // Intersection is top or bottom of rect.\n    // let q = insidePoint.y < outsidePoint.y ? outsidePoint.y - h - y : y - h - outsidePoint.y;\n    let q = insidePoint.y < outsidePoint.y ? outsidePoint.y - h - y : y - h - outsidePoint.y;\n    r = (R * q) / Q;\n    const res = {\n      x: insidePoint.x < outsidePoint.x ? insidePoint.x + r : insidePoint.x - R + r,\n      y: insidePoint.y < outsidePoint.y ? insidePoint.y + Q - q : insidePoint.y - Q + q,\n    };\n\n    if (r === 0) {\n      res.x = outsidePoint.x;\n      res.y = outsidePoint.y;\n    }\n    if (R === 0) {\n      res.x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      res.y = outsidePoint.y;\n    }\n\n    log.warn(`abc89 topp/bott calc, Q ${Q}, q ${q}, R ${R}, r ${r}`, res);\n\n    return res;\n  } else {\n    // Intersection onn sides of rect\n    if (insidePoint.x < outsidePoint.x) {\n      r = outsidePoint.x - w - x;\n    } else {\n      // r = outsidePoint.x - w - x;\n      r = x - w - outsidePoint.x;\n    }\n    let q = (Q * r) / R;\n    //  OK let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : insidePoint.x + dx - w;\n    // OK let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : outsidePoint.x + r;\n    let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : insidePoint.x - R + r;\n    // let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : outsidePoint.x + r;\n    let _y = insidePoint.y < outsidePoint.y ? insidePoint.y + q : insidePoint.y - q;\n    log.warn(`sides calc abc89, Q ${Q}, q ${q}, R ${R}, r ${r}`, { _x, _y });\n    if (r === 0) {\n      _x = outsidePoint.x;\n      _y = outsidePoint.y;\n    }\n    if (R === 0) {\n      _x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      _y = outsidePoint.y;\n    }\n\n    return { x: _x, y: _y };\n  }\n};\n/**\n * This function will page a path and node where the last point(s) in the path is inside the node\n * and return an update path ending by the border of the node.\n *\n * @param {Array} _points\n * @param {any} boundryNode\n * @returns {Array} Points\n */\nconst cutPathAtIntersect = (_points, boundryNode) => {\n  log.warn('abc88 cutPathAtIntersect', _points, boundryNode);\n  let points = [];\n  let lastPointOutside = _points[0];\n  let isInside = false;\n  _points.forEach((point) => {\n    // const node = clusterDb[edge.toCluster].node;\n    log.info('abc88 checking point', point, boundryNode);\n\n    // check if point is inside the boundry rect\n    if (!outsideNode(boundryNode, point) && !isInside) {\n      // First point inside the rect found\n      // Calc the intersection coord between the point anf the last opint ouside the rect\n      const inter = intersection(boundryNode, lastPointOutside, point);\n      log.warn('abc88 inside', point, lastPointOutside, inter);\n      log.warn('abc88 intersection', inter);\n\n      // // Check case where the intersection is the same as the last point\n      let pointPresent = false;\n      points.forEach((p) => {\n        pointPresent = pointPresent || (p.x === inter.x && p.y === inter.y);\n      });\n      // // if (!pointPresent) {\n      if (!points.find((e) => e.x === inter.x && e.y === inter.y)) {\n        points.push(inter);\n      } else {\n        log.warn('abc88 no intersect', inter, points);\n      }\n      // points.push(inter);\n      isInside = true;\n    } else {\n      // Outside\n      log.warn('abc88 outside', point, lastPointOutside);\n      lastPointOutside = point;\n      // points.push(point);\n      if (!isInside) points.push(point);\n    }\n  });\n  log.warn('abc88 returning points', points);\n  return points;\n};\n\n//(edgePaths, e, edge, clusterDb, diagramtype, graph)\nexport const insertEdge = function (elem, e, edge, clusterDb, diagramType, graph) {\n  let points = edge.points;\n  let pointsHasChanged = false;\n  const tail = graph.node(e.v);\n  var head = graph.node(e.w);\n\n  log.info('abc88 InsertEdge: ', edge);\n  if (head.intersect && tail.intersect) {\n    points = points.slice(1, edge.points.length - 1);\n    points.unshift(tail.intersect(points[0]));\n    log.info(\n      'Last point',\n      points[points.length - 1],\n      head,\n      head.intersect(points[points.length - 1])\n    );\n    points.push(head.intersect(points[points.length - 1]));\n  }\n  if (edge.toCluster) {\n    log.info('to cluster abc88', clusterDb[edge.toCluster]);\n    points = cutPathAtIntersect(edge.points, clusterDb[edge.toCluster].node);\n    // log.trace('edge', edge);\n    // points = [];\n    // let lastPointOutside; // = edge.points[0];\n    // let isInside = false;\n    // edge.points.forEach(point => {\n    //   const node = clusterDb[edge.toCluster].node;\n    //   log.warn('checking from', edge.fromCluster, point, node);\n\n    //   if (!outsideNode(node, point) && !isInside) {\n    //     log.trace('inside', edge.toCluster, point, lastPointOutside);\n\n    //     // First point inside the rect\n    //     const inter = intersection(node, lastPointOutside, point);\n\n    //     let pointPresent = false;\n    //     points.forEach(p => {\n    //       pointPresent = pointPresent || (p.x === inter.x && p.y === inter.y);\n    //     });\n    //     // if (!pointPresent) {\n    //     if (!points.find(e => e.x === inter.x && e.y === inter.y)) {\n    //       points.push(inter);\n    //     } else {\n    //       log.warn('no intersect', inter, points);\n    //     }\n    //     isInside = true;\n    // } else {\n    //   // outtside\n    //   lastPointOutside = point;\n    //   if (!isInside) points.push(point);\n    // }\n    // });\n    pointsHasChanged = true;\n  }\n\n  if (edge.fromCluster) {\n    log.info('from cluster abc88', clusterDb[edge.fromCluster]);\n    points = cutPathAtIntersect(points.reverse(), clusterDb[edge.fromCluster].node).reverse();\n    // log.warn('edge', edge);\n    // log.warn('from cluster', clusterDb[edge.fromCluster], points);\n    // const updatedPoints = [];\n    // let lastPointOutside = edge.points[edge.points.length - 1];\n    // let isInside = false;\n    // for (let i = points.length - 1; i >= 0; i--) {\n    //   const point = points[i];\n    //   const node = clusterDb[edge.fromCluster].node;\n    //   log.warn('checking to', edge.fromCluster, point, node);\n\n    //   if (!outsideNode(node, point) && !isInside) {\n    //     log.warn('inside', edge.fromCluster, point, node);\n\n    //     // First point inside the rect\n    //     const inter = intersection(node, lastPointOutside, point);\n    //     log.warn('intersect', intersection(node, lastPointOutside, point));\n    //     let pointPresent = false;\n    //     points.forEach(p => {\n    //       pointPresent = pointPresent || (p.x === inter.x && p.y === inter.y);\n    //     });\n    //     // if (!pointPresent) {\n    //     if (!points.find(e => e.x === inter.x && e.y === inter.y)) {\n    //       updatedPoints.unshift(inter);\n    //       log.warn('Adding point -updated = ', updatedPoints);\n    //     } else {\n    //       log.warn('no intersect', inter, points);\n    //     }\n    //     // points.push(insterection);\n    //     isInside = true;\n    //   } else {\n    //     // at the outside\n    //     // if (!isInside) updatedPoints.unshift(point);\n    //     updatedPoints.unshift(point);\n    //     log.warn('Outside point', point, updatedPoints);\n    //   }\n    //   lastPointOutside = point;\n    // }\n    // points = updatedPoints;\n    // points = edge.points;\n    pointsHasChanged = true;\n  }\n\n  // The data for our line\n  const lineData = points.filter((p) => !Number.isNaN(p.y));\n\n  // This is the accessor function we talked about above\n  let curve;\n  // Currently only flowcharts get the curve from the settings, perhaps this should\n  // be expanded to a common setting? Restricting it for now in order not to cause side-effects that\n  // have not been thought through\n  if (diagramType === 'graph' || diagramType === 'flowchart') {\n    curve = edge.curve || curveBasis;\n  } else {\n    curve = curveBasis;\n  }\n  // curve = curveLinear;\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    })\n    .curve(curve);\n\n  // Contruct stroke classes based on properties\n  let strokeClasses;\n  switch (edge.thickness) {\n    case 'normal':\n      strokeClasses = 'edge-thickness-normal';\n      break;\n    case 'thick':\n      strokeClasses = 'edge-thickness-thick';\n      break;\n    default:\n      strokeClasses = '';\n  }\n  switch (edge.pattern) {\n    case 'solid':\n      strokeClasses += ' edge-pattern-solid';\n      break;\n    case 'dotted':\n      strokeClasses += ' edge-pattern-dotted';\n      break;\n    case 'dashed':\n      strokeClasses += ' edge-pattern-dashed';\n      break;\n  }\n\n  const svgPath = elem\n    .append('path')\n    .attr('d', lineFunction(lineData))\n    .attr('id', edge.id)\n    .attr('class', ' ' + strokeClasses + (edge.classes ? ' ' + edge.classes : ''))\n    .attr('style', edge.style);\n\n  // DEBUG code, adds a red circle at each edge coordinate\n  // edge.points.forEach(point => {\n  //   elem\n  //     .append('circle')\n  //     .style('stroke', 'red')\n  //     .style('fill', 'red')\n  //     .attr('r', 1)\n  //     .attr('cx', point.x)\n  //     .attr('cy', point.y);\n  // });\n\n  let url = '';\n  if (getConfig().state.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n  log.info('arrowTypeStart', edge.arrowTypeStart);\n  log.info('arrowTypeEnd', edge.arrowTypeEnd);\n\n  switch (edge.arrowTypeStart) {\n    case 'arrow_cross':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-crossStart' + ')');\n      break;\n    case 'arrow_point':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-pointStart' + ')');\n      break;\n    case 'arrow_barb':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-barbStart' + ')');\n      break;\n    case 'arrow_circle':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-circleStart' + ')');\n      break;\n    case 'aggregation':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-aggregationStart' + ')');\n      break;\n    case 'extension':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-extensionStart' + ')');\n      break;\n    case 'composition':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-compositionStart' + ')');\n      break;\n    case 'dependency':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-dependencyStart' + ')');\n      break;\n    default:\n  }\n  switch (edge.arrowTypeEnd) {\n    case 'arrow_cross':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-crossEnd' + ')');\n      break;\n    case 'arrow_point':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-pointEnd' + ')');\n      break;\n    case 'arrow_barb':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-barbEnd' + ')');\n      break;\n    case 'arrow_circle':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-circleEnd' + ')');\n      break;\n    case 'aggregation':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-aggregationEnd' + ')');\n      break;\n    case 'extension':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-extensionEnd' + ')');\n      break;\n    case 'composition':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-compositionEnd' + ')');\n      break;\n    case 'dependency':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-dependencyEnd' + ')');\n      break;\n    default:\n  }\n  let paths = {};\n  if (pointsHasChanged) {\n    paths.updatedPath = points;\n  }\n  paths.originalPath = edge.points;\n  return paths;\n};\n","import dagre from 'dagre';\nimport graphlib from 'graphlib';\nimport insertMarkers from './markers';\nimport { updateNodeBounds } from './shapes/util';\nimport {\n  clear as clearGraphlib,\n  clusterDb,\n  adjustClustersAndEdges,\n  findNonClusterChild,\n  sortNodesByHierarchy,\n} from './mermaid-graphlib';\nimport { insertNode, positionNode, clear as clearNodes, setNodeElem } from './nodes';\nimport { insertCluster, clear as clearClusters } from './clusters';\nimport { insertEdgeLabel, positionEdgeLabel, insertEdge, clear as clearEdges } from './edges';\nimport { log } from '../logger';\n\nconst recursiveRender = (_elem, graph, diagramtype, parentCluster) => {\n  log.info('Graph in recursive render: XXX', graphlib.json.write(graph), parentCluster);\n  const dir = graph.graph().rankdir;\n  log.trace('Dir in recursive render - dir:', dir);\n\n  const elem = _elem.insert('g').attr('class', 'root'); // eslint-disable-line\n  if (!graph.nodes()) {\n    log.info('No nodes found for', graph);\n  } else {\n    log.info('Recursive render XXX', graph.nodes());\n  }\n  if (graph.edges().length > 0) {\n    log.trace('Recursive edges', graph.edge(graph.edges()[0]));\n  }\n  const clusters = elem.insert('g').attr('class', 'clusters'); // eslint-disable-line\n  const edgePaths = elem.insert('g').attr('class', 'edgePaths');\n  const edgeLabels = elem.insert('g').attr('class', 'edgeLabels');\n  const nodes = elem.insert('g').attr('class', 'nodes');\n\n  // Insert nodes, this will insert them into the dom and each node will get a size. The size is updated\n  // to the abstract node and is later used by dagre for the layout\n  graph.nodes().forEach(function (v) {\n    const node = graph.node(v);\n    if (typeof parentCluster !== 'undefined') {\n      const data = JSON.parse(JSON.stringify(parentCluster.clusterData));\n      // data.clusterPositioning = true;\n      log.info('Setting data for cluster XXX (', v, ') ', data, parentCluster);\n      graph.setNode(parentCluster.id, data);\n      if (!graph.parent(v)) {\n        log.trace('Setting parent', v, parentCluster.id);\n        graph.setParent(v, parentCluster.id, data);\n      }\n    }\n    log.info('(Insert) Node XXX' + v + ': ' + JSON.stringify(graph.node(v)));\n    if (node && node.clusterNode) {\n      // const children = graph.children(v);\n      log.info('Cluster identified', v, node.width, graph.node(v));\n      const o = recursiveRender(nodes, node.graph, diagramtype, graph.node(v));\n      const newEl = o.elem;\n      updateNodeBounds(node, newEl);\n      node.diff = o.diff || 0;\n      log.info('Node bounds (abc123)', v, node, node.width, node.x, node.y);\n      setNodeElem(newEl, node);\n\n      log.warn('Recursive render complete ', newEl, node);\n    } else {\n      if (graph.children(v).length > 0) {\n        // This is a cluster but not to be rendered recusively\n        // Render as before\n        log.info('Cluster - the non recursive path XXX', v, node.id, node, graph);\n        log.info(findNonClusterChild(node.id, graph));\n        clusterDb[node.id] = { id: findNonClusterChild(node.id, graph), node };\n        // insertCluster(clusters, graph.node(v));\n      } else {\n        log.info('Node - the non recursive path', v, node.id, node);\n        insertNode(nodes, graph.node(v), dir);\n      }\n    }\n  });\n\n  // Insert labels, this will insert them into the dom so that the width can be calculated\n  // Also figure out which edges point to/from clusters and adjust them accordingly\n  // Edges from/to clusters really points to the first child in the cluster.\n  // TODO: pick optimal child in the cluster to us as link anchor\n  graph.edges().forEach(function (e) {\n    const edge = graph.edge(e.v, e.w, e.name);\n    log.info('Edge ' + e.v + ' -> ' + e.w + ': ' + JSON.stringify(e));\n    log.info('Edge ' + e.v + ' -> ' + e.w + ': ', e, ' ', JSON.stringify(graph.edge(e)));\n\n    // Check if link is either from or to a cluster\n    log.info('Fix', clusterDb, 'ids:', e.v, e.w, 'Translateing: ', clusterDb[e.v], clusterDb[e.w]);\n    insertEdgeLabel(edgeLabels, edge);\n  });\n\n  graph.edges().forEach(function (e) {\n    log.info('Edge ' + e.v + ' -> ' + e.w + ': ' + JSON.stringify(e));\n  });\n  log.info('#############################################');\n  log.info('###                Layout                 ###');\n  log.info('#############################################');\n  log.info(graph);\n  dagre.layout(graph);\n  log.info('Graph after layout:', graphlib.json.write(graph));\n  // Move the nodes to the correct place\n  let diff = 0;\n  sortNodesByHierarchy(graph).forEach(function (v) {\n    const node = graph.node(v);\n    log.info('Position ' + v + ': ' + JSON.stringify(graph.node(v)));\n    log.info(\n      'Position ' + v + ': (' + node.x,\n      ',' + node.y,\n      ') width: ',\n      node.width,\n      ' height: ',\n      node.height\n    );\n    if (node && node.clusterNode) {\n      // clusterDb[node.id].node = node;\n\n      positionNode(node);\n    } else {\n      // Non cluster node\n      if (graph.children(v).length > 0) {\n        // A cluster in the non-recurive way\n        // positionCluster(node);\n        insertCluster(clusters, node);\n        clusterDb[node.id].node = node;\n      } else {\n        positionNode(node);\n      }\n    }\n  });\n\n  // Move the edge labels to the correct place after layout\n  graph.edges().forEach(function (e) {\n    const edge = graph.edge(e);\n    log.info('Edge ' + e.v + ' -> ' + e.w + ': ' + JSON.stringify(edge), edge);\n\n    const paths = insertEdge(edgePaths, e, edge, clusterDb, diagramtype, graph);\n    positionEdgeLabel(edge, paths);\n  });\n\n  graph.nodes().forEach(function (v) {\n    const n = graph.node(v);\n    log.info(v, n.type, n.diff);\n    if (n.type === 'group') {\n      diff = n.diff;\n    }\n  });\n  return { elem, diff };\n};\n\nexport const render = (elem, graph, markers, diagramtype, id) => {\n  insertMarkers(elem, markers, diagramtype, id);\n  clearNodes();\n  clearEdges();\n  clearClusters();\n  clearGraphlib();\n\n  log.warn('Graph at first:', graphlib.json.write(graph));\n  adjustClustersAndEdges(graph);\n  log.warn('Graph after:', graphlib.json.write(graph));\n  // log.warn('Graph ever  after:', graphlib.json.write(graph.node('A').graph));\n  recursiveRender(elem, graph, diagramtype);\n};\n\n// const shapeDefinitions = {};\n// export const addShape = ({ shapeType: fun }) => {\n//   shapeDefinitions[shapeType] = fun;\n// };\n\n// const arrowDefinitions = {};\n// export const addArrow = ({ arrowType: fun }) => {\n//   arrowDefinitions[arrowType] = fun;\n// };\n","/*\n * Borrowed with love from from dagrge-d3. Many thanks to cpettitt!\n */\n\nimport node from './intersect-node.js';\nimport circle from './intersect-circle.js';\nimport ellipse from './intersect-ellipse.js';\nimport polygon from './intersect-polygon.js';\nimport rect from './intersect-rect.js';\n\nexport default {\n  node,\n  circle,\n  ellipse,\n  polygon,\n  rect,\n};\n","import intersectEllipse from './intersect-ellipse';\n\n/**\n * @param node\n * @param rx\n * @param point\n */\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n\nexport default intersectCircle;\n","/**\n * @param node\n * @param rx\n * @param ry\n * @param point\n */\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs((rx * ry * px) / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs((rx * ry * py) / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return { x: cx + dx, y: cy + dy };\n}\n\nexport default intersectEllipse;\n","/**\n * Returns the point at which two lines, p and q, intersect or returns undefined if they do not intersect.\n *\n * @param p1\n * @param p2\n * @param q1\n * @param q2\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\n/**\n * @param r1\n * @param r2\n */\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n\nexport default intersectLine;\n","module.exports = intersectNode;\n\n/**\n * @param node\n * @param point\n */\nfunction intersectNode(node, point) {\n  // console.info('Intersect Node');\n  return node.intersect(point);\n}\n","/* eslint \"no-console\": off */\n\nimport intersectLine from './intersect-line';\n\nexport default intersectPolygon;\n\n/**\n * Returns the point ({x, y}) at which the point argument intersects with the node argument assuming\n * that it has the shape specified by polygon.\n *\n * @param node\n * @param polyPoints\n * @param point\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  if (typeof polyPoints.forEach === 'function') {\n    polyPoints.forEach(function (entry) {\n      minX = Math.min(minX, entry.x);\n      minY = Math.min(minY, entry.y);\n    });\n  } else {\n    minX = Math.min(minX, polyPoints.x);\n    minY = Math.min(minY, polyPoints.y);\n  }\n\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(\n      node,\n      point,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    // console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n","const intersectRect = (node, point) => {\r\n  var x = node.x;\r\n  var y = node.y;\r\n\r\n  // Rectangle intersection algorithm from:\r\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\r\n  var dx = point.x - x;\r\n  var dy = point.y - y;\r\n  var w = node.width / 2;\r\n  var h = node.height / 2;\r\n\r\n  var sx, sy;\r\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\r\n    // Intersection is top or bottom of rect.\r\n    if (dy < 0) {\r\n      h = -h;\r\n    }\r\n    sx = dy === 0 ? 0 : (h * dx) / dy;\r\n    sy = h;\r\n  } else {\r\n    // Intersection is left or right of rect.\r\n    if (dx < 0) {\r\n      w = -w;\r\n    }\r\n    sx = w;\r\n    sy = dx === 0 ? 0 : (w * dy) / dx;\r\n  }\r\n\r\n  return { x: x + sx, y: y + sy };\r\n};\r\n\r\nexport default intersectRect;\r\n","/** Setup arrow head and define the marker. The result is appended to the svg. */\n\nimport { log } from '../logger';\n\n// Only add the number of markers that the diagram needs\nconst insertMarkers = (elem, markerArray, type, id) => {\n  markerArray.forEach((markerName) => {\n    markers[markerName](elem, type, id);\n  });\n};\n\nconst extension = (elem, type, id) => {\n  log.trace('Making markers for ', id);\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-extensionStart')\n    .attr('class', 'marker extension ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 1,7 L18,13 V 1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-extensionEnd')\n    .attr('class', 'marker extension ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 1,1 V 13 L18,7 Z'); // this is actual shape for arrowhead\n};\n\nconst composition = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-compositionStart')\n    .attr('class', 'marker composition ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-compositionEnd')\n    .attr('class', 'marker composition ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n};\nconst aggregation = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-aggregationStart')\n    .attr('class', 'marker aggregation ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-aggregationEnd')\n    .attr('class', 'marker aggregation ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n};\nconst dependency = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-dependencyStart')\n    .attr('class', 'marker dependency ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 5,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-dependencyEnd')\n    .attr('class', 'marker dependency ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L14,7 L9,1 Z');\n};\nconst point = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-pointEnd')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 12)\n    .attr('markerHeight', 12)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  elem\n    .append('marker')\n    .attr('id', type + '-pointStart')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 0)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 12)\n    .attr('markerHeight', 12)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0 5 L 10 10 L 10 0 z')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n};\nconst circle = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-circleEnd')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 11)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('cx', '5')\n    .attr('cy', '5')\n    .attr('r', '5')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n\n  elem\n    .append('marker')\n    .attr('id', type + '-circleStart')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', -1)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('cx', '5')\n    .attr('cy', '5')\n    .attr('r', '5')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n};\nconst cross = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-crossEnd')\n    .attr('class', 'marker cross ' + type)\n    .attr('viewBox', '0 0 11 11')\n    .attr('refX', 12)\n    .attr('refY', 5.2)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('path')\n    // .attr('stroke', 'black')\n    .attr('d', 'M 1,1 l 9,9 M 10,1 l -9,9')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 2)\n    .style('stroke-dasharray', '1,0');\n\n  elem\n    .append('marker')\n    .attr('id', type + '-crossStart')\n    .attr('class', 'marker cross ' + type)\n    .attr('viewBox', '0 0 11 11')\n    .attr('refX', -1)\n    .attr('refY', 5.2)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('path')\n    // .attr('stroke', 'black')\n    .attr('d', 'M 1,1 l 9,9 M 10,1 l -9,9')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 2)\n    .style('stroke-dasharray', '1,0');\n};\nconst barb = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-barbEnd')\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 14)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 19,7 L9,13 L14,7 L9,1 Z');\n};\n\n// TODO rename the class diagram markers to something shape descriptive and semanitc free\nconst markers = {\n  extension,\n  composition,\n  aggregation,\n  dependency,\n  point,\n  circle,\n  cross,\n  barb,\n};\nexport default insertMarkers;\n","/** Decorates with functions required by mermaids dagre-wrapper. */\nimport { log } from '../logger';\nimport graphlib from 'graphlib';\n\nexport let clusterDb = {};\nlet decendants = {};\nlet parents = {};\n\nexport const clear = () => {\n  decendants = {};\n  parents = {};\n  clusterDb = {};\n};\n\nconst isDecendant = (id, ancenstorId) => {\n  // if (id === ancenstorId) return true;\n\n  log.trace(\n    'In isDecendant',\n    ancenstorId,\n    ' ',\n    id,\n    ' = ',\n    decendants[ancenstorId].indexOf(id) >= 0\n  );\n  if (decendants[ancenstorId].indexOf(id) >= 0) return true;\n\n  return false;\n};\n\nconst edgeInCluster = (edge, clusterId) => {\n  log.info('Decendants of ', clusterId, ' is ', decendants[clusterId]);\n  log.info('Edge is ', edge);\n  // Edges to/from the cluster is not in the cluster, they are in the parent\n  if (edge.v === clusterId) return false;\n  if (edge.w === clusterId) return false;\n\n  if (!decendants[clusterId]) {\n    log.debug('Tilt, ', clusterId, ',not in decendants');\n    return false;\n  }\n  log.info('Here ');\n\n  if (decendants[clusterId].indexOf(edge.v) >= 0) return true;\n  if (isDecendant(edge.v, clusterId)) return true;\n  if (isDecendant(edge.w, clusterId)) return true;\n  if (decendants[clusterId].indexOf(edge.w) >= 0) return true;\n\n  return false;\n};\n\nconst copy = (clusterId, graph, newGraph, rootId) => {\n  log.warn(\n    'Copying children of ',\n    clusterId,\n    'root',\n    rootId,\n    'data',\n    graph.node(clusterId),\n    rootId\n  );\n  const nodes = graph.children(clusterId) || [];\n\n  // Include cluster node if it is not the root\n  if (clusterId !== rootId) {\n    nodes.push(clusterId);\n  }\n\n  log.warn('Copying (nodes) clusterId', clusterId, 'nodes', nodes);\n\n  nodes.forEach((node) => {\n    if (graph.children(node).length > 0) {\n      copy(node, graph, newGraph, rootId);\n    } else {\n      const data = graph.node(node);\n      log.info('cp ', node, ' to ', rootId, ' with parent ', clusterId); //,node, data, ' parent is ', clusterId);\n      newGraph.setNode(node, data);\n      if (rootId !== graph.parent(node)) {\n        log.warn('Setting parent', node, graph.parent(node));\n        newGraph.setParent(node, graph.parent(node));\n      }\n\n      if (clusterId !== rootId && node !== clusterId) {\n        log.debug('Setting parent', node, clusterId);\n        newGraph.setParent(node, clusterId);\n      } else {\n        log.info('In copy ', clusterId, 'root', rootId, 'data', graph.node(clusterId), rootId);\n        log.debug(\n          'Not Setting parent for node=',\n          node,\n          'cluster!==rootId',\n          clusterId !== rootId,\n          'node!==clusterId',\n          node !== clusterId\n        );\n      }\n      const edges = graph.edges(node);\n      log.debug('Copying Edges', edges);\n      edges.forEach((edge) => {\n        log.info('Edge', edge);\n        const data = graph.edge(edge.v, edge.w, edge.name);\n        log.info('Edge data', data, rootId);\n        try {\n          // Do not copy edges in and out of the root cluster, they belong to the parent graph\n          if (edgeInCluster(edge, rootId)) {\n            log.info('Copying as ', edge.v, edge.w, data, edge.name);\n            newGraph.setEdge(edge.v, edge.w, data, edge.name);\n            log.info('newGraph edges ', newGraph.edges(), newGraph.edge(newGraph.edges()[0]));\n          } else {\n            log.info(\n              'Skipping copy of edge ',\n              edge.v,\n              '-->',\n              edge.w,\n              ' rootId: ',\n              rootId,\n              ' clusterId:',\n              clusterId\n            );\n          }\n        } catch (e) {\n          log.error(e);\n        }\n      });\n    }\n    log.debug('Removing node', node);\n    graph.removeNode(node);\n  });\n};\nexport const extractDecendants = (id, graph) => {\n  // log.debug('Extracting ', id);\n  const children = graph.children(id);\n  let res = [].concat(children);\n\n  for (let i = 0; i < children.length; i++) {\n    parents[children[i]] = id;\n    res = res.concat(extractDecendants(children[i], graph));\n  }\n\n  return res;\n};\n\n/**\n * Validates the graph, checking that all parent child relation points to existing nodes and that\n * edges between nodes also ia correct. When not correct the function logs the discrepancies.\n *\n * @param graph\n */\nexport const validate = (graph) => {\n  const edges = graph.edges();\n  log.trace('Edges: ', edges);\n  for (let i = 0; i < edges.length; i++) {\n    if (graph.children(edges[i].v).length > 0) {\n      log.trace('The node ', edges[i].v, ' is part of and edge even though it has children');\n      return false;\n    }\n    if (graph.children(edges[i].w).length > 0) {\n      log.trace('The node ', edges[i].w, ' is part of and edge even though it has children');\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Finds a child that is not a cluster. When faking a edge between a node and a cluster.\n *\n * @param {Finds a} id\n * @param {any} graph\n */\nexport const findNonClusterChild = (id, graph) => {\n  // const node = graph.node(id);\n  log.trace('Searching', id);\n  // const children = graph.children(id).reverse();\n  const children = graph.children(id); //.reverse();\n  log.trace('Searching children of id ', id, children);\n  if (children.length < 1) {\n    log.trace('This is a valid node', id);\n    return id;\n  }\n  for (let i = 0; i < children.length; i++) {\n    const _id = findNonClusterChild(children[i], graph);\n    if (_id) {\n      log.trace('Found replacement for', id, ' => ', _id);\n      return _id;\n    }\n  }\n};\n\nconst getAnchorId = (id) => {\n  if (!clusterDb[id]) {\n    return id;\n  }\n  // If the cluster has no external connections\n  if (!clusterDb[id].externalConnections) {\n    return id;\n  }\n\n  // Return the replacement node\n  if (clusterDb[id]) {\n    return clusterDb[id].id;\n  }\n  return id;\n};\n\nexport const adjustClustersAndEdges = (graph, depth) => {\n  if (!graph || depth > 10) {\n    log.debug('Opting out, no graph ');\n    return;\n  } else {\n    log.debug('Opting in, graph ');\n  }\n  // Go through the nodes and for each cluster found, save a replacment node, this can be used when\n  // faking a link to a cluster\n  graph.nodes().forEach(function (id) {\n    const children = graph.children(id);\n    if (children.length > 0) {\n      log.warn(\n        'Cluster identified',\n        id,\n        ' Replacement id in edges: ',\n        findNonClusterChild(id, graph)\n      );\n      decendants[id] = extractDecendants(id, graph);\n      clusterDb[id] = { id: findNonClusterChild(id, graph), clusterData: graph.node(id) };\n    }\n  });\n\n  // Check incoming and outgoing edges for each cluster\n  graph.nodes().forEach(function (id) {\n    const children = graph.children(id);\n    const edges = graph.edges();\n    if (children.length > 0) {\n      log.debug('Cluster identified', id, decendants);\n      edges.forEach((edge) => {\n        // log.debug('Edge, decendants: ', edge, decendants[id]);\n\n        // Check if any edge leaves the cluster (not the actual cluster, thats a link from the box)\n        if (edge.v !== id && edge.w !== id) {\n          // Any edge where either the one of the nodes is decending to the cluster but not the other\n          // if (decendants[id].indexOf(edge.v) < 0 && decendants[id].indexOf(edge.w) < 0) {\n\n          const d1 = isDecendant(edge.v, id);\n          const d2 = isDecendant(edge.w, id);\n\n          // d1 xor d2 - if either d1 is true and d2 is false or the other way around\n          if (d1 ^ d2) {\n            log.warn('Edge: ', edge, ' leaves cluster ', id);\n            log.warn('Decendants of XXX ', id, ': ', decendants[id]);\n            clusterDb[id].externalConnections = true;\n          }\n        }\n      });\n    } else {\n      log.debug('Not a cluster ', id, decendants);\n    }\n  });\n\n  // For clusters with incoming and/or outgoing edges translate those edges to a real node\n  // in the cluster inorder to fake the edge\n  graph.edges().forEach(function (e) {\n    const edge = graph.edge(e);\n    log.warn('Edge ' + e.v + ' -> ' + e.w + ': ' + JSON.stringify(e));\n    log.warn('Edge ' + e.v + ' -> ' + e.w + ': ' + JSON.stringify(graph.edge(e)));\n\n    let v = e.v;\n    let w = e.w;\n    // Check if link is either from or to a cluster\n    log.warn(\n      'Fix XXX',\n      clusterDb,\n      'ids:',\n      e.v,\n      e.w,\n      'Translateing: ',\n      clusterDb[e.v],\n      ' --- ',\n      clusterDb[e.w]\n    );\n    if (clusterDb[e.v] || clusterDb[e.w]) {\n      log.warn('Fixing and trixing - removing XXX', e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      if (v !== e.v) edge.fromCluster = e.v;\n      if (w !== e.w) edge.toCluster = e.w;\n      log.warn('Fix Replacing with XXX', v, w, e.name);\n      graph.setEdge(v, w, edge, e.name);\n    }\n  });\n  log.warn('Adjusted Graph', graphlib.json.write(graph));\n  extractor(graph, 0);\n\n  log.trace(clusterDb);\n\n  // Remove references to extracted cluster\n  // graph.edges().forEach(edge => {\n  //   if (isDecendant(edge.v, clusterId) || isDecendant(edge.w, clusterId)) {\n  //     graph.removeEdge(edge);\n  //   }\n  // });\n};\n\nexport const extractor = (graph, depth) => {\n  log.warn('extractor - ', depth, graphlib.json.write(graph), graph.children('D'));\n  if (depth > 10) {\n    log.error('Bailing out');\n    return;\n  }\n  // For clusters without incoming and/or outgoing edges, create a new cluster-node\n  // containing the nodes and edges in the custer in a new graph\n  // for (let i = 0;)\n  let nodes = graph.nodes();\n  let hasChildren = false;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    const children = graph.children(node);\n    hasChildren = hasChildren || children.length > 0;\n  }\n\n  if (!hasChildren) {\n    log.debug('Done, no node has children', graph.nodes());\n    return;\n  }\n  // const clusters = Object.keys(clusterDb);\n  // clusters.forEach(clusterId => {\n  log.debug('Nodes = ', nodes, depth);\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n\n    log.debug(\n      'Extracting node',\n      node,\n      clusterDb,\n      clusterDb[node] && !clusterDb[node].externalConnections,\n      !graph.parent(node),\n      graph.node(node),\n      graph.children('D'),\n      ' Depth ',\n      depth\n    );\n    // Note that the node might have been removed after the Object.keys call so better check\n    // that it still is in the game\n    if (!clusterDb[node]) {\n      // Skip if the node is not a cluster\n      log.debug('Not a cluster', node, depth);\n      // break;\n    } else if (\n      !clusterDb[node].externalConnections &&\n      // !graph.parent(node) &&\n      graph.children(node) &&\n      graph.children(node).length > 0\n    ) {\n      log.warn(\n        'Cluster without external connections, without a parent and with children',\n        node,\n        depth\n      );\n\n      const graphSettings = graph.graph();\n      let dir = graphSettings.rankdir === 'TB' ? 'LR' : 'TB';\n      if (clusterDb[node]) {\n        if (clusterDb[node].clusterData && clusterDb[node].clusterData.dir) {\n          dir = clusterDb[node].clusterData.dir;\n          log.warn('Fixing dir', clusterDb[node].clusterData.dir, dir);\n        }\n      }\n\n      const clusterGraph = new graphlib.Graph({\n        multigraph: true,\n        compound: true,\n      })\n        .setGraph({\n          rankdir: dir, // Todo: set proper spacing\n          nodesep: 50,\n          ranksep: 50,\n          marginx: 8,\n          marginy: 8,\n        })\n        .setDefaultEdgeLabel(function () {\n          return {};\n        });\n\n      log.warn('Old graph before copy', graphlib.json.write(graph));\n      copy(node, graph, clusterGraph, node);\n      graph.setNode(node, {\n        clusterNode: true,\n        id: node,\n        clusterData: clusterDb[node].clusterData,\n        labelText: clusterDb[node].labelText,\n        graph: clusterGraph,\n      });\n      log.warn('New graph after copy node: (', node, ')', graphlib.json.write(clusterGraph));\n      log.debug('Old graph after copy', graphlib.json.write(graph));\n    } else {\n      log.warn(\n        'Cluster ** ',\n        node,\n        ' **not meeting the criteria !externalConnections:',\n        !clusterDb[node].externalConnections,\n        ' no parent: ',\n        !graph.parent(node),\n        ' children ',\n        graph.children(node) && graph.children(node).length > 0,\n        graph.children('D'),\n        depth\n      );\n      log.debug(clusterDb);\n    }\n  }\n\n  nodes = graph.nodes();\n  log.warn('New list of nodes', nodes);\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    const data = graph.node(node);\n    log.warn(' Now next level', node, data);\n    if (data.clusterNode) {\n      extractor(data.graph, depth + 1);\n    }\n  }\n};\n\nconst sorter = (graph, nodes) => {\n  if (nodes.length === 0) return [];\n  let result = Object.assign(nodes);\n  nodes.forEach((node) => {\n    const children = graph.children(node);\n    const sorted = sorter(graph, children);\n    result = result.concat(sorted);\n  });\n\n  return result;\n};\n\nexport const sortNodesByHierarchy = (graph) => sorter(graph, graph.children());\n","import { select } from 'd3';\nimport { log } from '../logger'; // eslint-disable-line\nimport { labelHelper, updateNodeBounds, insertPolygonShape } from './shapes/util';\nimport { getConfig } from '../config';\nimport intersect from './intersect/index.js';\nimport createLabel from './createLabel';\nimport note from './shapes/note';\nimport { parseMember } from '../diagrams/class/svgDraw';\nimport { evaluate, sanitizeText as sanitize } from '../diagrams/common/common';\n\nconst sanitizeText = (txt) => sanitize(txt, getConfig());\n\nconst question = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const s = w + h;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 },\n  ];\n\n  log.info('Question main (Circle)');\n\n  const questionElem = insertPolygonShape(shapeSvg, s, s, points);\n  questionElem.attr('style', node.style);\n  updateNodeBounds(node, questionElem);\n\n  node.intersect = function (point) {\n    log.warn('Intersect called');\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst choice = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n\n  const s = 28;\n  const points = [\n    { x: 0, y: s / 2 },\n    { x: s / 2, y: 0 },\n    { x: 0, y: -s / 2 },\n    { x: -s / 2, y: 0 },\n  ];\n\n  const choice = shapeSvg.insert('polygon', ':first-child').attr(\n    'points',\n    points\n      .map(function (d) {\n        return d.x + ',' + d.y;\n      })\n      .join(' ')\n  );\n  // center the circle around its coordinate\n  choice.attr('class', 'state-start').attr('r', 7).attr('width', 28).attr('height', 28);\n  node.width = 28;\n  node.height = 28;\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 14, point);\n  };\n\n  return shapeSvg;\n};\n\nconst hexagon = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const f = 4;\n  const h = bbox.height + node.padding;\n  const m = h / f;\n  const w = bbox.width + 2 * m + node.padding;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n\n  const hex = insertPolygonShape(shapeSvg, w, h, points);\n  hex.attr('style', node.style);\n  updateNodeBounds(node, hex);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst rect_left_inv_arrow = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n\n  node.width = w + h;\n  node.height = h;\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst lean_right = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst lean_left = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (2 * h) / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - (2 * h) / 6, y: -h },\n    { x: -h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst trapezoid = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst inv_trapezoid = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: (-2 * h) / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst rect_right_inv_arrow = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst cylinder = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry + node.padding;\n\n  const shape =\n    'M 0,' +\n    ry +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    -w +\n    ' 0 l 0,' +\n    h +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 l 0,' +\n    -h;\n\n  const el = shapeSvg\n    .attr('label-offset-y', ry)\n    .insert('path', ':first-child')\n    .attr('style', node.style)\n    .attr('d', shape)\n    .attr('transform', 'translate(' + -w / 2 + ',' + -(h / 2 + ry) + ')');\n\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    const pos = intersect.rect(node, point);\n    const x = pos.x - node.x;\n\n    if (\n      rx != 0 &&\n      (Math.abs(x) < node.width / 2 ||\n        (Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry))\n    ) {\n      // ellipsis equation: x*x / a*a + y*y / b*b = 1\n      // solve for y to get adjustion value for pos.y\n      let y = ry * ry * (1 - (x * x) / (rx * rx));\n      if (y != 0) y = Math.sqrt(y);\n      y = ry - y;\n      if (point.y - node.y > 0) y = -y;\n\n      pos.y += y;\n    }\n\n    return pos;\n  };\n\n  return shapeSvg;\n};\n\nconst rect = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes, true);\n\n  log.trace('Classes = ', node.classes);\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  const totalWidth = bbox.width + node.padding;\n  const totalHeight = bbox.height + node.padding;\n  rect\n    .attr('class', 'basic label-container')\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', totalWidth)\n    .attr('height', totalHeight);\n\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete('borders');\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\n/**\n * @param rect\n * @param borders\n * @param totalWidth\n * @param totalHeight\n */\nfunction applyNodePropertyBorders(rect, borders, totalWidth, totalHeight) {\n  const strokeDashArray = [];\n  const addBorder = (length) => {\n    strokeDashArray.push(length);\n    strokeDashArray.push(0);\n  };\n  const skipBorder = (length) => {\n    strokeDashArray.push(0);\n    strokeDashArray.push(length);\n  };\n  if (borders.includes('t')) {\n    log.debug('add top border');\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes('r')) {\n    log.debug('add right border');\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  if (borders.includes('b')) {\n    log.debug('add bottom border');\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes('l')) {\n    log.debug('add left border');\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  rect.attr('stroke-dasharray', strokeDashArray.join(' '));\n}\n\nconst rectWithTitle = (parent, node) => {\n  // const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes);\n\n  let classes;\n  if (!node.classes) {\n    classes = 'node default';\n  } else {\n    classes = 'node ' + node.classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the title label and insert it after the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n  // const innerRect = shapeSvg.insert('rect');\n  const innerLine = shapeSvg.insert('line');\n\n  const label = shapeSvg.insert('g').attr('class', 'label');\n\n  const text2 = node.labelText.flat ? node.labelText.flat() : node.labelText;\n  // const text2 = typeof text2prim === 'object' ? text2prim[0] : text2prim;\n\n  let title = '';\n  if (typeof text2 === 'object') {\n    title = text2[0];\n  } else {\n    title = text2;\n  }\n  log.info('Label text abc79', title, text2, typeof text2 === 'object');\n\n  const text = label.node().appendChild(createLabel(title, node.labelStyle, true, true));\n  let bbox = { width: 0, height: 0 };\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  log.info('Text 2', text2);\n  const textRows = text2.slice(1, text2.length);\n  let titleBox = text.getBBox();\n  const descr = label\n    .node()\n    .appendChild(\n      createLabel(textRows.join ? textRows.join('<br/>') : textRows, node.labelStyle, true, true)\n    );\n\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = descr.children[0];\n    const dv = select(descr);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  // bbox = label.getBBox();\n  // log.info(descr);\n  const halfPadding = node.padding / 2;\n  select(descr).attr(\n    'transform',\n    'translate( ' +\n      // (titleBox.width - bbox.width) / 2 +\n      (bbox.width > titleBox.width ? 0 : (titleBox.width - bbox.width) / 2) +\n      ', ' +\n      (titleBox.height + halfPadding + 5) +\n      ')'\n  );\n  select(text).attr(\n    'transform',\n    'translate( ' +\n      // (titleBox.width - bbox.width) / 2 +\n      (bbox.width < titleBox.width ? 0 : -(titleBox.width - bbox.width) / 2) +\n      ', ' +\n      0 +\n      ')'\n  );\n  // Get the size of the label\n\n  // Bounding box for title and text\n  bbox = label.node().getBBox();\n\n  // Center the label\n  label.attr(\n    'transform',\n    'translate(' + -bbox.width / 2 + ', ' + (-bbox.height / 2 - halfPadding + 3) + ')'\n  );\n\n  rect\n    .attr('class', 'outer title-state')\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  innerLine\n    .attr('class', 'divider')\n    .attr('x1', -bbox.width / 2 - halfPadding)\n    .attr('x2', bbox.width / 2 + halfPadding)\n    .attr('y1', -bbox.height / 2 - halfPadding + titleBox.height + halfPadding)\n    .attr('y2', -bbox.height / 2 - halfPadding + titleBox.height + halfPadding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst stadium = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const h = bbox.height + node.padding;\n  const w = bbox.width + h / 4 + node.padding;\n\n  // add the rect\n  const rect = shapeSvg\n    .insert('rect', ':first-child')\n    .attr('style', node.style)\n    .attr('rx', h / 2)\n    .attr('ry', h / 2)\n    .attr('x', -w / 2)\n    .attr('y', -h / 2)\n    .attr('width', w)\n    .attr('height', h);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst circle = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, undefined, true);\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  // center the circle around its coordinate\n  circle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  log.info('Circle main');\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    log.info('Circle intersect', node, bbox.width / 2 + halfPadding, point);\n    return intersect.circle(node, bbox.width / 2 + halfPadding, point);\n  };\n\n  return shapeSvg;\n};\n\nconst doublecircle = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, undefined, true);\n  const gap = 5;\n  const circleGroup = shapeSvg.insert('g', ':first-child');\n  const outerCircle = circleGroup.insert('circle');\n  const innerCircle = circleGroup.insert('circle');\n\n  // center the circle around its coordinate\n  outerCircle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding + gap)\n    .attr('width', bbox.width + node.padding + gap * 2)\n    .attr('height', bbox.height + node.padding + gap * 2);\n\n  innerCircle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  log.info('DoubleCircle main');\n\n  updateNodeBounds(node, outerCircle);\n\n  node.intersect = function (point) {\n    log.info('DoubleCircle intersect', node, bbox.width / 2 + halfPadding + gap, point);\n    return intersect.circle(node, bbox.width / 2 + halfPadding + gap, point);\n  };\n\n  return shapeSvg;\n};\n\nconst subroutine = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst start = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  // center the circle around its coordinate\n  circle.attr('class', 'state-start').attr('r', 7).attr('width', 14).attr('height', 14);\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 7, point);\n  };\n\n  return shapeSvg;\n};\n\nconst forkJoin = (parent, node, dir) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n\n  let width = 70;\n  let height = 10;\n\n  if (dir === 'LR') {\n    width = 10;\n    height = 70;\n  }\n\n  const shape = shapeSvg\n    .append('rect')\n    .attr('x', (-1 * width) / 2)\n    .attr('y', (-1 * height) / 2)\n    .attr('width', width)\n    .attr('height', height)\n    .attr('class', 'fork-join');\n\n  updateNodeBounds(node, shape);\n  node.height = node.height + node.padding / 2;\n  node.width = node.width + node.padding / 2;\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst end = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n  const innerCircle = shapeSvg.insert('circle', ':first-child');\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  circle.attr('class', 'state-start').attr('r', 7).attr('width', 14).attr('height', 14);\n\n  innerCircle.attr('class', 'state-end').attr('r', 5).attr('width', 10).attr('height', 10);\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 7, point);\n  };\n\n  return shapeSvg;\n};\n\nconst class_box = (parent, node) => {\n  const halfPadding = node.padding / 2;\n  const rowPadding = 4;\n  const lineHeight = 8;\n\n  let classes;\n  if (!node.classes) {\n    classes = 'node default';\n  } else {\n    classes = 'node ' + node.classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the title label and insert it after the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n  const topLine = shapeSvg.insert('line');\n  const bottomLine = shapeSvg.insert('line');\n  let maxWidth = 0;\n  let maxHeight = rowPadding;\n\n  const labelContainer = shapeSvg.insert('g').attr('class', 'label');\n  let verticalPos = 0;\n  const hasInterface = node.classData.annotations && node.classData.annotations[0];\n\n  // 1. Create the labels\n  const interfaceLabelText = node.classData.annotations[0]\n    ? '«' + node.classData.annotations[0] + '»'\n    : '';\n  const interfaceLabel = labelContainer\n    .node()\n    .appendChild(createLabel(interfaceLabelText, node.labelStyle, true, true));\n  let interfaceBBox = interfaceLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = interfaceLabel.children[0];\n    const dv = select(interfaceLabel);\n    interfaceBBox = div.getBoundingClientRect();\n    dv.attr('width', interfaceBBox.width);\n    dv.attr('height', interfaceBBox.height);\n  }\n  if (node.classData.annotations[0]) {\n    maxHeight += interfaceBBox.height + rowPadding;\n    maxWidth += interfaceBBox.width;\n  }\n\n  let classTitleString = node.classData.id;\n\n  if (node.classData.type !== undefined && node.classData.type !== '') {\n    if (getConfig().flowchart.htmlLabels) {\n      classTitleString += '&lt;' + node.classData.type + '&gt;';\n    } else {\n      classTitleString += '<' + node.classData.type + '>';\n    }\n  }\n  const classTitleLabel = labelContainer\n    .node()\n    .appendChild(createLabel(classTitleString, node.labelStyle, true, true));\n  select(classTitleLabel).attr('class', 'classTitle');\n  let classTitleBBox = classTitleLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = classTitleLabel.children[0];\n    const dv = select(classTitleLabel);\n    classTitleBBox = div.getBoundingClientRect();\n    dv.attr('width', classTitleBBox.width);\n    dv.attr('height', classTitleBBox.height);\n  }\n  maxHeight += classTitleBBox.height + rowPadding;\n  if (classTitleBBox.width > maxWidth) {\n    maxWidth = classTitleBBox.width;\n  }\n  const classAttributes = [];\n  node.classData.members.forEach((str) => {\n    const parsedInfo = parseMember(str);\n    let parsedText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      parsedText = parsedText.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    const lbl = labelContainer\n      .node()\n      .appendChild(\n        createLabel(\n          parsedText,\n          parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n          true,\n          true\n        )\n      );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr('width', bbox.width);\n      dv.attr('height', bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n    classAttributes.push(lbl);\n  });\n\n  maxHeight += lineHeight;\n\n  const classMethods = [];\n  node.classData.methods.forEach((str) => {\n    const parsedInfo = parseMember(str);\n    let displayText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      displayText = displayText.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    const lbl = labelContainer\n      .node()\n      .appendChild(\n        createLabel(\n          displayText,\n          parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n          true,\n          true\n        )\n      );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr('width', bbox.width);\n      dv.attr('height', bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n\n    classMethods.push(lbl);\n  });\n\n  maxHeight += lineHeight;\n\n  // 2. Position the labels\n\n  // position the interface label\n  if (hasInterface) {\n    let diffX = (maxWidth - interfaceBBox.width) / 2;\n    select(interfaceLabel).attr(\n      'transform',\n      'translate( ' + ((-1 * maxWidth) / 2 + diffX) + ', ' + (-1 * maxHeight) / 2 + ')'\n    );\n    verticalPos = interfaceBBox.height + rowPadding;\n  }\n  // Positin the class title label\n  let diffX = (maxWidth - classTitleBBox.width) / 2;\n  select(classTitleLabel).attr(\n    'transform',\n    'translate( ' +\n      ((-1 * maxWidth) / 2 + diffX) +\n      ', ' +\n      ((-1 * maxHeight) / 2 + verticalPos) +\n      ')'\n  );\n  verticalPos += classTitleBBox.height + rowPadding;\n\n  topLine\n    .attr('class', 'divider')\n    .attr('x1', -maxWidth / 2 - halfPadding)\n    .attr('x2', maxWidth / 2 + halfPadding)\n    .attr('y1', -maxHeight / 2 - halfPadding + lineHeight + verticalPos)\n    .attr('y2', -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n\n  verticalPos += lineHeight;\n\n  classAttributes.forEach((lbl) => {\n    select(lbl).attr(\n      'transform',\n      'translate( ' +\n        -maxWidth / 2 +\n        ', ' +\n        ((-1 * maxHeight) / 2 + verticalPos + lineHeight / 2) +\n        ')'\n    );\n    verticalPos += classTitleBBox.height + rowPadding;\n  });\n\n  verticalPos += lineHeight;\n  bottomLine\n    .attr('class', 'divider')\n    .attr('x1', -maxWidth / 2 - halfPadding)\n    .attr('x2', maxWidth / 2 + halfPadding)\n    .attr('y1', -maxHeight / 2 - halfPadding + lineHeight + verticalPos)\n    .attr('y2', -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n\n  verticalPos += lineHeight;\n\n  classMethods.forEach((lbl) => {\n    select(lbl).attr(\n      'transform',\n      'translate( ' + -maxWidth / 2 + ', ' + ((-1 * maxHeight) / 2 + verticalPos) + ')'\n    );\n    verticalPos += classTitleBBox.height + rowPadding;\n  });\n  //\n  // let bbox;\n  // if (evaluate(getConfig().flowchart.htmlLabels)) {\n  //   const div = interfaceLabel.children[0];\n  //   const dv = select(interfaceLabel);\n  //   bbox = div.getBoundingClientRect();\n  //   dv.attr('width', bbox.width);\n  //   dv.attr('height', bbox.height);\n  // }\n  // bbox = labelContainer.getBBox();\n\n  // log.info('Text 2', text2);\n  // const textRows = text2.slice(1, text2.length);\n  // let titleBox = text.getBBox();\n  // const descr = label\n  //   .node()\n  //   .appendChild(createLabel(textRows.join('<br/>'), node.labelStyle, true, true));\n\n  // if (evaluate(getConfig().flowchart.htmlLabels)) {\n  //   const div = descr.children[0];\n  //   const dv = select(descr);\n  //   bbox = div.getBoundingClientRect();\n  //   dv.attr('width', bbox.width);\n  //   dv.attr('height', bbox.height);\n  // }\n  // // bbox = label.getBBox();\n  // // log.info(descr);\n  // select(descr).attr(\n  //   'transform',\n  //   'translate( ' +\n  //     // (titleBox.width - bbox.width) / 2 +\n  //     (bbox.width > titleBox.width ? 0 : (titleBox.width - bbox.width) / 2) +\n  //     ', ' +\n  //     (titleBox.height + halfPadding + 5) +\n  //     ')'\n  // );\n  // select(text).attr(\n  //   'transform',\n  //   'translate( ' +\n  //     // (titleBox.width - bbox.width) / 2 +\n  //     (bbox.width < titleBox.width ? 0 : -(titleBox.width - bbox.width) / 2) +\n  //     ', ' +\n  //     0 +\n  //     ')'\n  // );\n  // // Get the size of the label\n\n  // // Bounding box for title and text\n  // bbox = label.node().getBBox();\n\n  // // Center the label\n  // label.attr(\n  //   'transform',\n  //   'translate(' + -bbox.width / 2 + ', ' + (-bbox.height / 2 - halfPadding + 3) + ')'\n  // );\n\n  rect\n    .attr('class', 'outer title-state')\n    .attr('x', -maxWidth / 2 - halfPadding)\n    .attr('y', -(maxHeight / 2) - halfPadding)\n    .attr('width', maxWidth + node.padding)\n    .attr('height', maxHeight + node.padding);\n\n  // innerLine\n  //   .attr('class', 'divider')\n  //   .attr('x1', -bbox.width / 2 - halfPadding)\n  //   .attr('x2', bbox.width / 2 + halfPadding)\n  //   .attr('y1', -bbox.height / 2 - halfPadding + titleBox.height + halfPadding)\n  //   .attr('y2', -bbox.height / 2 - halfPadding + titleBox.height + halfPadding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst shapes = {\n  question,\n  rect,\n  rectWithTitle,\n  choice,\n  circle,\n  doublecircle,\n  stadium,\n  hexagon,\n  rect_left_inv_arrow,\n  lean_right,\n  lean_left,\n  trapezoid,\n  inv_trapezoid,\n  rect_right_inv_arrow,\n  cylinder,\n  start,\n  end,\n  note,\n  subroutine,\n  fork: forkJoin,\n  join: forkJoin,\n  class_box,\n};\n\nlet nodeElems = {};\n\nexport const insertNode = (elem, node, dir) => {\n  let newEl;\n  let el;\n\n  // Add link when appropriate\n  if (node.link) {\n    let target;\n    if (getConfig().securityLevel === 'sandbox') {\n      target = '_top';\n    } else if (node.linkTarget) {\n      target = node.linkTarget || '_blank';\n    }\n    newEl = elem.insert('svg:a').attr('xlink:href', node.link).attr('target', target);\n    el = shapes[node.shape](newEl, node, dir);\n  } else {\n    el = shapes[node.shape](elem, node, dir);\n    newEl = el;\n  }\n  if (node.tooltip) {\n    el.attr('title', node.tooltip);\n  }\n  if (node.class) {\n    el.attr('class', 'node default ' + node.class);\n  }\n\n  nodeElems[node.id] = newEl;\n\n  if (node.haveCallback) {\n    nodeElems[node.id].attr('class', nodeElems[node.id].attr('class') + ' clickable');\n  }\n};\nexport const setNodeElem = (elem, node) => {\n  nodeElems[node.id] = elem;\n};\nexport const clear = () => {\n  nodeElems = {};\n};\n\nexport const positionNode = (node) => {\n  const el = nodeElems[node.id];\n  log.trace(\n    'Transforming node',\n    node.diff,\n    node,\n    'translate(' + (node.x - node.width / 2 - 5) + ', ' + node.width / 2 + ')'\n  );\n  const padding = 8;\n  const diff = node.diff || 0;\n  if (node.clusterNode) {\n    el.attr(\n      'transform',\n      'translate(' +\n        (node.x + diff - node.width / 2) +\n        ', ' +\n        (node.y - node.height / 2 - padding) +\n        ')'\n    );\n  } else {\n    el.attr('transform', 'translate(' + node.x + ', ' + node.y + ')');\n  }\n  return diff;\n};\n","import { updateNodeBounds, labelHelper } from './util';\nimport { log } from '../../logger'; // eslint-disable-line\nimport intersect from '../intersect/index.js';\n\nconst note = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes, true);\n\n  log.info('Classes = ', node.classes);\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  rect\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nexport default note;\n","import createLabel from '../createLabel';\nimport { getConfig } from '../../config';\nimport { decodeEntities } from '../../mermaidAPI';\nimport { select } from 'd3';\nimport { evaluate, sanitizeText } from '../../diagrams/common/common';\nexport const labelHelper = (parent, node, _classes, isNode) => {\n  let classes;\n  if (!_classes) {\n    classes = 'node default';\n  } else {\n    classes = _classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the label and insert it after the rect\n  const label = shapeSvg.insert('g').attr('class', 'label').attr('style', node.labelStyle);\n\n  const labelText = typeof node.labelText === 'string' ? node.labelText : node.labelText[0];\n\n  const text = label\n    .node()\n    .appendChild(\n      createLabel(\n        sanitizeText(decodeEntities(labelText), getConfig()),\n        node.labelStyle,\n        false,\n        isNode\n      )\n    );\n\n  // Get the size of the label\n  let bbox = text.getBBox();\n\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n\n  const halfPadding = node.padding / 2;\n\n  // Center the label\n  label.attr('transform', 'translate(' + -bbox.width / 2 + ', ' + -bbox.height / 2 + ')');\n\n  return { shapeSvg, bbox, halfPadding, label };\n};\n\nexport const updateNodeBounds = (node, element) => {\n  const bbox = element.node().getBBox();\n  node.width = bbox.width;\n  node.height = bbox.height;\n};\n\n/**\n * @param parent\n * @param w\n * @param h\n * @param points\n */\nexport function insertPolygonShape(parent, w, h, points) {\n  return parent\n    .insert('polygon', ':first-child')\n    .attr(\n      'points',\n      points\n        .map(function (d) {\n          return d.x + ',' + d.y;\n        })\n        .join(' ')\n    )\n    .attr('class', 'label-container')\n    .attr('transform', 'translate(' + -w / 2 + ',' + h / 2 + ')');\n}\n","import theme from './themes';\n/**\n * **Configuration methods in Mermaid version 8.6.0 have been updated, to learn more[[click\n * here](8.6.0_docs.md)].**\n *\n * ## **What follows are config instructions for older versions**\n *\n * These are the default options which can be overridden with the initialization call like so:\n *\n * **Example 1:**<pre> mermaid.initialize({ flowchart:{ htmlLabels: false } }); </pre>\n *\n * **Example 2:**<pre> <script> var config = { startOnLoad:true, flowchart:{ useMaxWidth:true,\n * htmlLabels:true, curve:'cardinal', },\n *\n *     securityLevel:'loose',\n *\n * }; mermaid.initialize(config); </script> </pre>\n *\n * A summary of all options and their defaults is found [here](#mermaidapi-configuration-defaults).\n * A description of each option follows below.\n *\n * @name Configuration\n */\nconst config = {\n  /**\n   * Theme , the CSS style sheet\n   *\n   * | Parameter | Description     | Type   | Required | Values                                         |\n   * | --------- | --------------- | ------ | -------- | ---------------------------------------------- |\n   * | theme     | Built in Themes | string | Optional | 'default', 'forest', 'dark', 'neutral', 'null' |\n   *\n   * **Notes:** To disable any pre-defined mermaid theme, use \"null\".<pre> \"theme\": \"forest\",\n   * \"themeCSS\": \".node rect { fill: red; }\" </pre>\n   */\n  theme: 'default',\n  themeVariables: theme['default'].getThemeVariables(),\n  themeCSS: undefined,\n  /* **maxTextSize** - The maximum allowed size of the users text diagram */\n  maxTextSize: 50000,\n  darkMode: false,\n\n  /**\n   * | Parameter  | Description                                            | Type   | Required | Values                      |\n   * | ---------- | ------------------------------------------------------ | ------ | -------- | --------------------------- |\n   * | fontFamily | specifies the font to be used in the rendered diagrams | string | Required | Any Possible CSS FontFamily |\n   *\n   * **Notes:** Default value: '\"trebuchet ms\", verdana, arial, sans-serif;'.\n   */\n  fontFamily: '\"trebuchet ms\", verdana, arial, sans-serif;',\n\n  /**\n   * | Parameter | Description                                           | Type             | Required | Values        |\n   * | --------- | ----------------------------------------------------- | ---------------- | -------- | ------------- |\n   * | logLevel  | This option decides the amount of logging to be used. | string \\| number | Required | 1, 2, 3, 4, 5 |\n   *\n   * **Notes:**\n   *\n   * - Debug: 1\n   * - Info: 2\n   * - Warn: 3\n   * - Error: 4\n   * - Fatal: 5 (default)\n   */\n  logLevel: 5,\n\n  /**\n   * | Parameter     | Description                       | Type   | Required | Values                          |\n   * | ------------- | --------------------------------- | ------ | -------- | ------------------------------- |\n   * | securitylevel | Level of trust for parsed diagram | string | Required | 'strict', 'loose', 'antiscript' |\n   *\n   * **Notes**:\n   *\n   * - **strict**: (**default**) tags in text are encoded, click functionality is disabled\n   * - **loose**: tags in text are allowed, click functionality is enabled\n   * - **antiscript**: html tags in text are allowed, (only script element is removed), click\n   *   functionality is enabled\n   */\n  securityLevel: 'strict',\n\n  /**\n   * | Parameter   | Description                                  | Type    | Required | Values      |\n   * | ----------- | -------------------------------------------- | ------- | -------- | ----------- |\n   * | startOnLoad | Dictates whether mermaid starts on Page load | boolean | Required | true, false |\n   *\n   * **Notes:** Default value: true\n   */\n  startOnLoad: true,\n\n  /**\n   * | Parameter           | Description                                                                  | Type    | Required | Values      |\n   * | ------------------- | ---------------------------------------------------------------------------- | ------- | -------- | ----------- |\n   * | arrowMarkerAbsolute | Controls whether or arrow markers in html code are absolute paths or anchors | boolean | Required | true, false |\n   *\n   * **Notes**:\n   *\n   * This matters if you are using base tag settings.\n   *\n   * Default value: false\n   */\n  arrowMarkerAbsolute: false,\n\n  /**\n   * This option controls which currentConfig keys are considered _secure_ and can only be changed\n   * via call to mermaidAPI.initialize. Calls to mermaidAPI.reinitialize cannot make changes to the\n   * `secure` keys in the current currentConfig. This prevents malicious graph directives from\n   * overriding a site's default security.\n   *\n   * **Notes**:\n   *\n   * Default value: ['secure', 'securityLevel', 'startOnLoad', 'maxTextSize']\n   */\n  secure: ['secure', 'securityLevel', 'startOnLoad', 'maxTextSize'],\n\n  /**\n   * This option controls if the generated ids of nodes in the SVG are generated randomly or based\n   * on a seed. If set to false, the IDs are generated based on the current date and thus are not\n   * deterministic. This is the default behaviour.\n   *\n   * **Notes**:\n   *\n   * This matters if your files are checked into sourcecontrol e.g. git and should not change unless\n   * content is changed.\n   *\n   * Default value: false\n   */\n  deterministicIds: false,\n\n  /**\n   * This option is the optional seed for deterministic ids. if set to undefined but\n   * deterministicIds is true, a simple number iterator is used. You can set this attribute to base\n   * the seed on a static string.\n   */\n  deterministicIDSeed: undefined,\n\n  /** The object containing configurations specific for flowcharts */\n  flowchart: {\n    /**\n     * | Parameter      | Description                                     | Type    | Required | Values             |\n     * | -------------- | ----------------------------------------------- | ------- | -------- | ------------------ |\n     * | diagramPadding | Amount of padding around the diagram as a whole | Integer | Required | Any Positive Value |\n     *\n     * **Notes:**\n     *\n     * The amount of padding around the diagram as a whole so that embedded diagrams have margins,\n     * expressed in pixels\n     *\n     * Default value: 8\n     */\n    diagramPadding: 8,\n\n    /**\n     * | Parameter  | Description                                                                                  | Type    | Required | Values      |\n     * | ---------- | -------------------------------------------------------------------------------------------- | ------- | -------- | ----------- |\n     * | htmlLabels | Flag for setting whether or not a html tag should be used for rendering labels on the edges. | boolean | Required | true, false |\n     *\n     * **Notes:** Default value: true.\n     */\n    htmlLabels: true,\n\n    /**\n     * | Parameter   | Description                                         | Type    | Required | Values              |\n     * | ----------- | --------------------------------------------------- | ------- | -------- | ------------------- |\n     * | nodeSpacing | Defines the spacing between nodes on the same level | Integer | Required | Any positive Number |\n     *\n     * **Notes:**\n     *\n     * Pertains to horizontal spacing for TB (top to bottom) or BT (bottom to top) graphs, and the\n     * vertical spacing for LR as well as RL graphs.**\n     *\n     * Default value: 50\n     */\n    nodeSpacing: 50,\n\n    /**\n     * | Parameter   | Description                                           | Type    | Required | Values              |\n     * | ----------- | ----------------------------------------------------- | ------- | -------- | ------------------- |\n     * | rankSpacing | Defines the spacing between nodes on different levels | Integer | Required | Any Positive Number |\n     *\n     * **Notes**:\n     *\n     * Pertains to vertical spacing for TB (top to bottom) or BT (bottom to top), and the horizontal\n     * spacing for LR as well as RL graphs.\n     *\n     * Default value 50\n     */\n    rankSpacing: 50,\n\n    /**\n     * | Parameter | Description                                        | Type   | Required | Values                        |\n     * | --------- | -------------------------------------------------- | ------ | -------- | ----------------------------- |\n     * | curve     | Defines how mermaid renders curves for flowcharts. | string | Required | 'basis', 'linear', 'cardinal' |\n     *\n     * **Notes:**\n     *\n     * Default Value: 'basis'\n     */\n    curve: 'basis',\n    // Only used in new experimental rendering\n    // represents the padding between the labels and the shape\n    padding: 15,\n\n    /**\n     * | Parameter   | Description | Type    | Required | Values      |\n     * | ----------- | ----------- | ------- | -------- | ----------- |\n     * | useMaxWidth | See notes   | boolean | 4        | true, false |\n     *\n     * **Notes:**\n     *\n     * When this flag is set the height and width is set to 100% and is then scaling with the\n     * available space if not the absolute space required is used.\n     *\n     * Default value: true\n     */\n    useMaxWidth: true,\n\n    /**\n     * | Parameter       | Description | Type    | Required | Values                  |\n     * | --------------- | ----------- | ------- | -------- | ----------------------- |\n     * | defaultRenderer | See notes   | boolean | 4        | dagre-d3, dagre-wrapper |\n     *\n     * **Notes:**\n     *\n     * Decides which rendering engine that is to be used for the rendering. Legal values are:\n     * dagre-d3 dagre-wrapper - wrapper for dagre implemented in mermaid\n     *\n     * Default value: 'dagre-d3'\n     */\n    defaultRenderer: 'dagre-d3',\n  },\n\n  /** The object containing configurations specific for sequence diagrams */\n  sequence: {\n    hideUnusedParticipants: false,\n    /**\n     * | Parameter       | Description                  | Type    | Required | Values             |\n     * | --------------- | ---------------------------- | ------- | -------- | ------------------ |\n     * | activationWidth | Width of the activation rect | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value :10\n     */\n    activationWidth: 10,\n\n    /**\n     * | Parameter      | Description                                          | Type    | Required | Values             |\n     * | -------------- | ---------------------------------------------------- | ------- | -------- | ------------------ |\n     * | diagramMarginX | Margin to the right and left of the sequence diagram | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 50\n     */\n    diagramMarginX: 50,\n\n    /**\n     * | Parameter      | Description                                       | Type    | Required | Values             |\n     * | -------------- | ------------------------------------------------- | ------- | -------- | ------------------ |\n     * | diagramMarginY | Margin to the over and under the sequence diagram | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 10\n     */\n    diagramMarginY: 10,\n\n    /**\n     * | Parameter   | Description           | Type    | Required | Values             |\n     * | ----------- | --------------------- | ------- | -------- | ------------------ |\n     * | actorMargin | Margin between actors | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 50\n     */\n    actorMargin: 50,\n\n    /**\n     * | Parameter | Description          | Type    | Required | Values             |\n     * | --------- | -------------------- | ------- | -------- | ------------------ |\n     * | width     | Width of actor boxes | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 150\n     */\n    width: 150,\n\n    /**\n     * | Parameter | Description           | Type    | Required | Values             |\n     * | --------- | --------------------- | ------- | -------- | ------------------ |\n     * | height    | Height of actor boxes | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 65\n     */\n    height: 65,\n\n    /**\n     * | Parameter | Description              | Type    | Required | Values             |\n     * | --------- | ------------------------ | ------- | -------- | ------------------ |\n     * | boxMargin | Margin around loop boxes | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 10\n     */\n    boxMargin: 10,\n\n    /**\n     * | Parameter     | Description                                  | Type    | Required | Values             |\n     * | ------------- | -------------------------------------------- | ------- | -------- | ------------------ |\n     * | boxTextMargin | Margin around the text in loop/alt/opt boxes | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 5\n     */\n    boxTextMargin: 5,\n\n    /**\n     * | Parameter  | Description         | Type    | Required | Values             |\n     * | ---------- | ------------------- | ------- | -------- | ------------------ |\n     * | noteMargin | margin around notes | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 10\n     */\n    noteMargin: 10,\n\n    /**\n     * | Parameter     | Description            | Type    | Required | Values             |\n     * | ------------- | ---------------------- | ------- | -------- | ------------------ |\n     * | messageMargin | Space between messages | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 35\n     */\n    messageMargin: 35,\n\n    /**\n     * | Parameter    | Description                 | Type   | Required | Values                    |\n     * | ------------ | --------------------------- | ------ | -------- | ------------------------- |\n     * | messageAlign | Multiline message alignment | string | Required | 'left', 'center', 'right' |\n     *\n     * **Notes:** Default value: 'center'\n     */\n    messageAlign: 'center',\n\n    /**\n     * | Parameter    | Description                 | Type    | Required | Values      |\n     * | ------------ | --------------------------- | ------- | -------- | ----------- |\n     * | mirrorActors | Mirror actors under diagram | boolean | Required | true, false |\n     *\n     * **Notes:** Default value: true\n     */\n    mirrorActors: true,\n\n    /**\n     * | Parameter  | Description                                                             | Type    | Required | Values      |\n     * | ---------- | ----------------------------------------------------------------------- | ------- | -------- | ----------- |\n     * | forceMenus | forces actor popup menus to always be visible (to support E2E testing). | Boolean | Required | True, False |\n     *\n     * **Notes:**\n     *\n     * Default value: false.\n     */\n    forceMenus: false,\n\n    /**\n     * | Parameter       | Description                                | Type    | Required | Values             |\n     * | --------------- | ------------------------------------------ | ------- | -------- | ------------------ |\n     * | bottomMarginAdj | Prolongs the edge of the diagram downwards | Integer | Required | Any Positive Value |\n     *\n     * **Notes:**\n     *\n     * Depending on css styling this might need adjustment.\n     *\n     * Default value: 1\n     */\n    bottomMarginAdj: 1,\n\n    /**\n     * | Parameter   | Description | Type    | Required | Values      |\n     * | ----------- | ----------- | ------- | -------- | ----------- |\n     * | useMaxWidth | See Notes   | boolean | Required | true, false |\n     *\n     * **Notes:** When this flag is set to true, the height and width is set to 100% and is then\n     * scaling with the available space. If set to false, the absolute space required is used.\n     *\n     * Default value: true\n     */\n    useMaxWidth: true,\n\n    /**\n     * | Parameter   | Description                          | Type    | Required | Values      |\n     * | ----------- | ------------------------------------ | ------- | -------- | ----------- |\n     * | rightAngles | display curve arrows as right angles | boolean | Required | true, false |\n     *\n     * **Notes:**\n     *\n     * This will display arrows that start and begin at the same node as right angles, rather than a curve\n     *\n     * Default value: false\n     */\n    rightAngles: false,\n\n    /**\n     * | Parameter           | Description                     | Type    | Required | Values      |\n     * | ------------------- | ------------------------------- | ------- | -------- | ----------- |\n     * | showSequenceNumbers | This will show the node numbers | boolean | Required | true, false |\n     *\n     * **Notes:** Default value: false\n     */\n    showSequenceNumbers: false,\n\n    /**\n     * | Parameter     | Description                                        | Type    | Required | Values             |\n     * | ------------- | -------------------------------------------------- | ------- | -------- | ------------------ |\n     * | actorFontSize | This sets the font size of the actor's description | Integer | Require  | Any Positive Value |\n     *\n     * **Notes:** **Default value 14**..\n     */\n    actorFontSize: 14,\n\n    /**\n     * | Parameter       | Description                                          | Type   | Required | Values                      |\n     * | --------------- | ---------------------------------------------------- | ------ | -------- | --------------------------- |\n     * | actorFontFamily | This sets the font family of the actor's description | string | Required | Any Possible CSS FontFamily |\n     *\n     * **Notes:** Default value: \"'Open Sans\", sans-serif'\n     */\n    actorFontFamily: '\"Open Sans\", sans-serif',\n\n    /**\n     * This sets the font weight of the actor's description\n     *\n     * **Notes:** Default value: 400.\n     */\n    actorFontWeight: 400,\n\n    /**\n     * | Parameter    | Description                                     | Type    | Required | Values             |\n     * | ------------ | ----------------------------------------------- | ------- | -------- | ------------------ |\n     * | noteFontSize | This sets the font size of actor-attached notes | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 14\n     */\n    noteFontSize: 14,\n\n    /**\n     * | Parameter      | Description                                        | Type   | Required | Values                      |\n     * | -------------- | -------------------------------------------------- | ------ | -------- | --------------------------- |\n     * | noteFontFamily | This sets the font family of actor-attached notes. | string | Required | Any Possible CSS FontFamily |\n     *\n     * **Notes:** Default value: ''\"trebuchet ms\", verdana, arial, sans-serif'\n     */\n    noteFontFamily: '\"trebuchet ms\", verdana, arial, sans-serif',\n\n    /**\n     * This sets the font weight of the note's description\n     *\n     * **Notes:** Default value: 400\n     */\n    noteFontWeight: 400,\n\n    /**\n     * | Parameter | Description                                          | Type   | Required | Values                    |\n     * | --------- | ---------------------------------------------------- | ------ | -------- | ------------------------- |\n     * | noteAlign | This sets the text alignment of actor-attached notes | string | required | 'left', 'center', 'right' |\n     *\n     * **Notes:** Default value: 'center'\n     */\n    noteAlign: 'center',\n\n    /**\n     * | Parameter       | Description                               | Type    | Required | Values              |\n     * | --------------- | ----------------------------------------- | ------- | -------- | ------------------- |\n     * | messageFontSize | This sets the font size of actor messages | Integer | Required | Any Positive Number |\n     *\n     * **Notes:** Default value: 16\n     */\n    messageFontSize: 16,\n\n    /**\n     * | Parameter         | Description                                 | Type   | Required | Values                      |\n     * | ----------------- | ------------------------------------------- | ------ | -------- | --------------------------- |\n     * | messageFontFamily | This sets the font family of actor messages | string | Required | Any Possible CSS FontFamily |\n     *\n     * **Notes:** Default value: '\"trebuchet ms\", verdana, arial, sans-serif'\n     */\n    messageFontFamily: '\"trebuchet ms\", verdana, arial, sans-serif',\n\n    /**\n     * This sets the font weight of the message's description\n     *\n     * **Notes:** Default value: 400.\n     */\n    messageFontWeight: 400,\n\n    /**\n     * This sets the auto-wrap state for the diagram\n     *\n     * **Notes:** Default value: false.\n     */\n    wrap: false,\n\n    /**\n     * This sets the auto-wrap padding for the diagram (sides only)\n     *\n     * **Notes:** Default value: 0.\n     */\n    wrapPadding: 10,\n\n    /**\n     * This sets the width of the loop-box (loop, alt, opt, par)\n     *\n     * **Notes:** Default value: 50.\n     */\n    labelBoxWidth: 50,\n\n    /**\n     * This sets the height of the loop-box (loop, alt, opt, par)\n     *\n     * **Notes:** Default value: 20.\n     */\n    labelBoxHeight: 20,\n\n    messageFont: function () {\n      return {\n        fontFamily: this.messageFontFamily,\n        fontSize: this.messageFontSize,\n        fontWeight: this.messageFontWeight,\n      };\n    },\n    noteFont: function () {\n      return {\n        fontFamily: this.noteFontFamily,\n        fontSize: this.noteFontSize,\n        fontWeight: this.noteFontWeight,\n      };\n    },\n    actorFont: function () {\n      return {\n        fontFamily: this.actorFontFamily,\n        fontSize: this.actorFontSize,\n        fontWeight: this.actorFontWeight,\n      };\n    },\n  },\n\n  /** The object containing configurations specific for gantt diagrams */\n  gantt: {\n    /**\n     * ### titleTopMargin\n     *\n     * | Parameter      | Description                                    | Type    | Required | Values             |\n     * | -------------- | ---------------------------------------------- | ------- | -------- | ------------------ |\n     * | titleTopMargin | Margin top for the text over the gantt diagram | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 25\n     */\n    titleTopMargin: 25,\n\n    /**\n     * | Parameter | Description                         | Type    | Required | Values             |\n     * | --------- | ----------------------------------- | ------- | -------- | ------------------ |\n     * | barHeight | The height of the bars in the graph | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 20\n     */\n    barHeight: 20,\n\n    /**\n     * | Parameter | Description                                                      | Type    | Required | Values             |\n     * | --------- | ---------------------------------------------------------------- | ------- | -------- | ------------------ |\n     * | barGap    | The margin between the different activities in the gantt diagram | Integer | Optional | Any Positive Value |\n     *\n     * **Notes:** Default value: 4\n     */\n    barGap: 4,\n\n    /**\n     * | Parameter  | Description                                                                | Type    | Required | Values             |\n     * | ---------- | -------------------------------------------------------------------------- | ------- | -------- | ------------------ |\n     * | topPadding | Margin between title and gantt diagram and between axis and gantt diagram. | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 50\n     */\n    topPadding: 50,\n\n    /**\n     * | Parameter    | Description                                                             | Type    | Required | Values             |\n     * | ------------ | ----------------------------------------------------------------------- | ------- | -------- | ------------------ |\n     * | rightPadding | The space allocated for the section name to the right of the activities | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 75\n     */\n    rightPadding: 75,\n\n    /**\n     * | Parameter   | Description                                                            | Type    | Required | Values             |\n     * | ----------- | ---------------------------------------------------------------------- | ------- | -------- | ------------------ |\n     * | leftPadding | The space allocated for the section name to the left of the activities | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 75\n     */\n    leftPadding: 75,\n\n    /**\n     * | Parameter            | Description                                  | Type    | Required | Values             |\n     * | -------------------- | -------------------------------------------- | ------- | -------- | ------------------ |\n     * | gridLineStartPadding | Vertical starting position of the grid lines | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 35\n     */\n    gridLineStartPadding: 35,\n\n    /**\n     * | Parameter | Description | Type    | Required | Values             |\n     * | --------- | ----------- | ------- | -------- | ------------------ |\n     * | fontSize  | Font size   | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 11\n     */\n    fontSize: 11,\n\n    /**\n     * | Parameter       | Description            | Type    | Required | Values             |\n     * | --------------- | ---------------------- | ------- | -------- | ------------------ |\n     * | sectionFontSize | Font size for sections | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 11\n     */\n    sectionFontSize: 11,\n\n    /**\n     * | Parameter           | Description                              | Type    | Required | Values             |\n     * | ------------------- | ---------------------------------------- | ------- | -------- | ------------------ |\n     * | numberSectionStyles | The number of alternating section styles | Integer | 4        | Any Positive Value |\n     *\n     * **Notes:** Default value: 4\n     */\n    numberSectionStyles: 4,\n\n    /**\n     * | Parameter  | Description                 | Type | Required | Values           |\n     * | ---------- | --------------------------- | ---- | -------- | ---------------- |\n     * | axisFormat | Datetime format of the axis | 3    | Required | Date in yy-mm-dd |\n     *\n     * **Notes:**\n     *\n     * This might need adjustment to match your locale and preferences\n     *\n     * Default value: '%Y-%m-%d'.\n     */\n    axisFormat: '%Y-%m-%d',\n\n    /**\n     * | Parameter   | Description | Type    | Required | Values      |\n     * | ----------- | ----------- | ------- | -------- | ----------- |\n     * | useMaxWidth | See notes   | boolean | 4        | true, false |\n     *\n     * **Notes:**\n     *\n     * When this flag is set the height and width is set to 100% and is then scaling with the\n     * available space if not the absolute space required is used.\n     *\n     * Default value: true\n     */\n    useMaxWidth: true,\n\n    /**\n     * | Parameter | Description | Type    | Required | Values      |\n     * | --------- | ----------- | ------- | -------- | ----------- |\n     * | topAxis   | See notes   | Boolean | 4        | True, False |\n     *\n     * **Notes:** when this flag is set date labels will be added to the top of the chart\n     *\n     * **Default value false**.\n     */\n    topAxis: false,\n\n    useWidth: undefined,\n  },\n\n  /** The object containing configurations specific for journey diagrams */\n  journey: {\n    /**\n     * | Parameter      | Description                                          | Type    | Required | Values             |\n     * | -------------- | ---------------------------------------------------- | ------- | -------- | ------------------ |\n     * | diagramMarginX | Margin to the right and left of the sequence diagram | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 50\n     */\n    diagramMarginX: 50,\n\n    /**\n     * | Parameter      | Description                                        | Type    | Required | Values             |\n     * | -------------- | -------------------------------------------------- | ------- | -------- | ------------------ |\n     * | diagramMarginY | Margin to the over and under the sequence diagram. | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 10\n     */\n    diagramMarginY: 10,\n\n    /**\n     * | Parameter   | Description           | Type    | Required | Values             |\n     * | ----------- | --------------------- | ------- | -------- | ------------------ |\n     * | actorMargin | Margin between actors | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 50\n     */\n    leftMargin: 150,\n\n    /**\n     * | Parameter | Description          | Type    | Required | Values             |\n     * | --------- | -------------------- | ------- | -------- | ------------------ |\n     * | width     | Width of actor boxes | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 150\n     */\n    width: 150,\n\n    /**\n     * | Parameter | Description           | Type    | Required | Values             |\n     * | --------- | --------------------- | ------- | -------- | ------------------ |\n     * | height    | Height of actor boxes | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 65\n     */\n    height: 50,\n\n    /**\n     * | Parameter | Description              | Type    | Required | Values             |\n     * | --------- | ------------------------ | ------- | -------- | ------------------ |\n     * | boxMargin | Margin around loop boxes | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 10\n     */\n    boxMargin: 10,\n\n    /**\n     * | Parameter     | Description                                  | Type    | Required | Values             |\n     * | ------------- | -------------------------------------------- | ------- | -------- | ------------------ |\n     * | boxTextMargin | Margin around the text in loop/alt/opt boxes | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 5\n     */\n    boxTextMargin: 5,\n\n    /**\n     * | Parameter  | Description         | Type    | Required | Values             |\n     * | ---------- | ------------------- | ------- | -------- | ------------------ |\n     * | noteMargin | Margin around notes | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Default value: 10\n     */\n    noteMargin: 10,\n\n    /**\n     * | Parameter     | Description             | Type    | Required | Values             |\n     * | ------------- | ----------------------- | ------- | -------- | ------------------ |\n     * | messageMargin | Space between messages. | Integer | Required | Any Positive Value |\n     *\n     * **Notes:**\n     *\n     * Space between messages.\n     *\n     * Default value: 35\n     */\n    messageMargin: 35,\n\n    /**\n     * | Parameter    | Description                 | Type | Required | Values                    |\n     * | ------------ | --------------------------- | ---- | -------- | ------------------------- |\n     * | messageAlign | Multiline message alignment | 3    | 4        | 'left', 'center', 'right' |\n     *\n     * **Notes:** Default value: 'center'\n     */\n    messageAlign: 'center',\n\n    /**\n     * | Parameter       | Description                                | Type    | Required | Values             |\n     * | --------------- | ------------------------------------------ | ------- | -------- | ------------------ |\n     * | bottomMarginAdj | Prolongs the edge of the diagram downwards | Integer | 4        | Any Positive Value |\n     *\n     * **Notes:**\n     *\n     * Depending on css styling this might need adjustment.\n     *\n     * Default value: 1\n     */\n    bottomMarginAdj: 1,\n\n    /**\n     * | Parameter   | Description | Type    | Required | Values      |\n     * | ----------- | ----------- | ------- | -------- | ----------- |\n     * | useMaxWidth | See notes   | boolean | 4        | true, false |\n     *\n     * **Notes:**\n     *\n     * When this flag is set the height and width is set to 100% and is then scaling with the\n     * available space if not the absolute space required is used.\n     *\n     * Default value: true\n     */\n    useMaxWidth: true,\n\n    /**\n     * | Parameter   | Description                       | Type | Required | Values      |\n     * | ----------- | --------------------------------- | ---- | -------- | ----------- |\n     * | rightAngles | Curved Arrows become Right Angles | 3    | 4        | true, false |\n     *\n     * **Notes:**\n     *\n     * This will display arrows that start and begin at the same node as right angles, rather than a curves\n     *\n     * Default value: false\n     */\n    rightAngles: false,\n    taskFontSize: 14,\n    taskFontFamily: '\"Open Sans\", sans-serif',\n    taskMargin: 50,\n    // width of activation box\n    activationWidth: 10,\n\n    // text placement as: tspan | fo | old only text as before\n    textPlacement: 'fo',\n    actorColours: ['#8FBC8F', '#7CFC00', '#00FFFF', '#20B2AA', '#B0E0E6', '#FFFFE0'],\n\n    sectionFills: ['#191970', '#8B008B', '#4B0082', '#2F4F4F', '#800000', '#8B4513', '#00008B'],\n    sectionColours: ['#fff'],\n  },\n  class: {\n    arrowMarkerAbsolute: false,\n\n    /**\n     * | Parameter   | Description | Type    | Required | Values      |\n     * | ----------- | ----------- | ------- | -------- | ----------- |\n     * | useMaxWidth | See notes   | boolean | 4        | true, false |\n     *\n     * **Notes:**\n     *\n     * When this flag is set the height and width is set to 100% and is then scaling with the\n     * available space if not the absolute space required is used.\n     *\n     * Default value: true\n     */\n    useMaxWidth: true,\n    /**\n     * | Parameter       | Description | Type    | Required | Values                  |\n     * | --------------- | ----------- | ------- | -------- | ----------------------- |\n     * | defaultRenderer | See notes   | boolean | 4        | dagre-d3, dagre-wrapper |\n     *\n     * **Notes**:\n     *\n     * Decides which rendering engine that is to be used for the rendering. Legal values are:\n     * dagre-d3 dagre-wrapper - wrapper for dagre implemented in mermaid\n     *\n     * Default value: 'dagre-d3'\n     */\n    defaultRenderer: 'dagre-wrapper',\n  },\n  state: {\n    dividerMargin: 10,\n    sizeUnit: 5,\n    padding: 8,\n    textHeight: 10,\n    titleShift: -15,\n    noteMargin: 10,\n    forkWidth: 70,\n    forkHeight: 7,\n    // Used\n    miniPadding: 2,\n    // Font size factor, this is used to guess the width of the edges labels before rendering by dagre\n    // layout. This might need updating if/when switching font\n    fontSizeFactor: 5.02,\n    fontSize: 24,\n    labelHeight: 16,\n    edgeLengthFactor: '20',\n    compositTitleSize: 35,\n    radius: 5,\n    /**\n     * | Parameter   | Description | Type    | Required | Values      |\n     * | ----------- | ----------- | ------- | -------- | ----------- |\n     * | useMaxWidth | See notes   | boolean | 4        | true, false |\n     *\n     * **Notes:**\n     *\n     * When this flag is set the height and width is set to 100% and is then scaling with the\n     * available space if not the absolute space required is used.\n     *\n     * Default value: true\n     */\n    useMaxWidth: true,\n    /**\n     * | Parameter       | Description | Type    | Required | Values                  |\n     * | --------------- | ----------- | ------- | -------- | ----------------------- |\n     * | defaultRenderer | See notes   | boolean | 4        | dagre-d3, dagre-wrapper |\n     *\n     * **Notes:**\n     *\n     * Decides which rendering engine that is to be used for the rendering. Legal values are:\n     * dagre-d3 dagre-wrapper - wrapper for dagre implemented in mermaid\n     *\n     * Default value: 'dagre-d3'\n     */\n    defaultRenderer: 'dagre-wrapper',\n  },\n\n  /** The object containing configurations specific for entity relationship diagrams */\n  er: {\n    /**\n     * | Parameter      | Description                                     | Type    | Required | Values             |\n     * | -------------- | ----------------------------------------------- | ------- | -------- | ------------------ |\n     * | diagramPadding | Amount of padding around the diagram as a whole | Integer | Required | Any Positive Value |\n     *\n     * **Notes:**\n     *\n     * The amount of padding around the diagram as a whole so that embedded diagrams have margins,\n     * expressed in pixels\n     *\n     * Default value: 20\n     */\n    diagramPadding: 20,\n\n    /**\n     * | Parameter       | Description                              | Type   | Required | Values                 |\n     * | --------------- | ---------------------------------------- | ------ | -------- | ---------------------- |\n     * | layoutDirection | Directional bias for layout of entities. | string | Required | \"TB\", \"BT\", \"LR\", \"RL\" |\n     *\n     * **Notes:**\n     *\n     * 'TB' for Top-Bottom, 'BT'for Bottom-Top, 'LR' for Left-Right, or 'RL' for Right to Left.\n     *\n     * T = top, B = bottom, L = left, and R = right.\n     *\n     * Default value: 'TB'\n     */\n    layoutDirection: 'TB',\n\n    /**\n     * | Parameter      | Description                        | Type    | Required | Values             |\n     * | -------------- | ---------------------------------- | ------- | -------- | ------------------ |\n     * | minEntityWidth | The minimum width of an entity box | Integer | Required | Any Positive Value |\n     *\n     * **Notes:** Expressed in pixels. Default value: 100\n     */\n    minEntityWidth: 100,\n\n    /**\n     * | Parameter       | Description                         | Type    | Required | Values             |\n     * | --------------- | ----------------------------------- | ------- | -------- | ------------------ |\n     * | minEntityHeight | The minimum height of an entity box | Integer | 4        | Any Positive Value |\n     *\n     * **Notes:** Expressed in pixels Default value: 75\n     */\n    minEntityHeight: 75,\n\n    /**\n     * | Parameter     | Description                                                 | Type    | Required | Values             |\n     * | ------------- | ----------------------------------------------------------- | ------- | -------- | ------------------ |\n     * | entityPadding | Minimum internal padding betweentext in box and box borders | Integer | 4        | Any Positive Value |\n     *\n     * **Notes:**\n     *\n     * The minimum internal padding betweentext in an entity box and the enclosing box borders,\n     * expressed in pixels.\n     *\n     * Default value: 15\n     */\n    entityPadding: 15,\n\n    /**\n     * | Parameter | Description                         | Type   | Required | Values               |\n     * | --------- | ----------------------------------- | ------ | -------- | -------------------- |\n     * | stroke    | Stroke color of box edges and lines | string | 4        | Any recognized color |\n     *\n     * **Notes:** Default value: 'gray'\n     */\n    stroke: 'gray',\n\n    /**\n     * | Parameter | Description                | Type   | Required | Values               |\n     * | --------- | -------------------------- | ------ | -------- | -------------------- |\n     * | fill      | Fill color of entity boxes | string | 4        | Any recognized color |\n     *\n     * **Notes:** Default value: 'honeydew'\n     */\n    fill: 'honeydew',\n\n    /**\n     * | Parameter | Description         | Type    | Required | Values             |\n     * | --------- | ------------------- | ------- | -------- | ------------------ |\n     * | fontSize  | Font Size in pixels | Integer |          | Any Positive Value |\n     *\n     * **Notes:**\n     *\n     * Font size (expressed as an integer representing a number of pixels) Default value: 12\n     */\n    fontSize: 12,\n\n    /**\n     * | Parameter   | Description | Type    | Required | Values      |\n     * | ----------- | ----------- | ------- | -------- | ----------- |\n     * | useMaxWidth | See Notes   | boolean | Required | true, false |\n     *\n     * **Notes:**\n     *\n     * When this flag is set to true, the diagram width is locked to 100% and scaled based on\n     * available space. If set to false, the diagram reserves its absolute width.\n     *\n     * Default value: true\n     */\n    useMaxWidth: true,\n  },\n\n  /** The object containing configurations specific for pie diagrams */\n  pie: {\n    useWidth: undefined,\n\n    /**\n     * | Parameter   | Description | Type    | Required | Values      |\n     * | ----------- | ----------- | ------- | -------- | ----------- |\n     * | useMaxWidth | See Notes   | boolean | Required | true, false |\n     *\n     * **Notes:**\n     *\n     * When this flag is set to true, the diagram width is locked to 100% and scaled based on\n     * available space. If set to false, the diagram reserves its absolute width.\n     *\n     * Default value: true\n     */\n    useMaxWidth: true,\n  },\n\n  /** The object containing configurations specific for req diagrams */\n  requirement: {\n    useWidth: undefined,\n\n    /**\n     * | Parameter   | Description | Type    | Required | Values      |\n     * | ----------- | ----------- | ------- | -------- | ----------- |\n     * | useMaxWidth | See Notes   | boolean | Required | true, false |\n     *\n     * **Notes:**\n     *\n     * When this flag is set to true, the diagram width is locked to 100% and scaled based on\n     * available space. If set to false, the diagram reserves its absolute width.\n     *\n     * Default value: true\n     */\n    useMaxWidth: true,\n\n    rect_fill: '#f9f9f9',\n    text_color: '#333',\n    rect_border_size: '0.5px',\n    rect_border_color: '#bbb',\n    rect_min_width: 200,\n    rect_min_height: 200,\n    fontSize: 14,\n    rect_padding: 10,\n    line_height: 20,\n  },\n  gitGraph: {\n    diagramPadding: 8,\n    nodeLabel: {\n      width: 75,\n      height: 100,\n      x: -25,\n      y: 0,\n    },\n    mainBranchName: 'main',\n    mainBranchOrder: 0,\n    showCommitLabel: true,\n    showBranches: true,\n  },\n};\n\nconfig.class.arrowMarkerAbsolute = config.arrowMarkerAbsolute;\nconfig.gitGraph.arrowMarkerAbsolute = config.arrowMarkerAbsolute;\n\nconst keyify = (obj, prefix = '') =>\n  Object.keys(obj).reduce((res, el) => {\n    if (Array.isArray(obj[el])) {\n      return res;\n    } else if (typeof obj[el] === 'object' && obj[el] !== null) {\n      return [...res, prefix + el, ...keyify(obj[el], '')];\n    }\n    return [...res, prefix + el];\n  }, []);\n\nexport const configKeys = keyify(config, '');\nexport default config;\n","import { select } from 'd3';\nimport { log } from '../../logger';\nimport * as configApi from '../../config';\nimport common from '../common/common';\nimport utils from '../../utils';\nimport mermaidAPI from '../../mermaidAPI';\nimport {\n  setTitle,\n  getTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n} from '../../commonDb';\n\nconst MERMAID_DOM_ID_PREFIX = 'classid-';\n\nlet relations = [];\nlet classes = {};\nlet classCounter = 0;\n\nlet funs = [];\n\nconst sanitizeText = (txt) => common.sanitizeText(txt, configApi.getConfig());\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\nconst splitClassNameAndType = function (id) {\n  let genericType = '';\n  let className = id;\n\n  if (id.indexOf('~') > 0) {\n    let split = id.split('~');\n    className = split[0];\n\n    genericType = common.sanitizeText(split[1], configApi.getConfig());\n  }\n\n  return { className: className, type: genericType };\n};\n\n/**\n * Function called by parser when a node definition has been found.\n *\n * @param id\n * @public\n */\nexport const addClass = function (id) {\n  let classId = splitClassNameAndType(id);\n  // Only add class if not exists\n  if (typeof classes[classId.className] !== 'undefined') return;\n\n  classes[classId.className] = {\n    id: classId.className,\n    type: classId.type,\n    cssClasses: [],\n    methods: [],\n    members: [],\n    annotations: [],\n    domId: MERMAID_DOM_ID_PREFIX + classId.className + '-' + classCounter,\n  };\n\n  classCounter++;\n};\n\n/**\n * Function to lookup domId from id in the graph definition.\n *\n * @param id\n * @public\n */\nexport const lookUpDomId = function (id) {\n  const classKeys = Object.keys(classes);\n  for (let i = 0; i < classKeys.length; i++) {\n    if (classes[classKeys[i]].id === id) {\n      return classes[classKeys[i]].domId;\n    }\n  }\n};\n\nexport const clear = function () {\n  relations = [];\n  classes = {};\n  funs = [];\n  funs.push(setupToolTips);\n  commonClear();\n};\n\nexport const getClass = function (id) {\n  return classes[id];\n};\nexport const getClasses = function () {\n  return classes;\n};\n\nexport const getRelations = function () {\n  return relations;\n};\n\nexport const addRelation = function (relation) {\n  log.debug('Adding relation: ' + JSON.stringify(relation));\n  addClass(relation.id1);\n  addClass(relation.id2);\n\n  relation.id1 = splitClassNameAndType(relation.id1).className;\n  relation.id2 = splitClassNameAndType(relation.id2).className;\n\n  relation.relationTitle1 = common.sanitizeText(\n    relation.relationTitle1.trim(),\n    configApi.getConfig()\n  );\n\n  relation.relationTitle2 = common.sanitizeText(\n    relation.relationTitle2.trim(),\n    configApi.getConfig()\n  );\n\n  relations.push(relation);\n};\n\n/**\n * Adds an annotation to the specified class Annotations mark special properties of the given type\n * (like 'interface' or 'service')\n *\n * @param className The class name\n * @param annotation The name of the annotation without any brackets\n * @public\n */\nexport const addAnnotation = function (className, annotation) {\n  const validatedClassName = splitClassNameAndType(className).className;\n  classes[validatedClassName].annotations.push(annotation);\n};\n\n/**\n * Adds a member to the specified class\n *\n * @param className The class name\n * @param member The full name of the member. If the member is enclosed in <<brackets>> it is\n *   treated as an annotation If the member is ending with a closing bracket ) it is treated as a\n *   method Otherwise the member will be treated as a normal property\n * @public\n */\nexport const addMember = function (className, member) {\n  console.log(className, member);\n  const validatedClassName = splitClassNameAndType(className).className;\n  const theClass = classes[validatedClassName];\n\n  if (typeof member === 'string') {\n    // Member can contain white spaces, we trim them out\n    const memberString = member.trim();\n\n    if (memberString.startsWith('<<') && memberString.endsWith('>>')) {\n      // Remove leading and trailing brackets\n      // theClass.annotations.push(memberString.substring(2, memberString.length - 2));\n      theClass.annotations.push(sanitizeText(memberString.substring(2, memberString.length - 2)));\n    } else if (memberString.indexOf(')') > 0) {\n      theClass.methods.push(sanitizeText(memberString));\n    } else if (memberString) {\n      theClass.members.push(sanitizeText(memberString));\n    }\n  }\n};\n\nexport const addMembers = function (className, members) {\n  if (Array.isArray(members)) {\n    members.reverse();\n    members.forEach((member) => addMember(className, member));\n  }\n};\n\nexport const cleanupLabel = function (label) {\n  if (label.substring(0, 1) === ':') {\n    return common.sanitizeText(label.substr(1).trim(), configApi.getConfig());\n  } else {\n    return sanitizeText(label.trim());\n  }\n};\n\n/**\n * Called by parser when a special node is found, e.g. a clickable element.\n *\n * @param ids Comma separated list of ids\n * @param className Class to add\n */\nexport const setCssClass = function (ids, className) {\n  ids.split(',').forEach(function (_id) {\n    let id = _id;\n    if (_id[0].match(/\\d/)) id = MERMAID_DOM_ID_PREFIX + id;\n    if (typeof classes[id] !== 'undefined') {\n      classes[id].cssClasses.push(className);\n    }\n  });\n};\n\n/**\n * Called by parser when a tooltip is found, e.g. a clickable element.\n *\n * @param ids Comma separated list of ids\n * @param tooltip Tooltip to add\n */\nconst setTooltip = function (ids, tooltip) {\n  const config = configApi.getConfig();\n  ids.split(',').forEach(function (id) {\n    if (typeof tooltip !== 'undefined') {\n      classes[id].tooltip = common.sanitizeText(tooltip, config);\n    }\n  });\n};\n\n/**\n * Called by parser when a link is found. Adds the URL to the vertex data.\n *\n * @param ids Comma separated list of ids\n * @param linkStr URL to create a link for\n * @param target Target of the link, _blank by default as originally defined in the svgDraw.js file\n */\nexport const setLink = function (ids, linkStr, target) {\n  const config = configApi.getConfig();\n  ids.split(',').forEach(function (_id) {\n    let id = _id;\n    if (_id[0].match(/\\d/)) id = MERMAID_DOM_ID_PREFIX + id;\n    if (typeof classes[id] !== 'undefined') {\n      classes[id].link = utils.formatUrl(linkStr, config);\n      if (config.securityLevel === 'sandbox') {\n        classes[id].linkTarget = '_top';\n      } else if (typeof target === 'string') {\n        classes[id].linkTarget = sanitizeText(target);\n      } else {\n        classes[id].linkTarget = '_blank';\n      }\n    }\n  });\n  setCssClass(ids, 'clickable');\n};\n\n/**\n * Called by parser when a click definition is found. Registers an event handler.\n *\n * @param ids Comma separated list of ids\n * @param functionName Function to be called on click\n * @param functionArgs Function args the function should be called with\n */\nexport const setClickEvent = function (ids, functionName, functionArgs) {\n  ids.split(',').forEach(function (id) {\n    setClickFunc(id, functionName, functionArgs);\n    classes[id].haveCallback = true;\n  });\n  setCssClass(ids, 'clickable');\n};\n\nconst setClickFunc = function (domId, functionName, functionArgs) {\n  const config = configApi.getConfig();\n  let id = domId;\n  let elemId = lookUpDomId(id);\n\n  if (config.securityLevel !== 'loose') {\n    return;\n  }\n  if (typeof functionName === 'undefined') {\n    return;\n  }\n  if (typeof classes[id] !== 'undefined') {\n    let argList = [];\n    if (typeof functionArgs === 'string') {\n      /* Splits functionArgs by ',', ignoring all ',' in double quoted strings */\n      argList = functionArgs.split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n      for (let i = 0; i < argList.length; i++) {\n        let item = argList[i].trim();\n        /* Removes all double quotes at the start and end of an argument */\n        /* This preserves all starting and ending whitespace inside */\n        if (item.charAt(0) === '\"' && item.charAt(item.length - 1) === '\"') {\n          item = item.substr(1, item.length - 2);\n        }\n        argList[i] = item;\n      }\n    }\n\n    /* if no arguments passed into callback, default to passing in id */\n    if (argList.length === 0) {\n      argList.push(elemId);\n    }\n\n    funs.push(function () {\n      const elem = document.querySelector(`[id=\"${elemId}\"]`);\n      if (elem !== null) {\n        elem.addEventListener(\n          'click',\n          function () {\n            utils.runFunc(functionName, ...argList);\n          },\n          false\n        );\n      }\n    });\n  }\n};\n\nexport const bindFunctions = function (element) {\n  funs.forEach(function (fun) {\n    fun(element);\n  });\n};\n\nexport const lineType = {\n  LINE: 0,\n  DOTTED_LINE: 1,\n};\n\nexport const relationType = {\n  AGGREGATION: 0,\n  EXTENSION: 1,\n  COMPOSITION: 2,\n  DEPENDENCY: 3,\n};\n\nconst setupToolTips = function (element) {\n  let tooltipElem = select('.mermaidTooltip');\n  if ((tooltipElem._groups || tooltipElem)[0][0] === null) {\n    tooltipElem = select('body').append('div').attr('class', 'mermaidTooltip').style('opacity', 0);\n  }\n\n  const svg = select(element).select('svg');\n\n  const nodes = svg.selectAll('g.node');\n  nodes\n    .on('mouseover', function () {\n      const el = select(this);\n      const title = el.attr('title');\n      // Dont try to draw a tooltip if no data is provided\n      if (title === null) {\n        return;\n      }\n      const rect = this.getBoundingClientRect();\n\n      tooltipElem.transition().duration(200).style('opacity', '.9');\n      tooltipElem\n        .text(el.attr('title'))\n        .style('left', window.scrollX + rect.left + (rect.right - rect.left) / 2 + 'px')\n        .style('top', window.scrollY + rect.top - 14 + document.body.scrollTop + 'px');\n      el.classed('hover', true);\n    })\n    .on('mouseout', function () {\n      tooltipElem.transition().duration(500).style('opacity', 0);\n      const el = select(this);\n      el.classed('hover', false);\n    });\n};\nfuns.push(setupToolTips);\n\nlet direction = 'TB';\nconst getDirection = () => direction;\nconst setDirection = (dir) => {\n  direction = dir;\n};\n\nexport default {\n  parseDirective,\n  setTitle,\n  getTitle,\n  getAccDescription,\n  setAccDescription,\n  getConfig: () => configApi.getConfig().class,\n  addClass,\n  bindFunctions,\n  clear,\n  getClass,\n  getClasses,\n  addAnnotation,\n  getRelations,\n  addRelation,\n  getDirection,\n  setDirection,\n  addMember,\n  addMembers,\n  cleanupLabel,\n  lineType,\n  relationType,\n  setClickEvent,\n  setCssClass,\n  setLink,\n  setTooltip,\n  lookUpDomId,\n};\n","import { select } from 'd3';\nimport dagre from 'dagre';\nimport graphlib from 'graphlib';\nimport { log } from '../../logger';\nimport classDb, { lookUpDomId } from './classDb';\nimport { parser } from './parser/classDiagram';\nimport svgDraw from './svgDraw';\nimport { getConfig } from '../../config';\nimport { render } from '../../dagre-wrapper/index.js';\n// import addHtmlLabel from 'dagre-d3/lib/label/add-html-label.js';\nimport { curveLinear } from 'd3';\nimport { interpolateToCurve, getStylesFromArray, configureSvgSize } from '../../utils';\nimport common from '../common/common';\nimport addSVGAccessibilityFields from '../../accessibility';\n\nparser.yy = classDb;\n\nlet idCache = {};\nconst padding = 20;\n\nconst sanitizeText = (txt) => common.sanitizeText(txt, getConfig());\n\nconst conf = {\n  dividerMargin: 10,\n  padding: 5,\n  textHeight: 10,\n};\n\n/**\n * Function that adds the vertices found during parsing to the graph to be rendered.\n *\n * @param {Object<\n *   string,\n *   { cssClasses: string[]; text: string; id: string; type: string; domId: string }\n * >} classes\n *   Object containing the vertices.\n * @param {SVGGElement} g The graph that is to be drawn.\n */\nexport const addClasses = function (classes, g) {\n  // const svg = select(`[id=\"${svgId}\"]`);\n  const keys = Object.keys(classes);\n  log.info('keys:', keys);\n  log.info(classes);\n\n  // Iterate through each item in the vertex object (containing all the vertices found) in the graph definition\n  keys.forEach(function (id) {\n    const vertex = classes[id];\n\n    /**\n     * Variable for storing the classes for the vertex\n     *\n     * @type {string}\n     */\n    let cssClassStr = '';\n    if (vertex.cssClasses.length > 0) {\n      cssClassStr = cssClassStr + ' ' + vertex.cssClasses.join(' ');\n    }\n    // if (vertex.classes.length > 0) {\n    //   classStr = vertex.classes.join(' ');\n    // }\n\n    const styles = { labelStyle: '' }; //getStylesFromArray(vertex.styles);\n\n    // Use vertex id as text in the box if no text is provided by the graph definition\n    let vertexText = vertex.text !== undefined ? vertex.text : vertex.id;\n\n    // We create a SVG label, either by delegating to addHtmlLabel or manually\n    // let vertexNode;\n    // if (evaluate(getConfig().flowchart.htmlLabels)) {\n    //   const node = {\n    //     label: vertexText.replace(\n    //       /fa[lrsb]?:fa-[\\w-]+/g,\n    //       s => `<i class='${s.replace(':', ' ')}'></i>`\n    //     )\n    //   };\n    //   vertexNode = addHtmlLabel(svg, node).node();\n    //   vertexNode.parentNode.removeChild(vertexNode);\n    // } else {\n    //   const svgLabel = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n    //   svgLabel.setAttribute('style', styles.labelStyle.replace('color:', 'fill:'));\n\n    //   const rows = vertexText.split(common.lineBreakRegex);\n\n    //   for (let j = 0; j < rows.length; j++) {\n    //     const tspan = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n    //     tspan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    //     tspan.setAttribute('dy', '1em');\n    //     tspan.setAttribute('x', '1');\n    //     tspan.textContent = rows[j];\n    //     svgLabel.appendChild(tspan);\n    //   }\n    //   vertexNode = svgLabel;\n    // }\n\n    let radious = 0;\n    let _shape = '';\n    // Set the shape based parameters\n    switch (vertex.type) {\n      case 'class':\n        _shape = 'class_box';\n        break;\n      default:\n        _shape = 'class_box';\n    }\n    // Add the node\n    g.setNode(vertex.id, {\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      labelText: sanitizeText(vertexText),\n      classData: vertex,\n      rx: radious,\n      ry: radious,\n      class: cssClassStr,\n      style: styles.style,\n      id: vertex.id,\n      domId: vertex.domId,\n      haveCallback: vertex.haveCallback,\n      link: vertex.link,\n      width: vertex.type === 'group' ? 500 : undefined,\n      type: vertex.type,\n      padding: getConfig().flowchart.padding,\n    });\n\n    log.info('setNode', {\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      labelText: vertexText,\n      rx: radious,\n      ry: radious,\n      class: cssClassStr,\n      style: styles.style,\n      id: vertex.id,\n      width: vertex.type === 'group' ? 500 : undefined,\n      type: vertex.type,\n      padding: getConfig().flowchart.padding,\n    });\n  });\n};\n\n/**\n * Add edges to graph based on parsed graph defninition\n *\n * @param relations\n * @param {object} g The graph object\n */\nexport const addRelations = function (relations, g) {\n  let cnt = 0;\n\n  let defaultStyle;\n  let defaultLabelStyle;\n\n  // if (typeof relations.defaultStyle !== 'undefined') {\n  //   const defaultStyles = getStylesFromArray(relations.defaultStyle);\n  //   defaultStyle = defaultStyles.style;\n  //   defaultLabelStyle = defaultStyles.labelStyle;\n  // }\n\n  relations.forEach(function (edge) {\n    cnt++;\n    const edgeData = {};\n    //Set relationship style and line type\n    edgeData.classes = 'relation';\n    edgeData.pattern = edge.relation.lineType == 1 ? 'dashed' : 'solid';\n\n    edgeData.id = 'id' + cnt;\n    // Set link type for rendering\n    if (edge.type === 'arrow_open') {\n      edgeData.arrowhead = 'none';\n    } else {\n      edgeData.arrowhead = 'normal';\n    }\n\n    log.info(edgeData, edge);\n    //Set edge extra labels\n    //edgeData.startLabelLeft = edge.relationTitle1;\n    edgeData.startLabelRight = edge.relationTitle1 === 'none' ? '' : edge.relationTitle1;\n    edgeData.endLabelLeft = edge.relationTitle2 === 'none' ? '' : edge.relationTitle2;\n    //edgeData.endLabelRight = edge.relationTitle2;\n\n    //Set relation arrow types\n    edgeData.arrowTypeStart = getArrowMarker(edge.relation.type1);\n    edgeData.arrowTypeEnd = getArrowMarker(edge.relation.type2);\n    let style = '';\n    let labelStyle = '';\n\n    if (typeof edge.style !== 'undefined') {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    } else {\n      style = 'fill:none';\n      if (typeof defaultStyle !== 'undefined') {\n        style = defaultStyle;\n      }\n      if (typeof defaultLabelStyle !== 'undefined') {\n        labelStyle = defaultLabelStyle;\n      }\n    }\n\n    edgeData.style = style;\n    edgeData.labelStyle = labelStyle;\n\n    if (typeof edge.interpolate !== 'undefined') {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (typeof relations.defaultInterpolate !== 'undefined') {\n      edgeData.curve = interpolateToCurve(relations.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n\n    edge.text = edge.title;\n    if (typeof edge.text === 'undefined') {\n      if (typeof edge.style !== 'undefined') {\n        edgeData.arrowheadStyle = 'fill: #333';\n      }\n    } else {\n      edgeData.arrowheadStyle = 'fill: #333';\n      edgeData.labelpos = 'c';\n\n      if (getConfig().flowchart.htmlLabels) {\n        // eslint-disable-line\n        edgeData.labelType = 'html';\n        edgeData.label = '<span class=\"edgeLabel\">' + edge.text + '</span>';\n      } else {\n        edgeData.labelType = 'text';\n        edgeData.label = edge.text.replace(common.lineBreakRegex, '\\n');\n\n        if (typeof edge.style === 'undefined') {\n          edgeData.style = edgeData.style || 'stroke: #333; stroke-width: 1.5px;fill:none';\n        }\n\n        edgeData.labelStyle = edgeData.labelStyle.replace('color:', 'fill:');\n      }\n    }\n    // Add the edge to the graph\n    g.setEdge(edge.id1, edge.id2, edgeData, cnt);\n  });\n};\n\n/**\n * Gets the ID with the same label as in the cache\n *\n * @param {string} label The label to look for\n * @returns {string} The resulting ID\n */\nconst getGraphId = function (label) {\n  const foundEntry = Object.entries(idCache).find((entry) => entry[1].label === label);\n\n  if (foundEntry) {\n    return foundEntry[0];\n  }\n};\n\n/**\n * Merges the value of `conf` with the passed `cnf`\n *\n * @param {object} cnf Config to merge\n */\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n\n  keys.forEach(function (key) {\n    conf[key] = cnf[key];\n  });\n};\n\n/**\n * Draws a flowchart in the tag with id: id based on the graph definition in text.\n *\n * @param {string} text\n * @param {string} id\n */\nexport const draw = function (text, id) {\n  log.info('Drawing class - ', id);\n  classDb.clear();\n  // const parser = classDb.parser;\n  // parser.yy = classDb;\n\n  // Parse the graph definition\n  // try {\n  parser.parse(text);\n  // } catch (err) {\n  // log.debug('Parsing failed');\n  // }\n\n  // Fetch the default direction, use TD if none was found\n  //let dir = 'TD';\n\n  const conf = getConfig().flowchart;\n  const securityLevel = getConfig().securityLevel;\n  log.info('config:', conf);\n  const nodeSpacing = conf.nodeSpacing || 50;\n  const rankSpacing = conf.rankSpacing || 50;\n\n  // Create the input mermaid.graph\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true,\n  })\n    .setGraph({\n      rankdir: classDb.getDirection(),\n      nodesep: nodeSpacing,\n      ranksep: rankSpacing,\n      marginx: 8,\n      marginy: 8,\n    })\n    .setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n  // let subG;\n  // const subGraphs = flowDb.getSubGraphs();\n  // log.info('Subgraphs - ', subGraphs);\n  // for (let i = subGraphs.length - 1; i >= 0; i--) {\n  //   subG = subGraphs[i];\n  //   log.info('Subgraph - ', subG);\n  //   flowDb.addVertex(subG.id, subG.title, 'group', undefined, subG.classes);\n  // }\n\n  // Fetch the verices/nodes and edges/links from the parsed graph definition\n  const classes = classDb.getClasses();\n  const relations = classDb.getRelations();\n\n  log.info(relations);\n  // let i = 0;\n  // for (i = subGraphs.length - 1; i >= 0; i--) {\n  //   subG = subGraphs[i];\n\n  //   selectAll('cluster').append('text');\n\n  //   for (let j = 0; j < subG.nodes.length; j++) {\n  //     g.setParent(subG.nodes[j], subG.id);\n  //   }\n  // }\n  addClasses(classes, g, id);\n  addRelations(relations, g);\n\n  // Add custom shapes\n  // flowChartShapes.addToRenderV2(addShape);\n\n  // Set up an SVG group so that we can translate the final graph.\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const svg = root.select(`[id=\"${id}\"]`);\n  svg.attr('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n\n  // Run the renderer. This is what draws the final graph.\n  const element = root.select('#' + id + ' g');\n  render(element, g, ['aggregation', 'extension', 'composition', 'dependency'], 'classDiagram', id);\n\n  // element.selectAll('g.node').attr('title', function() {\n  //   return flowDb.getTooltip(this.id);\n  // });\n\n  const padding = 8;\n  const svgBounds = svg.node().getBBox();\n  const width = svgBounds.width + padding * 2;\n  const height = svgBounds.height + padding * 2;\n  log.debug(\n    `new ViewBox 0 0 ${width} ${height}`,\n    `translate(${padding - g._label.marginx}, ${padding - g._label.marginy})`\n  );\n\n  configureSvgSize(svg, height, width, conf.useMaxWidth);\n\n  svg.attr('viewBox', `0 0 ${width} ${height}`);\n  svg\n    .select('g')\n    .attr('transform', `translate(${padding - g._label.marginx}, ${padding - svgBounds.y})`);\n\n  // Index nodes\n  // flowDb.indexNodes('subGraph' + i);\n\n  // Add label rects for non html labels\n  if (!conf.htmlLabels) {\n    const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (let k = 0; k < labels.length; k++) {\n      const label = labels[k];\n\n      // Get dimensions of label\n      const dim = label.getBBox();\n\n      const rect = doc.createElementNS('http://www.w3.org/2000/svg', 'rect');\n      rect.setAttribute('rx', 0);\n      rect.setAttribute('ry', 0);\n      rect.setAttribute('width', dim.width);\n      rect.setAttribute('height', dim.height);\n      // rect.setAttribute('style', 'fill:#e8e8e8;');\n\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n\n  addSVGAccessibilityFields(parser.yy, svg, id);\n  // If node has a link, wrap it in an anchor SVG object.\n  // const keys = Object.keys(classes);\n  // keys.forEach(function(key) {\n  //   const vertex = classes[key];\n\n  //   if (vertex.link) {\n  //     const node = select('#' + id + ' [id=\"' + key + '\"]');\n  //     if (node) {\n  //       const link = document.createElementNS('http://www.w3.org/2000/svg', 'a');\n  //       link.setAttributeNS('http://www.w3.org/2000/svg', 'class', vertex.classes.join(' '));\n  //       link.setAttributeNS('http://www.w3.org/2000/svg', 'href', vertex.link);\n  //       link.setAttributeNS('http://www.w3.org/2000/svg', 'rel', 'noopener');\n\n  //       const linkNode = node.insert(function() {\n  //         return link;\n  //       }, ':first-child');\n\n  //       const shape = node.select('.label-container');\n  //       if (shape) {\n  //         linkNode.append(function() {\n  //           return shape.node();\n  //         });\n  //       }\n\n  //       const label = node.select('.label');\n  //       if (label) {\n  //         linkNode.append(function() {\n  //           return label.node();\n  //         });\n  //       }\n  //     }\n  //   }\n  // });\n};\n\n/**\n * Gets the arrow marker for a type index\n *\n * @param {number} type The type to look for\n * @returns {'aggregation' | 'extension' | 'composition' | 'dependency'} The arrow marker\n */\nfunction getArrowMarker(type) {\n  let marker;\n  switch (type) {\n    case 0:\n      marker = 'aggregation';\n      break;\n    case 1:\n      marker = 'extension';\n      break;\n    case 2:\n      marker = 'composition';\n      break;\n    case 3:\n      marker = 'dependency';\n      break;\n    default:\n      marker = 'none';\n  }\n  return marker;\n}\n\nexport default {\n  setConf,\n  draw,\n};\n","import { select } from 'd3';\nimport dagre from 'dagre';\nimport graphlib from 'graphlib';\nimport { log } from '../../logger';\nimport classDb, { lookUpDomId } from './classDb';\nimport { parser } from './parser/classDiagram';\nimport svgDraw from './svgDraw';\nimport { configureSvgSize } from '../../utils';\nimport { getConfig } from '../../config';\nimport addSVGAccessibilityFields from '../../accessibility';\n\nparser.yy = classDb;\n\nlet idCache = {};\nconst padding = 20;\n\nconst conf = {\n  dividerMargin: 10,\n  padding: 5,\n  textHeight: 10,\n};\n\n/**\n * Gets the ID with the same label as in the cache\n *\n * @param {string} label The label to look for\n * @returns {string} The resulting ID\n */\nconst getGraphId = function (label) {\n  const foundEntry = Object.entries(idCache).find((entry) => entry[1].label === label);\n\n  if (foundEntry) {\n    return foundEntry[0];\n  }\n};\n\n/**\n * Setup arrow head and define the marker. The result is appended to the svg.\n *\n * @param {SVGSVGElement} elem The SVG element to append to\n */\nconst insertMarkers = function (elem) {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'extensionStart')\n    .attr('class', 'extension')\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 1,7 L18,13 V 1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'extensionEnd')\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 1,1 V 13 L18,7 Z'); // this is actual shape for arrowhead\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'compositionStart')\n    .attr('class', 'extension')\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'compositionEnd')\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'aggregationStart')\n    .attr('class', 'extension')\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'aggregationEnd')\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'dependencyStart')\n    .attr('class', 'extension')\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 5,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'dependencyEnd')\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L14,7 L9,1 Z');\n};\n\n/**\n * Merges the value of `conf` with the passed `cnf`\n *\n * @param {object} cnf Config to merge\n */\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n\n  keys.forEach(function (key) {\n    conf[key] = cnf[key];\n  });\n};\n\n/**\n * Draws a flowchart in the tag with id: id based on the graph definition in text.\n *\n * @param {string} text\n * @param {string} id\n */\nexport const draw = function (text, id) {\n  idCache = {};\n  parser.yy.clear();\n  parser.parse(text);\n\n  log.info('Rendering diagram ' + text);\n\n  const securityLevel = getConfig().securityLevel;\n  // Handle root and ocument for when rendering in sanbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  // Fetch the default direction, use TD if none was found\n  const diagram = root.select(`[id='${id}']`);\n  diagram.attr('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n  insertMarkers(diagram);\n\n  // Layout graph, Create a new directed graph\n  const g = new graphlib.Graph({\n    multigraph: true,\n  });\n\n  // Set an object for the graph label\n  g.setGraph({\n    isMultiGraph: true,\n  });\n\n  // Default to assigning a new object as a label for each new edge.\n  g.setDefaultEdgeLabel(function () {\n    return {};\n  });\n\n  const classes = classDb.getClasses();\n  const keys = Object.keys(classes);\n\n  for (let i = 0; i < keys.length; i++) {\n    const classDef = classes[keys[i]];\n    const node = svgDraw.drawClass(diagram, classDef, conf);\n    idCache[node.id] = node;\n\n    // Add nodes to the graph. The first argument is the node id. The second is\n    // metadata about the node. In this case we're going to add labels to each of\n    // our nodes.\n    g.setNode(node.id, node);\n\n    log.info('Org height: ' + node.height);\n  }\n\n  const relations = classDb.getRelations();\n  relations.forEach(function (relation) {\n    log.info(\n      'tjoho' + getGraphId(relation.id1) + getGraphId(relation.id2) + JSON.stringify(relation)\n    );\n    g.setEdge(\n      getGraphId(relation.id1),\n      getGraphId(relation.id2),\n      {\n        relation: relation,\n      },\n      relation.title || 'DEFAULT'\n    );\n  });\n\n  dagre.layout(g);\n  g.nodes().forEach(function (v) {\n    if (typeof v !== 'undefined' && typeof g.node(v) !== 'undefined') {\n      log.debug('Node ' + v + ': ' + JSON.stringify(g.node(v)));\n      root\n        .select('#' + lookUpDomId(v))\n        .attr(\n          'transform',\n          'translate(' +\n            (g.node(v).x - g.node(v).width / 2) +\n            ',' +\n            (g.node(v).y - g.node(v).height / 2) +\n            ' )'\n        );\n    }\n  });\n\n  g.edges().forEach(function (e) {\n    if (typeof e !== 'undefined' && typeof g.edge(e) !== 'undefined') {\n      log.debug('Edge ' + e.v + ' -> ' + e.w + ': ' + JSON.stringify(g.edge(e)));\n      svgDraw.drawEdge(diagram, g.edge(e), g.edge(e).relation, conf);\n    }\n  });\n\n  const svgBounds = diagram.node().getBBox();\n  const width = svgBounds.width + padding * 2;\n  const height = svgBounds.height + padding * 2;\n\n  configureSvgSize(diagram, height, width, conf.useMaxWidth);\n\n  // Ensure the viewBox includes the whole svgBounds area with extra space for padding\n  const vBox = `${svgBounds.x - padding} ${svgBounds.y - padding} ${width} ${height}`;\n  log.debug(`viewBox ${vBox}`);\n  diagram.attr('viewBox', vBox);\n  addSVGAccessibilityFields(parser.yy, diagram, id);\n};\n\nexport default {\n  setConf,\n  draw,\n};\n","const getStyles = (options) =>\n  `g.classGroup text {\n  fill: ${options.nodeBorder};\n  fill: ${options.classText};\n  stroke: none;\n  font-family: ${options.fontFamily};\n  font-size: 10px;\n\n  .title {\n    font-weight: bolder;\n  }\n\n}\n\n.nodeLabel, .edgeLabel {\n  color: ${options.classText};\n}\n.edgeLabel .label rect {\n  fill: ${options.mainBkg};\n}\n.label text {\n  fill: ${options.classText};\n}\n.edgeLabel .label span {\n  background: ${options.mainBkg};\n}\n\n.classTitle {\n  font-weight: bolder;\n}\n.node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n    stroke-width: 1px;\n  }\n\n\n.divider {\n  stroke: ${options.nodeBorder};\n  stroke: 1;\n}\n\ng.clickable {\n  cursor: pointer;\n}\n\ng.classGroup rect {\n  fill: ${options.mainBkg};\n  stroke: ${options.nodeBorder};\n}\n\ng.classGroup line {\n  stroke: ${options.nodeBorder};\n  stroke-width: 1;\n}\n\n.classLabel .box {\n  stroke: none;\n  stroke-width: 0;\n  fill: ${options.mainBkg};\n  opacity: 0.5;\n}\n\n.classLabel .label {\n  fill: ${options.nodeBorder};\n  font-size: 10px;\n}\n\n.relation {\n  stroke: ${options.lineColor};\n  stroke-width: 1;\n  fill: none;\n}\n\n.dashed-line{\n  stroke-dasharray: 3;\n}\n\n#compositionStart, .composition {\n  fill: ${options.lineColor} !important;\n  stroke: ${options.lineColor} !important;\n  stroke-width: 1;\n}\n\n#compositionEnd, .composition {\n  fill: ${options.lineColor} !important;\n  stroke: ${options.lineColor} !important;\n  stroke-width: 1;\n}\n\n#dependencyStart, .dependency {\n  fill: ${options.lineColor} !important;\n  stroke: ${options.lineColor} !important;\n  stroke-width: 1;\n}\n\n#dependencyStart, .dependency {\n  fill: ${options.lineColor} !important;\n  stroke: ${options.lineColor} !important;\n  stroke-width: 1;\n}\n\n#extensionStart, .extension {\n  fill: ${options.lineColor} !important;\n  stroke: ${options.lineColor} !important;\n  stroke-width: 1;\n}\n\n#extensionEnd, .extension {\n  fill: ${options.lineColor} !important;\n  stroke: ${options.lineColor} !important;\n  stroke-width: 1;\n}\n\n#aggregationStart, .aggregation {\n  fill: ${options.mainBkg} !important;\n  stroke: ${options.lineColor} !important;\n  stroke-width: 1;\n}\n\n#aggregationEnd, .aggregation {\n  fill: ${options.mainBkg} !important;\n  stroke: ${options.lineColor} !important;\n  stroke-width: 1;\n}\n\n.edgeTerminals {\n  font-size: 11px;\n}\n\n`;\n\nexport default getStyles;\n","import { line, curveBasis } from 'd3';\nimport { lookUpDomId, relationType } from './classDb';\nimport utils from '../../utils';\nimport { log } from '../../logger';\n\nlet edgeCount = 0;\nexport const drawEdge = function (elem, path, relation, conf) {\n  const getRelationType = function (type) {\n    switch (type) {\n      case relationType.AGGREGATION:\n        return 'aggregation';\n      case relationType.EXTENSION:\n        return 'extension';\n      case relationType.COMPOSITION:\n        return 'composition';\n      case relationType.DEPENDENCY:\n        return 'dependency';\n    }\n  };\n\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n\n  // The data for our line\n  const lineData = path.points;\n\n  // This is the accessor function we talked about above\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    })\n    .curve(curveBasis);\n\n  const svgPath = elem\n    .append('path')\n    .attr('d', lineFunction(lineData))\n    .attr('id', 'edge' + edgeCount)\n    .attr('class', 'relation');\n  let url = '';\n  if (conf.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n\n  if (relation.relation.lineType == 1) {\n    svgPath.attr('class', 'relation dashed-line');\n  }\n  if (relation.relation.type1 !== 'none') {\n    svgPath.attr(\n      'marker-start',\n      'url(' + url + '#' + getRelationType(relation.relation.type1) + 'Start' + ')'\n    );\n  }\n  if (relation.relation.type2 !== 'none') {\n    svgPath.attr(\n      'marker-end',\n      'url(' + url + '#' + getRelationType(relation.relation.type2) + 'End' + ')'\n    );\n  }\n\n  let x, y;\n  const l = path.points.length;\n  // Calculate Label position\n  let labelPosition = utils.calcLabelPosition(path.points);\n  x = labelPosition.x;\n  y = labelPosition.y;\n\n  let p1_card_x, p1_card_y;\n  let p2_card_x, p2_card_y;\n\n  if (l % 2 !== 0 && l > 1) {\n    let cardinality_1_point = utils.calcCardinalityPosition(\n      relation.relation.type1 !== 'none',\n      path.points,\n      path.points[0]\n    );\n    let cardinality_2_point = utils.calcCardinalityPosition(\n      relation.relation.type2 !== 'none',\n      path.points,\n      path.points[l - 1]\n    );\n\n    log.debug('cardinality_1_point ' + JSON.stringify(cardinality_1_point));\n    log.debug('cardinality_2_point ' + JSON.stringify(cardinality_2_point));\n\n    p1_card_x = cardinality_1_point.x;\n    p1_card_y = cardinality_1_point.y;\n    p2_card_x = cardinality_2_point.x;\n    p2_card_y = cardinality_2_point.y;\n  }\n\n  if (typeof relation.title !== 'undefined') {\n    const g = elem.append('g').attr('class', 'classLabel');\n    const label = g\n      .append('text')\n      .attr('class', 'label')\n      .attr('x', x)\n      .attr('y', y)\n      .attr('fill', 'red')\n      .attr('text-anchor', 'middle')\n      .text(relation.title);\n\n    window.label = label;\n    const bounds = label.node().getBBox();\n\n    g.insert('rect', ':first-child')\n      .attr('class', 'box')\n      .attr('x', bounds.x - conf.padding / 2)\n      .attr('y', bounds.y - conf.padding / 2)\n      .attr('width', bounds.width + conf.padding)\n      .attr('height', bounds.height + conf.padding);\n  }\n\n  log.info('Rendering relation ' + JSON.stringify(relation));\n  if (typeof relation.relationTitle1 !== 'undefined' && relation.relationTitle1 !== 'none') {\n    const g = elem.append('g').attr('class', 'cardinality');\n    g.append('text')\n      .attr('class', 'type1')\n      .attr('x', p1_card_x)\n      .attr('y', p1_card_y)\n      .attr('fill', 'black')\n      .attr('font-size', '6')\n      .text(relation.relationTitle1);\n  }\n  if (typeof relation.relationTitle2 !== 'undefined' && relation.relationTitle2 !== 'none') {\n    const g = elem.append('g').attr('class', 'cardinality');\n    g.append('text')\n      .attr('class', 'type2')\n      .attr('x', p2_card_x)\n      .attr('y', p2_card_y)\n      .attr('fill', 'black')\n      .attr('font-size', '6')\n      .text(relation.relationTitle2);\n  }\n\n  edgeCount++;\n};\n\n/**\n * Renders a class diagram\n *\n * @param {SVGSVGElement} elem The element to draw it into\n * @param classDef\n * @param conf\n * @todo Add more information in the JSDOC here\n */\nexport const drawClass = function (elem, classDef, conf) {\n  log.info('Rendering class ' + classDef);\n\n  const id = classDef.id;\n  const classInfo = {\n    id: id,\n    label: classDef.id,\n    width: 0,\n    height: 0,\n  };\n\n  // add class group\n  const g = elem.append('g').attr('id', lookUpDomId(id)).attr('class', 'classGroup');\n\n  // add title\n  let title;\n  if (classDef.link) {\n    title = g\n      .append('svg:a')\n      .attr('xlink:href', classDef.link)\n      .attr('target', classDef.linkTarget)\n      .append('text')\n      .attr('y', conf.textHeight + conf.padding)\n      .attr('x', 0);\n  } else {\n    title = g\n      .append('text')\n      .attr('y', conf.textHeight + conf.padding)\n      .attr('x', 0);\n  }\n\n  // add annotations\n  let isFirst = true;\n  classDef.annotations.forEach(function (member) {\n    const titleText2 = title.append('tspan').text('«' + member + '»');\n    if (!isFirst) titleText2.attr('dy', conf.textHeight);\n    isFirst = false;\n  });\n\n  let classTitleString = classDef.id;\n\n  if (classDef.type !== undefined && classDef.type !== '') {\n    classTitleString += '<' + classDef.type + '>';\n  }\n\n  const classTitle = title.append('tspan').text(classTitleString).attr('class', 'title');\n\n  // If class has annotations the title needs to have an offset of the text height\n  if (!isFirst) classTitle.attr('dy', conf.textHeight);\n\n  const titleHeight = title.node().getBBox().height;\n\n  const membersLine = g\n    .append('line') // text label for the x axis\n    .attr('x1', 0)\n    .attr('y1', conf.padding + titleHeight + conf.dividerMargin / 2)\n    .attr('y2', conf.padding + titleHeight + conf.dividerMargin / 2);\n\n  const members = g\n    .append('text') // text label for the x axis\n    .attr('x', conf.padding)\n    .attr('y', titleHeight + conf.dividerMargin + conf.textHeight)\n    .attr('fill', 'white')\n    .attr('class', 'classText');\n\n  isFirst = true;\n  classDef.members.forEach(function (member) {\n    addTspan(members, member, isFirst, conf);\n    isFirst = false;\n  });\n\n  const membersBox = members.node().getBBox();\n\n  const methodsLine = g\n    .append('line') // text label for the x axis\n    .attr('x1', 0)\n    .attr('y1', conf.padding + titleHeight + conf.dividerMargin + membersBox.height)\n    .attr('y2', conf.padding + titleHeight + conf.dividerMargin + membersBox.height);\n\n  const methods = g\n    .append('text') // text label for the x axis\n    .attr('x', conf.padding)\n    .attr('y', titleHeight + 2 * conf.dividerMargin + membersBox.height + conf.textHeight)\n    .attr('fill', 'white')\n    .attr('class', 'classText');\n\n  isFirst = true;\n\n  classDef.methods.forEach(function (method) {\n    addTspan(methods, method, isFirst, conf);\n    isFirst = false;\n  });\n\n  const classBox = g.node().getBBox();\n  var cssClassStr = ' ';\n\n  if (classDef.cssClasses.length > 0) {\n    cssClassStr = cssClassStr + classDef.cssClasses.join(' ');\n  }\n\n  const rect = g\n    .insert('rect', ':first-child')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', classBox.width + 2 * conf.padding)\n    .attr('height', classBox.height + conf.padding + 0.5 * conf.dividerMargin)\n    .attr('class', cssClassStr);\n\n  const rectWidth = rect.node().getBBox().width;\n\n  // Center title\n  // We subtract the width of each text element from the class box width and divide it by 2\n  title.node().childNodes.forEach(function (x) {\n    x.setAttribute('x', (rectWidth - x.getBBox().width) / 2);\n  });\n\n  if (classDef.tooltip) {\n    title.insert('title').text(classDef.tooltip);\n  }\n\n  membersLine.attr('x2', rectWidth);\n  methodsLine.attr('x2', rectWidth);\n\n  classInfo.width = rectWidth;\n  classInfo.height = classBox.height + conf.padding + 0.5 * conf.dividerMargin;\n\n  return classInfo;\n};\n\nexport const parseMember = function (text) {\n  const fieldRegEx = /^(\\+|-|~|#)?(\\w+)(~\\w+~|\\[\\])?\\s+(\\w+) *(\\*|\\$)?$/;\n  const methodRegEx = /^([+|\\-|~|#])?(\\w+) *\\( *(.*)\\) *(\\*|\\$)? *(\\w*[~|[\\]]*\\s*\\w*~?)$/;\n\n  let fieldMatch = text.match(fieldRegEx);\n  let methodMatch = text.match(methodRegEx);\n\n  if (fieldMatch && !methodMatch) {\n    return buildFieldDisplay(fieldMatch);\n  } else if (methodMatch) {\n    return buildMethodDisplay(methodMatch);\n  } else {\n    return buildLegacyDisplay(text);\n  }\n};\n\nconst buildFieldDisplay = function (parsedText) {\n  let cssStyle = '';\n  let displayText = '';\n\n  try {\n    let visibility = parsedText[1] ? parsedText[1].trim() : '';\n    let fieldType = parsedText[2] ? parsedText[2].trim() : '';\n    let genericType = parsedText[3] ? parseGenericTypes(parsedText[3].trim()) : '';\n    let fieldName = parsedText[4] ? parsedText[4].trim() : '';\n    let classifier = parsedText[5] ? parsedText[5].trim() : '';\n\n    displayText = visibility + fieldType + genericType + ' ' + fieldName;\n    cssStyle = parseClassifier(classifier);\n  } catch (err) {\n    displayText = parsedText;\n  }\n\n  return {\n    displayText: displayText,\n    cssStyle: cssStyle,\n  };\n};\n\nconst buildMethodDisplay = function (parsedText) {\n  let cssStyle = '';\n  let displayText = '';\n\n  try {\n    let visibility = parsedText[1] ? parsedText[1].trim() : '';\n    let methodName = parsedText[2] ? parsedText[2].trim() : '';\n    let parameters = parsedText[3] ? parseGenericTypes(parsedText[3].trim()) : '';\n    let classifier = parsedText[4] ? parsedText[4].trim() : '';\n    let returnType = parsedText[5] ? ' : ' + parseGenericTypes(parsedText[5]).trim() : '';\n\n    displayText = visibility + methodName + '(' + parameters + ')' + returnType;\n    cssStyle = parseClassifier(classifier);\n  } catch (err) {\n    displayText = parsedText;\n  }\n\n  return {\n    displayText: displayText,\n    cssStyle: cssStyle,\n  };\n};\n\nconst buildLegacyDisplay = function (text) {\n  // if for some reason we dont have any match, use old format to parse text\n  let displayText = '';\n  let cssStyle = '';\n  let memberText = '';\n  let returnType = '';\n  let methodStart = text.indexOf('(');\n  let methodEnd = text.indexOf(')');\n\n  if (methodStart > 1 && methodEnd > methodStart && methodEnd <= text.length) {\n    let visibility = '';\n    let methodName = '';\n\n    let firstChar = text.substring(0, 1);\n    if (firstChar.match(/\\w/)) {\n      methodName = text.substring(0, methodStart).trim();\n    } else {\n      if (firstChar.match(/\\+|-|~|#/)) {\n        visibility = firstChar;\n      }\n\n      methodName = text.substring(1, methodStart).trim();\n    }\n\n    let parameters = text.substring(methodStart + 1, methodEnd);\n    let classifier = text.substring(methodEnd + 1, 1);\n    cssStyle = parseClassifier(classifier);\n\n    displayText = visibility + methodName + '(' + parseGenericTypes(parameters.trim()) + ')';\n\n    if (methodEnd < memberText.length) {\n      returnType = text.substring(methodEnd + 2).trim();\n      if (returnType !== '') {\n        returnType = ' : ' + parseGenericTypes(returnType);\n      }\n    }\n  } else {\n    // finally - if all else fails, just send the text back as written (other than parsing for generic types)\n    displayText = parseGenericTypes(text);\n  }\n\n  return {\n    displayText: displayText,\n    cssStyle: cssStyle,\n  };\n};\n\n/**\n * Adds a <tspan> for a member in a diagram\n *\n * @param {SVGElement} textEl The element to append to\n * @param {string} txt The member\n * @param {boolean} isFirst\n * @param {{ padding: string; textHeight: string }} conf The configuration for the member\n */\nconst addTspan = function (textEl, txt, isFirst, conf) {\n  let member = parseMember(txt);\n\n  const tSpan = textEl.append('tspan').attr('x', conf.padding).text(member.displayText);\n\n  if (member.cssStyle !== '') {\n    tSpan.attr('style', member.cssStyle);\n  }\n\n  if (!isFirst) {\n    tSpan.attr('dy', conf.textHeight);\n  }\n};\n\n/**\n * Makes generics in typescript syntax\n *\n * @example <caption>Array of array of strings in typescript syntax</caption>\n *   // returns \"Array<Array<string>>\"\n *   parseGenericTypes('Array~Array~string~~');\n *\n * @param {string} text The text to convert\n * @returns {string} The converted string\n */\nconst parseGenericTypes = function (text) {\n  let cleanedText = text;\n\n  if (text.indexOf('~') != -1) {\n    cleanedText = cleanedText.replace('~', '<');\n    cleanedText = cleanedText.replace('~', '>');\n\n    return parseGenericTypes(cleanedText);\n  } else {\n    return cleanedText;\n  }\n};\n\n/**\n * Gives the styles for a classifier\n *\n * @param {'+' | '-' | '#' | '~' | '*' | '$'} classifier The classifier string\n * @returns {string} Styling for the classifier\n */\nconst parseClassifier = function (classifier) {\n  switch (classifier) {\n    case '*':\n      return 'font-style:italic;';\n    case '$':\n      return 'text-decoration:underline;';\n    default:\n      return '';\n  }\n};\n\nexport default {\n  drawClass,\n  drawEdge,\n  parseMember,\n};\n","import DOMPurify from 'dompurify';\n\n/**\n * Gets the number of lines in a string\n *\n * @param {string | undefined} s The string to check the lines for\n * @returns {number} The number of lines in that string\n */\nexport const getRows = (s) => {\n  if (!s) return 1;\n  let str = breakToPlaceholder(s);\n  str = str.replace(/\\\\n/g, '#br#');\n  return str.split('#br#');\n};\n\nexport const removeEscapes = (text) => {\n  let newStr = text.replace(/\\\\u[\\dA-F]{4}/gi, function (match) {\n    return String.fromCharCode(parseInt(match.replace(/\\\\u/g, ''), 16));\n  });\n\n  newStr = newStr.replace(/\\\\x([0-9a-f]{2})/gi, (_, c) => String.fromCharCode(parseInt(c, 16)));\n  newStr = newStr.replace(/\\\\[\\d\\d\\d]{3}/gi, function (match) {\n    return String.fromCharCode(parseInt(match.replace(/\\\\/g, ''), 8));\n  });\n  newStr = newStr.replace(/\\\\[\\d\\d\\d]{2}/gi, function (match) {\n    return String.fromCharCode(parseInt(match.replace(/\\\\/g, ''), 8));\n  });\n\n  return newStr;\n};\n\n/**\n * Removes script tags from a text\n *\n * @param {string} txt The text to sanitize\n * @returns {string} The safer text\n */\nexport const removeScript = (txt) => {\n  var rs = '';\n  var idx = 0;\n\n  while (idx >= 0) {\n    idx = txt.indexOf('<script');\n    if (idx >= 0) {\n      rs += txt.substr(0, idx);\n      txt = txt.substr(idx + 1);\n\n      idx = txt.indexOf('</script>');\n      if (idx >= 0) {\n        idx += 9;\n        txt = txt.substr(idx);\n      }\n    } else {\n      rs += txt;\n      idx = -1;\n      break;\n    }\n  }\n  let decodedText = removeEscapes(rs);\n  decodedText = decodedText.replaceAll(/script>/gi, '#');\n  decodedText = decodedText.replaceAll(/javascript:/gi, '#');\n  decodedText = decodedText.replaceAll(/javascript&colon/gi, '#');\n  decodedText = decodedText.replaceAll(/onerror=/gi, 'onerror:');\n  decodedText = decodedText.replaceAll(/<iframe/gi, '');\n  return decodedText;\n};\n\nconst sanitizeMore = (text, config) => {\n  let txt = text;\n  let htmlLabels = true;\n  if (\n    config.flowchart &&\n    (config.flowchart.htmlLabels === false || config.flowchart.htmlLabels === 'false')\n  ) {\n    htmlLabels = false;\n  }\n\n  if (htmlLabels) {\n    const level = config.securityLevel;\n\n    if (level === 'antiscript' || level === 'strict') {\n      txt = removeScript(txt);\n    } else if (level !== 'loose') {\n      // eslint-disable-line\n      txt = breakToPlaceholder(txt);\n      txt = txt.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n      txt = txt.replace(/=/g, '&equals;');\n      txt = placeholderToBreak(txt);\n    }\n  }\n\n  return txt;\n};\n\nexport const sanitizeText = (text, config) => {\n  if (!text) return text;\n  let txt = '';\n  if (config['dompurifyConfig']) {\n    txt = DOMPurify.sanitize(sanitizeMore(text, config), config['dompurifyConfig']);\n  } else {\n    txt = DOMPurify.sanitize(sanitizeMore(text, config));\n  }\n  return txt;\n};\n\nexport const sanitizeTextOrArray = (a, config) => {\n  if (typeof a === 'string') return sanitizeText(a, config);\n\n  const f = (x) => sanitizeText(x, config);\n  return a.flat().map(f);\n};\n\nexport const lineBreakRegex = /<br\\s*\\/?>/gi;\n\n/**\n * Whether or not a text has any linebreaks\n *\n * @param {string} text The text to test\n * @returns {boolean} Whether or not the text has breaks\n */\nexport const hasBreaks = (text) => {\n  return lineBreakRegex.test(text);\n};\n\n/**\n * Splits on <br> tags\n *\n * @param {string} text Text to split\n * @returns {string[]} List of lines as strings\n */\nexport const splitBreaks = (text) => {\n  return text.split(lineBreakRegex);\n};\n\n/**\n * Converts placeholders to linebreaks in HTML\n *\n * @param {string} s HTML with placeholders\n * @returns {string} HTML with breaks instead of placeholders\n */\nconst placeholderToBreak = (s) => {\n  return s.replace(/#br#/g, '<br/>');\n};\n\n/**\n * Opposite of `placeholderToBreak`, converts breaks to placeholders\n *\n * @param {string} s HTML string\n * @returns {string} String with placeholders\n */\nconst breakToPlaceholder = (s) => {\n  return s.replace(lineBreakRegex, '#br#');\n};\n\n/**\n * Gets the current URL\n *\n * @param {boolean} useAbsolute Whether to return the absolute URL or not\n * @returns {string} The current URL\n */\nconst getUrl = (useAbsolute) => {\n  let url = '';\n  if (useAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n\n  return url;\n};\n\n/**\n * Converts a string/boolean into a boolean\n *\n * @param {string | boolean} val String or boolean to convert\n * @returns {boolean} The result from the input\n */\nexport const evaluate = (val) => (val === 'false' || val === false ? false : true);\n\nexport default {\n  getRows,\n  sanitizeText,\n  sanitizeTextOrArray,\n  hasBreaks,\n  splitBreaks,\n  lineBreakRegex,\n  removeScript,\n  getUrl,\n  evaluate,\n  removeEscapes,\n};\n","import { log } from '../../logger';\nimport mermaidAPI from '../../mermaidAPI';\nimport * as configApi from '../../config';\nimport common from '../common/common';\nimport {\n  setTitle,\n  getTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n} from '../../commonDb';\n\nlet entities = {};\nlet relationships = [];\nlet title = '';\nlet description = '';\n\nconst Cardinality = {\n  ZERO_OR_ONE: 'ZERO_OR_ONE',\n  ZERO_OR_MORE: 'ZERO_OR_MORE',\n  ONE_OR_MORE: 'ONE_OR_MORE',\n  ONLY_ONE: 'ONLY_ONE',\n};\n\nconst Identification = {\n  NON_IDENTIFYING: 'NON_IDENTIFYING',\n  IDENTIFYING: 'IDENTIFYING',\n};\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\nconst addEntity = function (name) {\n  if (typeof entities[name] === 'undefined') {\n    entities[name] = { attributes: [] };\n    log.info('Added new entity :', name);\n  }\n\n  return entities[name];\n};\n\nconst getEntities = () => entities;\n\nconst addAttributes = function (entityName, attribs) {\n  let entity = addEntity(entityName); // May do nothing (if entity has already been added)\n\n  // Process attribs in reverse order due to effect of recursive construction (last attribute is first)\n  let i;\n  for (i = attribs.length - 1; i >= 0; i--) {\n    entity.attributes.push(attribs[i]);\n    log.debug('Added attribute ', attribs[i].attributeName);\n  }\n};\n\n/**\n * Add a relationship\n *\n * @param entA The first entity in the relationship\n * @param rolA The role played by the first entity in relation to the second\n * @param entB The second entity in the relationship\n * @param rSpec The details of the relationship between the two entities\n */\nconst addRelationship = function (entA, rolA, entB, rSpec) {\n  let rel = {\n    entityA: entA,\n    roleA: rolA,\n    entityB: entB,\n    relSpec: rSpec,\n  };\n\n  relationships.push(rel);\n  log.debug('Added new relationship :', rel);\n};\n\nconst getRelationships = () => relationships;\n\nconst clear = function () {\n  entities = {};\n  relationships = [];\n  title = '';\n  commonClear();\n};\n\nexport default {\n  Cardinality,\n  Identification,\n  parseDirective,\n  getConfig: () => configApi.getConfig().er,\n  addEntity,\n  addAttributes,\n  getEntities,\n  addRelationship,\n  getRelationships,\n  clear,\n  setTitle,\n  getTitle,\n  setAccDescription,\n  getAccDescription,\n};\n","const ERMarkers = {\n  ONLY_ONE_START: 'ONLY_ONE_START',\n  ONLY_ONE_END: 'ONLY_ONE_END',\n  ZERO_OR_ONE_START: 'ZERO_OR_ONE_START',\n  ZERO_OR_ONE_END: 'ZERO_OR_ONE_END',\n  ONE_OR_MORE_START: 'ONE_OR_MORE_START',\n  ONE_OR_MORE_END: 'ONE_OR_MORE_END',\n  ZERO_OR_MORE_START: 'ZERO_OR_MORE_START',\n  ZERO_OR_MORE_END: 'ZERO_OR_MORE_END',\n};\n\n/**\n * Put the markers into the svg DOM for later use with edge paths\n *\n * @param elem\n * @param conf\n */\nconst insertMarkers = function (elem, conf) {\n  let marker;\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ONLY_ONE_START)\n    .attr('refX', 0)\n    .attr('refY', 9)\n    .attr('markerWidth', 18)\n    .attr('markerHeight', 18)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M9,0 L9,18 M15,0 L15,18');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ONLY_ONE_END)\n    .attr('refX', 18)\n    .attr('refY', 9)\n    .attr('markerWidth', 18)\n    .attr('markerHeight', 18)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M3,0 L3,18 M9,0 L9,18');\n\n  marker = elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ZERO_OR_ONE_START)\n    .attr('refX', 0)\n    .attr('refY', 9)\n    .attr('markerWidth', 30)\n    .attr('markerHeight', 18)\n    .attr('orient', 'auto');\n  marker\n    .append('circle')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'white')\n    .attr('cx', 21)\n    .attr('cy', 9)\n    .attr('r', 6);\n  marker.append('path').attr('stroke', conf.stroke).attr('fill', 'none').attr('d', 'M9,0 L9,18');\n\n  marker = elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ZERO_OR_ONE_END)\n    .attr('refX', 30)\n    .attr('refY', 9)\n    .attr('markerWidth', 30)\n    .attr('markerHeight', 18)\n    .attr('orient', 'auto');\n  marker\n    .append('circle')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'white')\n    .attr('cx', 9)\n    .attr('cy', 9)\n    .attr('r', 6);\n  marker.append('path').attr('stroke', conf.stroke).attr('fill', 'none').attr('d', 'M21,0 L21,18');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ONE_OR_MORE_START)\n    .attr('refX', 18)\n    .attr('refY', 18)\n    .attr('markerWidth', 45)\n    .attr('markerHeight', 36)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M0,18 Q 18,0 36,18 Q 18,36 0,18 M42,9 L42,27');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ONE_OR_MORE_END)\n    .attr('refX', 27)\n    .attr('refY', 18)\n    .attr('markerWidth', 45)\n    .attr('markerHeight', 36)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M3,9 L3,27 M9,18 Q27,0 45,18 Q27,36 9,18');\n\n  marker = elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ZERO_OR_MORE_START)\n    .attr('refX', 18)\n    .attr('refY', 18)\n    .attr('markerWidth', 57)\n    .attr('markerHeight', 36)\n    .attr('orient', 'auto');\n  marker\n    .append('circle')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'white')\n    .attr('cx', 48)\n    .attr('cy', 18)\n    .attr('r', 6);\n  marker\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M0,18 Q18,0 36,18 Q18,36 0,18');\n\n  marker = elem\n    .append('defs')\n    .append('marker')\n    .attr('id', ERMarkers.ZERO_OR_MORE_END)\n    .attr('refX', 39)\n    .attr('refY', 18)\n    .attr('markerWidth', 57)\n    .attr('markerHeight', 36)\n    .attr('orient', 'auto');\n  marker\n    .append('circle')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'white')\n    .attr('cx', 9)\n    .attr('cy', 18)\n    .attr('r', 6);\n  marker\n    .append('path')\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none')\n    .attr('d', 'M21,18 Q39,0 57,18 Q39,36 21,18');\n\n  return;\n};\n\nexport default {\n  ERMarkers,\n  insertMarkers,\n};\n","import graphlib from 'graphlib';\nimport { line, curveBasis, select } from 'd3';\nimport erDb from './erDb';\nimport erParser from './parser/erDiagram';\nimport dagre from 'dagre';\nimport { getConfig } from '../../config';\nimport { log } from '../../logger';\nimport erMarkers from './erMarkers';\nimport { configureSvgSize } from '../../utils';\nimport addSVGAccessibilityFields from '../../accessibility';\n\nconst conf = {};\n\n/**\n * Allows the top-level API module to inject config specific to this renderer, storing it in the\n * local conf object. Note that generic config still needs to be retrieved using getConfig()\n * imported from the config module\n *\n * @param cnf\n */\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n  for (let i = 0; i < keys.length; i++) {\n    conf[keys[i]] = cnf[keys[i]];\n  }\n};\n\n/**\n * Draw attributes for an entity\n *\n * @param groupNode The svg group node for the entity\n * @param entityTextNode The svg node for the entity label text\n * @param attributes An array of attributes defined for the entity (each attribute has a type and a name)\n * @returns The bounding box of the entity, after attributes have been added\n */\nconst drawAttributes = (groupNode, entityTextNode, attributes) => {\n  const heightPadding = conf.entityPadding / 3; // Padding internal to attribute boxes\n  const widthPadding = conf.entityPadding / 3; // Ditto\n  const attrFontSize = conf.fontSize * 0.85;\n  const labelBBox = entityTextNode.node().getBBox();\n  const attributeNodes = []; // Intermediate storage for attribute nodes created so that we can do a second pass\n  let hasKeyType = false;\n  let hasComment = false;\n  let maxTypeWidth = 0;\n  let maxNameWidth = 0;\n  let maxKeyWidth = 0;\n  let maxCommentWidth = 0;\n  let cumulativeHeight = labelBBox.height + heightPadding * 2;\n  let attrNum = 1;\n\n  // Check to see if any of the attributes has a key or a comment\n  attributes.forEach((item) => {\n    if (item.attributeKeyType !== undefined) {\n      hasKeyType = true;\n    }\n\n    if (item.attributeComment !== undefined) {\n      hasComment = true;\n    }\n  });\n\n  attributes.forEach((item) => {\n    const attrPrefix = `${entityTextNode.node().id}-attr-${attrNum}`;\n    let nodeHeight = 0;\n\n    // Add a text node for the attribute type\n    const typeNode = groupNode\n      .append('text')\n      .attr('class', 'er entityLabel')\n      .attr('id', `${attrPrefix}-type`)\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('dominant-baseline', 'middle')\n      .attr('text-anchor', 'left')\n      .attr(\n        'style',\n        'font-family: ' + getConfig().fontFamily + '; font-size: ' + attrFontSize + 'px'\n      )\n      .text(item.attributeType);\n\n    // Add a text node for the attribute name\n    const nameNode = groupNode\n      .append('text')\n      .attr('class', 'er entityLabel')\n      .attr('id', `${attrPrefix}-name`)\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('dominant-baseline', 'middle')\n      .attr('text-anchor', 'left')\n      .attr(\n        'style',\n        'font-family: ' + getConfig().fontFamily + '; font-size: ' + attrFontSize + 'px'\n      )\n      .text(item.attributeName);\n\n    const attributeNode = {};\n    attributeNode.tn = typeNode;\n    attributeNode.nn = nameNode;\n\n    const typeBBox = typeNode.node().getBBox();\n    const nameBBox = nameNode.node().getBBox();\n    maxTypeWidth = Math.max(maxTypeWidth, typeBBox.width);\n    maxNameWidth = Math.max(maxNameWidth, nameBBox.width);\n\n    nodeHeight = Math.max(typeBBox.height, nameBBox.height);\n\n    if (hasKeyType) {\n      const keyTypeNode = groupNode\n        .append('text')\n        .attr('class', 'er entityLabel')\n        .attr('id', `${attrPrefix}-key`)\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('dominant-baseline', 'middle')\n        .attr('text-anchor', 'left')\n        .attr(\n          'style',\n          'font-family: ' + getConfig().fontFamily + '; font-size: ' + attrFontSize + 'px'\n        )\n        .text(item.attributeKeyType || '');\n\n      attributeNode.kn = keyTypeNode;\n      const keyTypeBBox = keyTypeNode.node().getBBox();\n      maxKeyWidth = Math.max(maxKeyWidth, keyTypeBBox.width);\n      nodeHeight = Math.max(nodeHeight, keyTypeBBox.height);\n    }\n\n    if (hasComment) {\n      const commentNode = groupNode\n        .append('text')\n        .attr('class', 'er entityLabel')\n        .attr('id', `${attrPrefix}-comment`)\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('dominant-baseline', 'middle')\n        .attr('text-anchor', 'left')\n        .attr(\n          'style',\n          'font-family: ' + getConfig().fontFamily + '; font-size: ' + attrFontSize + 'px'\n        )\n        .text(item.attributeComment || '');\n\n      attributeNode.cn = commentNode;\n      const commentNodeBBox = commentNode.node().getBBox();\n      maxCommentWidth = Math.max(maxCommentWidth, commentNodeBBox.width);\n      nodeHeight = Math.max(nodeHeight, commentNodeBBox.height);\n    }\n\n    attributeNode.height = nodeHeight;\n    // Keep a reference to the nodes so that we can iterate through them later\n    attributeNodes.push(attributeNode);\n    cumulativeHeight += nodeHeight + heightPadding * 2;\n    attrNum += 1;\n  });\n\n  let widthPaddingFactor = 4;\n  if (hasKeyType) {\n    widthPaddingFactor += 2;\n  }\n  if (hasComment) {\n    widthPaddingFactor += 2;\n  }\n\n  const maxWidth = maxTypeWidth + maxNameWidth + maxKeyWidth + maxCommentWidth;\n\n  // Calculate the new bounding box of the overall entity, now that attributes have been added\n  const bBox = {\n    width: Math.max(\n      conf.minEntityWidth,\n      Math.max(\n        labelBBox.width + conf.entityPadding * 2,\n        maxWidth + widthPadding * widthPaddingFactor\n      )\n    ),\n    height:\n      attributes.length > 0\n        ? cumulativeHeight\n        : Math.max(conf.minEntityHeight, labelBBox.height + conf.entityPadding * 2),\n  };\n\n  if (attributes.length > 0) {\n    // There might be some spare width for padding out attributes if the entity name is very long\n    const spareColumnWidth = Math.max(\n      0,\n      (bBox.width - maxWidth - widthPadding * widthPaddingFactor) / (widthPaddingFactor / 2)\n    );\n\n    // Position the entity label near the top of the entity bounding box\n    entityTextNode.attr(\n      'transform',\n      'translate(' + bBox.width / 2 + ',' + (heightPadding + labelBBox.height / 2) + ')'\n    );\n\n    // Add rectangular boxes for the attribute types/names\n    let heightOffset = labelBBox.height + heightPadding * 2; // Start at the bottom of the entity label\n    let attribStyle = 'attributeBoxOdd'; // We will flip the style on alternate rows to achieve a banded effect\n\n    attributeNodes.forEach((attributeNode) => {\n      // Calculate the alignment y co-ordinate for the type/name of the attribute\n      const alignY = heightOffset + heightPadding + attributeNode.height / 2;\n\n      // Position the type attribute\n      attributeNode.tn.attr('transform', 'translate(' + widthPadding + ',' + alignY + ')');\n\n      // TODO Handle spareWidth in attr('width')\n      // Insert a rectangle for the type\n      const typeRect = groupNode\n        .insert('rect', '#' + attributeNode.tn.node().id)\n        .attr('class', `er ${attribStyle}`)\n        .attr('fill', conf.fill)\n        .attr('fill-opacity', '100%')\n        .attr('stroke', conf.stroke)\n        .attr('x', 0)\n        .attr('y', heightOffset)\n        .attr('width', maxTypeWidth + widthPadding * 2 + spareColumnWidth)\n        .attr('height', attributeNode.height + heightPadding * 2);\n\n      const nameXOffset = parseFloat(typeRect.attr('x')) + parseFloat(typeRect.attr('width'));\n\n      // Position the name attribute\n      attributeNode.nn.attr(\n        'transform',\n        'translate(' + (nameXOffset + widthPadding) + ',' + alignY + ')'\n      );\n\n      // Insert a rectangle for the name\n      const nameRect = groupNode\n        .insert('rect', '#' + attributeNode.nn.node().id)\n        .attr('class', `er ${attribStyle}`)\n        .attr('fill', conf.fill)\n        .attr('fill-opacity', '100%')\n        .attr('stroke', conf.stroke)\n        .attr('x', nameXOffset)\n        .attr('y', heightOffset)\n        .attr('width', maxNameWidth + widthPadding * 2 + spareColumnWidth)\n        .attr('height', attributeNode.height + heightPadding * 2);\n\n      let keyTypeAndCommentXOffset =\n        parseFloat(nameRect.attr('x')) + parseFloat(nameRect.attr('width'));\n\n      if (hasKeyType) {\n        // Position the key type attribute\n        attributeNode.kn.attr(\n          'transform',\n          'translate(' + (keyTypeAndCommentXOffset + widthPadding) + ',' + alignY + ')'\n        );\n\n        // Insert a rectangle for the key type\n        const keyTypeRect = groupNode\n          .insert('rect', '#' + attributeNode.kn.node().id)\n          .attr('class', `er ${attribStyle}`)\n          .attr('fill', conf.fill)\n          .attr('fill-opacity', '100%')\n          .attr('stroke', conf.stroke)\n          .attr('x', keyTypeAndCommentXOffset)\n          .attr('y', heightOffset)\n          .attr('width', maxKeyWidth + widthPadding * 2 + spareColumnWidth)\n          .attr('height', attributeNode.height + heightPadding * 2);\n\n        keyTypeAndCommentXOffset =\n          parseFloat(keyTypeRect.attr('x')) + parseFloat(keyTypeRect.attr('width'));\n      }\n\n      if (hasComment) {\n        // Position the comment attribute\n        attributeNode.cn.attr(\n          'transform',\n          'translate(' + (keyTypeAndCommentXOffset + widthPadding) + ',' + alignY + ')'\n        );\n\n        // Insert a rectangle for the comment\n        groupNode\n          .insert('rect', '#' + attributeNode.cn.node().id)\n          .attr('class', `er ${attribStyle}`)\n          .attr('fill', conf.fill)\n          .attr('fill-opacity', '100%')\n          .attr('stroke', conf.stroke)\n          .attr('x', keyTypeAndCommentXOffset)\n          .attr('y', heightOffset)\n          .attr('width', maxCommentWidth + widthPadding * 2 + spareColumnWidth)\n          .attr('height', attributeNode.height + heightPadding * 2);\n      }\n\n      // Increment the height offset to move to the next row\n      heightOffset += attributeNode.height + heightPadding * 2;\n\n      // Flip the attribute style for row banding\n      attribStyle = attribStyle == 'attributeBoxOdd' ? 'attributeBoxEven' : 'attributeBoxOdd';\n    });\n  } else {\n    // Ensure the entity box is a decent size without any attributes\n    bBox.height = Math.max(conf.minEntityHeight, cumulativeHeight);\n\n    // Position the entity label in the middle of the box\n    entityTextNode.attr('transform', 'translate(' + bBox.width / 2 + ',' + bBox.height / 2 + ')');\n  }\n\n  return bBox;\n};\n\n/**\n * Use D3 to construct the svg elements for the entities\n *\n * @param svgNode The svg node that contains the diagram\n * @param entities The entities to be drawn\n * @param graph The graph that contains the vertex and edge definitions post-layout\n * @returns The first entity that was inserted\n */\nconst drawEntities = function (svgNode, entities, graph) {\n  const keys = Object.keys(entities);\n  let firstOne;\n\n  keys.forEach(function (id) {\n    // Create a group for each entity\n    const groupNode = svgNode.append('g').attr('id', id);\n\n    firstOne = firstOne === undefined ? id : firstOne;\n\n    // Label the entity - this is done first so that we can get the bounding box\n    // which then determines the size of the rectangle\n    const textId = 'entity-' + id;\n    const textNode = groupNode\n      .append('text')\n      .attr('class', 'er entityLabel')\n      .attr('id', textId)\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('dominant-baseline', 'middle')\n      .attr('text-anchor', 'middle')\n      .attr(\n        'style',\n        'font-family: ' + getConfig().fontFamily + '; font-size: ' + conf.fontSize + 'px'\n      )\n      .text(id);\n\n    const { width: entityWidth, height: entityHeight } = drawAttributes(\n      groupNode,\n      textNode,\n      entities[id].attributes\n    );\n\n    // Draw the rectangle - insert it before the text so that the text is not obscured\n    const rectNode = groupNode\n      .insert('rect', '#' + textId)\n      .attr('class', 'er entityBox')\n      .attr('fill', conf.fill)\n      .attr('fill-opacity', '100%')\n      .attr('stroke', conf.stroke)\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('width', entityWidth)\n      .attr('height', entityHeight);\n\n    const rectBBox = rectNode.node().getBBox();\n\n    // Add the entity to the graph\n    graph.setNode(id, {\n      width: rectBBox.width,\n      height: rectBBox.height,\n      shape: 'rect',\n      id: id,\n    });\n  });\n  return firstOne;\n}; // drawEntities\n\nconst adjustEntities = function (svgNode, graph) {\n  graph.nodes().forEach(function (v) {\n    if (typeof v !== 'undefined' && typeof graph.node(v) !== 'undefined') {\n      svgNode\n        .select('#' + v)\n        .attr(\n          'transform',\n          'translate(' +\n            (graph.node(v).x - graph.node(v).width / 2) +\n            ',' +\n            (graph.node(v).y - graph.node(v).height / 2) +\n            ' )'\n        );\n    }\n  });\n  return;\n};\n\nconst getEdgeName = function (rel) {\n  return (rel.entityA + rel.roleA + rel.entityB).replace(/\\s/g, '');\n};\n\n/**\n * Add each relationship to the graph\n *\n * @param relationships The relationships to be added\n * @param g The graph\n * @returns {Array} The array of relationships\n */\nconst addRelationships = function (relationships, g) {\n  relationships.forEach(function (r) {\n    g.setEdge(r.entityA, r.entityB, { relationship: r }, getEdgeName(r));\n  });\n  return relationships;\n}; // addRelationships\n\nlet relCnt = 0;\n/**\n * Draw a relationship using edge information from the graph\n *\n * @param svg The svg node\n * @param rel The relationship to draw in the svg\n * @param g The graph containing the edge information\n * @param insert The insertion point in the svg DOM (because relationships have markers that need to\n *   sit 'behind' opaque entity boxes)\n */\nconst drawRelationshipFromLayout = function (svg, rel, g, insert) {\n  relCnt++;\n\n  // Find the edge relating to this relationship\n  const edge = g.edge(rel.entityA, rel.entityB, getEdgeName(rel));\n\n  // Get a function that will generate the line path\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    })\n    .curve(curveBasis);\n\n  // Insert the line at the right place\n  const svgPath = svg\n    .insert('path', '#' + insert)\n    .attr('class', 'er relationshipLine')\n    .attr('d', lineFunction(edge.points))\n    .attr('stroke', conf.stroke)\n    .attr('fill', 'none');\n\n  // ...and with dashes if necessary\n  if (rel.relSpec.relType === erDb.Identification.NON_IDENTIFYING) {\n    svgPath.attr('stroke-dasharray', '8,8');\n  }\n\n  // TODO: Understand this better\n  let url = '';\n  if (conf.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n\n  // Decide which start and end markers it needs. It may be possible to be more concise here\n  // by reversing a start marker to make an end marker...but this will do for now\n\n  // Note that the 'A' entity's marker is at the end of the relationship and the 'B' entity's marker is at the start\n  switch (rel.relSpec.cardA) {\n    case erDb.Cardinality.ZERO_OR_ONE:\n      svgPath.attr('marker-end', 'url(' + url + '#' + erMarkers.ERMarkers.ZERO_OR_ONE_END + ')');\n      break;\n    case erDb.Cardinality.ZERO_OR_MORE:\n      svgPath.attr('marker-end', 'url(' + url + '#' + erMarkers.ERMarkers.ZERO_OR_MORE_END + ')');\n      break;\n    case erDb.Cardinality.ONE_OR_MORE:\n      svgPath.attr('marker-end', 'url(' + url + '#' + erMarkers.ERMarkers.ONE_OR_MORE_END + ')');\n      break;\n    case erDb.Cardinality.ONLY_ONE:\n      svgPath.attr('marker-end', 'url(' + url + '#' + erMarkers.ERMarkers.ONLY_ONE_END + ')');\n      break;\n  }\n\n  switch (rel.relSpec.cardB) {\n    case erDb.Cardinality.ZERO_OR_ONE:\n      svgPath.attr(\n        'marker-start',\n        'url(' + url + '#' + erMarkers.ERMarkers.ZERO_OR_ONE_START + ')'\n      );\n      break;\n    case erDb.Cardinality.ZERO_OR_MORE:\n      svgPath.attr(\n        'marker-start',\n        'url(' + url + '#' + erMarkers.ERMarkers.ZERO_OR_MORE_START + ')'\n      );\n      break;\n    case erDb.Cardinality.ONE_OR_MORE:\n      svgPath.attr(\n        'marker-start',\n        'url(' + url + '#' + erMarkers.ERMarkers.ONE_OR_MORE_START + ')'\n      );\n      break;\n    case erDb.Cardinality.ONLY_ONE:\n      svgPath.attr('marker-start', 'url(' + url + '#' + erMarkers.ERMarkers.ONLY_ONE_START + ')');\n      break;\n  }\n\n  // Now label the relationship\n\n  // Find the half-way point\n  const len = svgPath.node().getTotalLength();\n  const labelPoint = svgPath.node().getPointAtLength(len * 0.5);\n\n  // Append a text node containing the label\n  const labelId = 'rel' + relCnt;\n\n  const labelNode = svg\n    .append('text')\n    .attr('class', 'er relationshipLabel')\n    .attr('id', labelId)\n    .attr('x', labelPoint.x)\n    .attr('y', labelPoint.y)\n    .attr('text-anchor', 'middle')\n    .attr('dominant-baseline', 'middle')\n    .attr(\n      'style',\n      'font-family: ' + getConfig().fontFamily + '; font-size: ' + conf.fontSize + 'px'\n    )\n    .text(rel.roleA);\n\n  // Figure out how big the opaque 'container' rectangle needs to be\n  const labelBBox = labelNode.node().getBBox();\n\n  // Insert the opaque rectangle before the text label\n  svg\n    .insert('rect', '#' + labelId)\n    .attr('class', 'er relationshipLabelBox')\n    .attr('x', labelPoint.x - labelBBox.width / 2)\n    .attr('y', labelPoint.y - labelBBox.height / 2)\n    .attr('width', labelBBox.width)\n    .attr('height', labelBBox.height)\n    .attr('fill', 'white')\n    .attr('fill-opacity', '85%');\n\n  return;\n};\n\n/**\n * Draw en E-R diagram in the tag with id: id based on the text definition of the diagram\n *\n * @param text The text of the diagram\n * @param id The unique id of the DOM node that contains the diagram\n */\nexport const draw = function (text, id) {\n  log.info('Drawing ER diagram');\n  erDb.clear();\n  const parser = erParser.parser;\n  parser.yy = erDb;\n  const securityLevel = getConfig().securityLevel;\n  // Handle root and ocument for when rendering in sanbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  // Parse the text to populate erDb\n  try {\n    parser.parse(text);\n  } catch (err) {\n    log.debug('Parsing failed');\n  }\n\n  // Get a reference to the svg node that contains the text\n  const svg = root.select(`[id='${id}']`);\n\n  // Add cardinality marker definitions to the svg\n  erMarkers.insertMarkers(svg, conf);\n\n  // Now we have to construct the diagram in a specific way:\n  // ---\n  // 1. Create all the entities in the svg node at 0,0, but with the correct dimensions (allowing for text content)\n  // 2. Make sure they are all added to the graph\n  // 3. Add all the edges (relationships) to the graph aswell\n  // 4. Let dagre do its magic to layout the graph.  This assigns:\n  //    - the centre co-ordinates for each node, bearing in mind the dimensions and edge relationships\n  //    - the path co-ordinates for each edge\n  //    But it has no impact on the svg child nodes - the diagram remains with every entity rooted at 0,0\n  // 5. Now assign a transform to each entity in the svg node so that it gets drawn in the correct place, as determined by\n  //    its centre point, which is obtained from the graph, and it's width and height\n  // 6. And finally, create all the edges in the svg node using information from the graph\n  // ---\n\n  // Create the graph\n  let g;\n\n  // TODO: Explore directed vs undirected graphs, and how the layout is affected\n  // An E-R diagram could be said to be undirected, but there is merit in setting\n  // the direction from parent to child in a one-to-many as this influences graphlib to\n  // put the parent above the child (does it?), which is intuitive.  Most relationships\n  // in ER diagrams are one-to-many.\n  g = new graphlib.Graph({\n    multigraph: true,\n    directed: true,\n    compound: false,\n  })\n    .setGraph({\n      rankdir: conf.layoutDirection,\n      marginx: 20,\n      marginy: 20,\n      nodesep: 100,\n      edgesep: 100,\n      ranksep: 100,\n    })\n    .setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n  // Draw the entities (at 0,0), returning the first svg node that got\n  // inserted - this represents the insertion point for relationship paths\n  const firstEntity = drawEntities(svg, erDb.getEntities(), g);\n\n  // TODO: externalise the addition of entities to the graph - it's a bit 'buried' in the above\n\n  // Add all the relationships to the graph\n  const relationships = addRelationships(erDb.getRelationships(), g);\n\n  dagre.layout(g); // Node and edge positions will be updated\n\n  // Adjust the positions of the entities so that they adhere to the layout\n  adjustEntities(svg, g);\n\n  // Draw the relationships\n  relationships.forEach(function (rel) {\n    drawRelationshipFromLayout(svg, rel, g, firstEntity);\n  });\n\n  const padding = conf.diagramPadding;\n\n  const svgBounds = svg.node().getBBox();\n  const width = svgBounds.width + padding * 2;\n  const height = svgBounds.height + padding * 2;\n\n  configureSvgSize(svg, height, width, conf.useMaxWidth);\n\n  svg.attr('viewBox', `${svgBounds.x - padding} ${svgBounds.y - padding} ${width} ${height}`);\n\n  addSVGAccessibilityFields(parser.yy, svg, id);\n}; // draw\n\nexport default {\n  setConf,\n  draw,\n};\n","const getStyles = (options) =>\n  `\n  .entityBox {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n  }\n\n  .attributeBoxOdd {\n    fill: #ffffff;\n    stroke: ${options.nodeBorder};\n  }\n\n  .attributeBoxEven {\n    fill: #f2f2f2;\n    stroke: ${options.nodeBorder};\n  }\n\n  .relationshipLabelBox {\n    fill: ${options.tertiaryColor};\n    opacity: 0.7;\n    background-color: ${options.tertiaryColor};\n      rect {\n        opacity: 0.5;\n      }\n  }\n\n    .relationshipLine {\n      stroke: ${options.lineColor};\n    }\n`;\n\nexport default getStyles;\n","import dagreD3 from 'dagre-d3';\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction question(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const s = (w + h) * 0.9;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 },\n  ];\n  const shapeSvg = insertPolygonShape(parent, s, s, points);\n  node.intersect = function (point) {\n    return dagreD3.intersect.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction hexagon(parent, bbox, node) {\n  const f = 4;\n  const h = bbox.height;\n  const m = h / f;\n  const w = bbox.width + 2 * m;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return dagreD3.intersect.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction rect_left_inv_arrow(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return dagreD3.intersect.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction lean_right(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return dagreD3.intersect.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction lean_left(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: (2 * h) / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - (2 * h) / 6, y: -h },\n    { x: -h / 6, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return dagreD3.intersect.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction trapezoid(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return dagreD3.intersect.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction inv_trapezoid(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: (-2 * h) / 6, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return dagreD3.intersect.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction rect_right_inv_arrow(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return dagreD3.intersect.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction stadium(parent, bbox, node) {\n  const h = bbox.height;\n  const w = bbox.width + h / 4;\n\n  const shapeSvg = parent\n    .insert('rect', ':first-child')\n    .attr('rx', h / 2)\n    .attr('ry', h / 2)\n    .attr('x', -w / 2)\n    .attr('y', -h / 2)\n    .attr('width', w)\n    .attr('height', h);\n\n  node.intersect = function (point) {\n    return dagreD3.intersect.rect(node, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction subroutine(parent, bbox, node) {\n  const w = bbox.width;\n  const h = bbox.height;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 },\n  ];\n  const shapeSvg = insertPolygonShape(parent, w, h, points);\n  node.intersect = function (point) {\n    return dagreD3.intersect.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n\n/**\n * @param parent\n * @param bbox\n * @param node\n */\nfunction cylinder(parent, bbox, node) {\n  const w = bbox.width;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry;\n\n  const shape =\n    'M 0,' +\n    ry +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    -w +\n    ' 0 l 0,' +\n    h +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 l 0,' +\n    -h;\n\n  const shapeSvg = parent\n    .attr('label-offset-y', ry)\n    .insert('path', ':first-child')\n    .attr('d', shape)\n    .attr('transform', 'translate(' + -w / 2 + ',' + -(h / 2 + ry) + ')');\n\n  node.intersect = function (point) {\n    const pos = dagreD3.intersect.rect(node, point);\n    const x = pos.x - node.x;\n\n    if (\n      rx != 0 &&\n      (Math.abs(x) < node.width / 2 ||\n        (Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry))\n    ) {\n      // ellipsis equation: x*x / a*a + y*y / b*b = 1\n      // solve for y to get adjustion value for pos.y\n      let y = ry * ry * (1 - (x * x) / (rx * rx));\n      if (y != 0) y = Math.sqrt(y);\n      y = ry - y;\n      if (point.y - node.y > 0) y = -y;\n\n      pos.y += y;\n    }\n\n    return pos;\n  };\n\n  return shapeSvg;\n}\n\n/** @param render */\nexport function addToRender(render) {\n  render.shapes().question = question;\n  render.shapes().hexagon = hexagon;\n  render.shapes().stadium = stadium;\n  render.shapes().subroutine = subroutine;\n  render.shapes().cylinder = cylinder;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().rect_left_inv_arrow = rect_left_inv_arrow;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().lean_right = lean_right;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().lean_left = lean_left;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().trapezoid = trapezoid;\n\n  // Add custom shape for box with inverted arrow on left side\n  render.shapes().inv_trapezoid = inv_trapezoid;\n\n  // Add custom shape for box with inverted arrow on right side\n  render.shapes().rect_right_inv_arrow = rect_right_inv_arrow;\n}\n\n/** @param addShape */\nexport function addToRenderV2(addShape) {\n  addShape({ question });\n  addShape({ hexagon });\n  addShape({ stadium });\n  addShape({ subroutine });\n  addShape({ cylinder });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ rect_left_inv_arrow });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ lean_right });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ lean_left });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ trapezoid });\n\n  // Add custom shape for box with inverted arrow on left side\n  addShape({ inv_trapezoid });\n\n  // Add custom shape for box with inverted arrow on right side\n  addShape({ rect_right_inv_arrow });\n}\n\n/**\n * @param parent\n * @param w\n * @param h\n * @param points\n */\nfunction insertPolygonShape(parent, w, h, points) {\n  return parent\n    .insert('polygon', ':first-child')\n    .attr(\n      'points',\n      points\n        .map(function (d) {\n          return d.x + ',' + d.y;\n        })\n        .join(' ')\n    )\n    .attr('transform', 'translate(' + -w / 2 + ',' + h / 2 + ')');\n}\n\nexport default {\n  addToRender,\n  addToRenderV2,\n};\n","import { select } from 'd3';\nimport utils from '../../utils';\nimport * as configApi from '../../config';\nimport common from '../common/common';\nimport mermaidAPI from '../../mermaidAPI';\nimport { log } from '../../logger';\nimport {\n  setTitle,\n  getTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n} from '../../commonDb';\n\nconst MERMAID_DOM_ID_PREFIX = 'flowchart-';\nlet vertexCounter = 0;\nlet config = configApi.getConfig();\nlet vertices = {};\nlet edges = [];\nlet classes = [];\nlet subGraphs = [];\nlet subGraphLookup = {};\nlet tooltips = {};\nlet subCount = 0;\nlet firstGraphFlag = true;\nlet direction;\n\nlet version; // As in graph\n\n// Functions to be run after graph rendering\nlet funs = [];\n\nconst sanitizeText = (txt) => common.sanitizeText(txt, config);\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\n/**\n * Function to lookup domId from id in the graph definition.\n *\n * @param id\n * @public\n */\nexport const lookUpDomId = function (id) {\n  const veritceKeys = Object.keys(vertices);\n  for (let i = 0; i < veritceKeys.length; i++) {\n    if (vertices[veritceKeys[i]].id === id) {\n      return vertices[veritceKeys[i]].domId;\n    }\n  }\n  return id;\n};\n\n/**\n * Function called by parser when a node definition has been found\n *\n * @param _id\n * @param text\n * @param type\n * @param style\n * @param classes\n * @param dir\n * @param props\n */\nexport const addVertex = function (_id, text, type, style, classes, dir, props = {}) {\n  let txt;\n  let id = _id;\n  if (typeof id === 'undefined') {\n    return;\n  }\n  if (id.trim().length === 0) {\n    return;\n  }\n\n  // if (id[0].match(/\\d/)) id = MERMAID_DOM_ID_PREFIX + id;\n\n  if (typeof vertices[id] === 'undefined') {\n    vertices[id] = {\n      id: id,\n      domId: MERMAID_DOM_ID_PREFIX + id + '-' + vertexCounter,\n      styles: [],\n      classes: [],\n    };\n  }\n  vertexCounter++;\n  if (typeof text !== 'undefined') {\n    config = configApi.getConfig();\n    txt = sanitizeText(text.trim());\n\n    // strip quotes if string starts and ends with a quote\n    if (txt[0] === '\"' && txt[txt.length - 1] === '\"') {\n      txt = txt.substring(1, txt.length - 1);\n    }\n\n    vertices[id].text = txt;\n  } else {\n    if (typeof vertices[id].text === 'undefined') {\n      vertices[id].text = _id;\n    }\n  }\n  if (typeof type !== 'undefined') {\n    vertices[id].type = type;\n  }\n  if (typeof style !== 'undefined') {\n    if (style !== null) {\n      style.forEach(function (s) {\n        vertices[id].styles.push(s);\n      });\n    }\n  }\n  if (typeof classes !== 'undefined') {\n    if (classes !== null) {\n      classes.forEach(function (s) {\n        vertices[id].classes.push(s);\n      });\n    }\n  }\n  if (typeof dir !== 'undefined') {\n    vertices[id].dir = dir;\n  }\n  vertices[id].props = props;\n};\n\n/**\n * Function called by parser when a link/edge definition has been found\n *\n * @param _start\n * @param _end\n * @param type\n * @param linktext\n */\nexport const addSingleLink = function (_start, _end, type, linktext) {\n  let start = _start;\n  let end = _end;\n  // if (start[0].match(/\\d/)) start = MERMAID_DOM_ID_PREFIX + start;\n  // if (end[0].match(/\\d/)) end = MERMAID_DOM_ID_PREFIX + end;\n  // log.info('Got edge...', start, end);\n\n  const edge = { start: start, end: end, type: undefined, text: '' };\n  linktext = type.text;\n\n  if (typeof linktext !== 'undefined') {\n    edge.text = sanitizeText(linktext.trim());\n\n    // strip quotes if string starts and exnds with a quote\n    if (edge.text[0] === '\"' && edge.text[edge.text.length - 1] === '\"') {\n      edge.text = edge.text.substring(1, edge.text.length - 1);\n    }\n  }\n\n  if (typeof type !== 'undefined') {\n    edge.type = type.type;\n    edge.stroke = type.stroke;\n    edge.length = type.length;\n  }\n  edges.push(edge);\n};\nexport const addLink = function (_start, _end, type, linktext) {\n  let i, j;\n  for (i = 0; i < _start.length; i++) {\n    for (j = 0; j < _end.length; j++) {\n      addSingleLink(_start[i], _end[j], type, linktext);\n    }\n  }\n};\n\n/**\n * Updates a link's line interpolation algorithm\n *\n * @param positions\n * @param interp\n */\nexport const updateLinkInterpolate = function (positions, interp) {\n  positions.forEach(function (pos) {\n    if (pos === 'default') {\n      edges.defaultInterpolate = interp;\n    } else {\n      edges[pos].interpolate = interp;\n    }\n  });\n};\n\n/**\n * Updates a link with a style\n *\n * @param positions\n * @param style\n */\nexport const updateLink = function (positions, style) {\n  positions.forEach(function (pos) {\n    if (pos === 'default') {\n      edges.defaultStyle = style;\n    } else {\n      if (utils.isSubstringInArray('fill', style) === -1) {\n        style.push('fill:none');\n      }\n      edges[pos].style = style;\n    }\n  });\n};\n\nexport const addClass = function (id, style) {\n  if (typeof classes[id] === 'undefined') {\n    classes[id] = { id: id, styles: [], textStyles: [] };\n  }\n\n  if (typeof style !== 'undefined') {\n    if (style !== null) {\n      style.forEach(function (s) {\n        if (s.match('color')) {\n          const newStyle1 = s.replace('fill', 'bgFill');\n          const newStyle2 = newStyle1.replace('color', 'fill');\n          classes[id].textStyles.push(newStyle2);\n        }\n        classes[id].styles.push(s);\n      });\n    }\n  }\n};\n\n/**\n * Called by parser when a graph definition is found, stores the direction of the chart.\n *\n * @param dir\n */\nexport const setDirection = function (dir) {\n  direction = dir;\n  if (direction.match(/.*</)) {\n    direction = 'RL';\n  }\n  if (direction.match(/.*\\^/)) {\n    direction = 'BT';\n  }\n  if (direction.match(/.*>/)) {\n    direction = 'LR';\n  }\n  if (direction.match(/.*v/)) {\n    direction = 'TB';\n  }\n};\n\n/**\n * Called by parser when a special node is found, e.g. a clickable element.\n *\n * @param ids Comma separated list of ids\n * @param className Class to add\n */\nexport const setClass = function (ids, className) {\n  ids.split(',').forEach(function (_id) {\n    // let id = version === 'gen-2' ? lookUpDomId(_id) : _id;\n    let id = _id;\n    // if (_id[0].match(/\\d/)) id = MERMAID_DOM_ID_PREFIX + id;\n    if (typeof vertices[id] !== 'undefined') {\n      vertices[id].classes.push(className);\n    }\n\n    if (typeof subGraphLookup[id] !== 'undefined') {\n      subGraphLookup[id].classes.push(className);\n    }\n  });\n};\n\nconst setTooltip = function (ids, tooltip) {\n  ids.split(',').forEach(function (id) {\n    if (typeof tooltip !== 'undefined') {\n      tooltips[version === 'gen-1' ? lookUpDomId(id) : id] = sanitizeText(tooltip);\n    }\n  });\n};\n\nconst setClickFun = function (id, functionName, functionArgs) {\n  let domId = lookUpDomId(id);\n  // if (_id[0].match(/\\d/)) id = MERMAID_DOM_ID_PREFIX + id;\n  if (configApi.getConfig().securityLevel !== 'loose') {\n    return;\n  }\n  if (typeof functionName === 'undefined') {\n    return;\n  }\n  let argList = [];\n  if (typeof functionArgs === 'string') {\n    /* Splits functionArgs by ',', ignoring all ',' in double quoted strings */\n    argList = functionArgs.split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n    for (let i = 0; i < argList.length; i++) {\n      let item = argList[i].trim();\n      /* Removes all double quotes at the start and end of an argument */\n      /* This preserves all starting and ending whitespace inside */\n      if (item.charAt(0) === '\"' && item.charAt(item.length - 1) === '\"') {\n        item = item.substr(1, item.length - 2);\n      }\n      argList[i] = item;\n    }\n  }\n\n  /* if no arguments passed into callback, default to passing in id */\n  if (argList.length === 0) {\n    argList.push(id);\n  }\n\n  if (typeof vertices[id] !== 'undefined') {\n    vertices[id].haveCallback = true;\n    funs.push(function () {\n      const elem = document.querySelector(`[id=\"${domId}\"]`);\n      if (elem !== null) {\n        elem.addEventListener(\n          'click',\n          function () {\n            utils.runFunc(functionName, ...argList);\n          },\n          false\n        );\n      }\n    });\n  }\n};\n\n/**\n * Called by parser when a link is found. Adds the URL to the vertex data.\n *\n * @param ids Comma separated list of ids\n * @param linkStr URL to create a link for\n * @param target\n */\nexport const setLink = function (ids, linkStr, target) {\n  ids.split(',').forEach(function (id) {\n    if (typeof vertices[id] !== 'undefined') {\n      vertices[id].link = utils.formatUrl(linkStr, config);\n      vertices[id].linkTarget = target;\n    }\n  });\n  setClass(ids, 'clickable');\n};\nexport const getTooltip = function (id) {\n  return tooltips[id];\n};\n\n/**\n * Called by parser when a click definition is found. Registers an event handler.\n *\n * @param ids Comma separated list of ids\n * @param functionName Function to be called on click\n * @param functionArgs\n */\nexport const setClickEvent = function (ids, functionName, functionArgs) {\n  ids.split(',').forEach(function (id) {\n    setClickFun(id, functionName, functionArgs);\n  });\n  setClass(ids, 'clickable');\n};\n\nexport const bindFunctions = function (element) {\n  funs.forEach(function (fun) {\n    fun(element);\n  });\n};\nexport const getDirection = function () {\n  return direction.trim();\n};\n/**\n * Retrieval function for fetching the found nodes after parsing has completed.\n *\n * @returns {{} | any | vertices}\n */\nexport const getVertices = function () {\n  return vertices;\n};\n\n/**\n * Retrieval function for fetching the found links after parsing has completed.\n *\n * @returns {{} | any | edges}\n */\nexport const getEdges = function () {\n  return edges;\n};\n\n/**\n * Retrieval function for fetching the found class definitions after parsing has completed.\n *\n * @returns {{} | any | classes}\n */\nexport const getClasses = function () {\n  return classes;\n};\n\nconst setupToolTips = function (element) {\n  let tooltipElem = select('.mermaidTooltip');\n  if ((tooltipElem._groups || tooltipElem)[0][0] === null) {\n    tooltipElem = select('body').append('div').attr('class', 'mermaidTooltip').style('opacity', 0);\n  }\n\n  const svg = select(element).select('svg');\n\n  const nodes = svg.selectAll('g.node');\n  nodes\n    .on('mouseover', function () {\n      const el = select(this);\n      const title = el.attr('title');\n\n      // Dont try to draw a tooltip if no data is provided\n      if (title === null) {\n        return;\n      }\n      const rect = this.getBoundingClientRect();\n\n      tooltipElem.transition().duration(200).style('opacity', '.9');\n      tooltipElem\n        .text(el.attr('title'))\n        .style('left', window.scrollX + rect.left + (rect.right - rect.left) / 2 + 'px')\n        .style('top', window.scrollY + rect.top - 14 + document.body.scrollTop + 'px');\n      el.classed('hover', true);\n    })\n    .on('mouseout', function () {\n      tooltipElem.transition().duration(500).style('opacity', 0);\n      const el = select(this);\n      el.classed('hover', false);\n    });\n};\nfuns.push(setupToolTips);\n\n/**\n * Clears the internal graph db so that a new graph can be parsed.\n *\n * @param ver\n */\nexport const clear = function (ver) {\n  vertices = {};\n  classes = {};\n  edges = [];\n  funs = [];\n  funs.push(setupToolTips);\n  subGraphs = [];\n  subGraphLookup = {};\n  subCount = 0;\n  tooltips = [];\n  firstGraphFlag = true;\n  version = ver || 'gen-1';\n  commonClear();\n};\nexport const setGen = (ver) => {\n  version = ver || 'gen-1';\n};\n/** @returns {string} */\nexport const defaultStyle = function () {\n  return 'fill:#ffa;stroke: #f66; stroke-width: 3px; stroke-dasharray: 5, 5;fill:#ffa;stroke: #666;';\n};\n\n/**\n * Clears the internal graph db so that a new graph can be parsed.\n *\n * @param _id\n * @param list\n * @param _title\n */\nexport const addSubGraph = function (_id, list, _title) {\n  // console.log('addSubGraph', _id, list, _title);\n  let id = _id.trim();\n  let title = _title;\n  if (_id === _title && _title.match(/\\s/)) {\n    id = undefined;\n  }\n  /** @param a */\n  function uniq(a) {\n    const prims = { boolean: {}, number: {}, string: {} };\n    const objs = [];\n\n    let dir; //  = unbdefined; direction.trim();\n    const nodeList = a.filter(function (item) {\n      const type = typeof item;\n      if (item.stmt && item.stmt === 'dir') {\n        dir = item.value;\n        return false;\n      }\n      if (item.trim() === '') {\n        return false;\n      }\n      if (type in prims) {\n        return prims[type].hasOwnProperty(item) ? false : (prims[type][item] = true); // eslint-disable-line\n      } else {\n        return objs.indexOf(item) >= 0 ? false : objs.push(item);\n      }\n    });\n    return { nodeList, dir };\n  }\n\n  let nodeList = [];\n\n  const { nodeList: nl, dir } = uniq(nodeList.concat.apply(nodeList, list));\n  nodeList = nl;\n  if (version === 'gen-1') {\n    log.warn('LOOKING UP');\n    for (let i = 0; i < nodeList.length; i++) {\n      nodeList[i] = lookUpDomId(nodeList[i]);\n    }\n  }\n\n  id = id || 'subGraph' + subCount;\n  // if (id[0].match(/\\d/)) id = lookUpDomId(id);\n  title = title || '';\n  title = sanitizeText(title);\n  subCount = subCount + 1;\n  const subGraph = { id: id, nodes: nodeList, title: title.trim(), classes: [], dir };\n\n  log.info('Adding', subGraph.id, subGraph.nodes, subGraph.dir);\n\n  /** Deletes an id from all subgraphs */\n  // const del = _id => {\n  //   subGraphs.forEach(sg => {\n  //     const pos = sg.nodes.indexOf(_id);\n  //     if (pos >= 0) {\n  //       sg.nodes.splice(pos, 1);\n  //     }\n  //   });\n  // };\n\n  // // Removes the members of this subgraph from any other subgraphs, a node only belong to one subgraph\n  // subGraph.nodes.forEach(_id => del(_id));\n\n  // Remove the members in the new subgraph if they already belong to another subgraph\n  subGraph.nodes = makeUniq(subGraph, subGraphs).nodes;\n  subGraphs.push(subGraph);\n  subGraphLookup[id] = subGraph;\n  return id;\n};\n\nconst getPosForId = function (id) {\n  for (let i = 0; i < subGraphs.length; i++) {\n    if (subGraphs[i].id === id) {\n      return i;\n    }\n  }\n  return -1;\n};\nlet secCount = -1;\nconst posCrossRef = [];\nconst indexNodes2 = function (id, pos) {\n  const nodes = subGraphs[pos].nodes;\n  secCount = secCount + 1;\n  if (secCount > 2000) {\n    return;\n  }\n  posCrossRef[secCount] = pos;\n  // Check if match\n  if (subGraphs[pos].id === id) {\n    return {\n      result: true,\n      count: 0,\n    };\n  }\n\n  let count = 0;\n  let posCount = 1;\n  while (count < nodes.length) {\n    const childPos = getPosForId(nodes[count]);\n    // Ignore regular nodes (pos will be -1)\n    if (childPos >= 0) {\n      const res = indexNodes2(id, childPos);\n      if (res.result) {\n        return {\n          result: true,\n          count: posCount + res.count,\n        };\n      } else {\n        posCount = posCount + res.count;\n      }\n    }\n    count = count + 1;\n  }\n\n  return {\n    result: false,\n    count: posCount,\n  };\n};\n\nexport const getDepthFirstPos = function (pos) {\n  return posCrossRef[pos];\n};\nexport const indexNodes = function () {\n  secCount = -1;\n  if (subGraphs.length > 0) {\n    indexNodes2('none', subGraphs.length - 1, 0);\n  }\n};\n\nexport const getSubGraphs = function () {\n  return subGraphs;\n};\n\nexport const firstGraph = () => {\n  if (firstGraphFlag) {\n    firstGraphFlag = false;\n    return true;\n  }\n  return false;\n};\n\nconst destructStartLink = (_str) => {\n  let str = _str.trim();\n  let type = 'arrow_open';\n\n  switch (str[0]) {\n    case '<':\n      type = 'arrow_point';\n      str = str.slice(1);\n      break;\n    case 'x':\n      type = 'arrow_cross';\n      str = str.slice(1);\n      break;\n    case 'o':\n      type = 'arrow_circle';\n      str = str.slice(1);\n      break;\n  }\n\n  let stroke = 'normal';\n\n  if (str.indexOf('=') !== -1) {\n    stroke = 'thick';\n  }\n\n  if (str.indexOf('.') !== -1) {\n    stroke = 'dotted';\n  }\n\n  return { type, stroke };\n};\n\nconst countChar = (char, str) => {\n  const length = str.length;\n  let count = 0;\n  for (let i = 0; i < length; ++i) {\n    if (str[i] === char) {\n      ++count;\n    }\n  }\n  return count;\n};\n\nconst destructEndLink = (_str) => {\n  const str = _str.trim();\n  let line = str.slice(0, -1);\n  let type = 'arrow_open';\n\n  switch (str.slice(-1)) {\n    case 'x':\n      type = 'arrow_cross';\n      if (str[0] === 'x') {\n        type = 'double_' + type;\n        line = line.slice(1);\n      }\n      break;\n    case '>':\n      type = 'arrow_point';\n      if (str[0] === '<') {\n        type = 'double_' + type;\n        line = line.slice(1);\n      }\n      break;\n    case 'o':\n      type = 'arrow_circle';\n      if (str[0] === 'o') {\n        type = 'double_' + type;\n        line = line.slice(1);\n      }\n      break;\n  }\n\n  let stroke = 'normal';\n  let length = line.length - 1;\n\n  if (line[0] === '=') {\n    stroke = 'thick';\n  }\n\n  let dots = countChar('.', line);\n\n  if (dots) {\n    stroke = 'dotted';\n    length = dots;\n  }\n\n  return { type, stroke, length };\n};\n\nconst destructLink = (_str, _startStr) => {\n  const info = destructEndLink(_str);\n  let startInfo;\n  if (_startStr) {\n    startInfo = destructStartLink(_startStr);\n\n    if (startInfo.stroke !== info.stroke) {\n      return { type: 'INVALID', stroke: 'INVALID' };\n    }\n\n    if (startInfo.type === 'arrow_open') {\n      // -- xyz -->  - take arrow type from ending\n      startInfo.type = info.type;\n    } else {\n      // x-- xyz -->  - not supported\n      if (startInfo.type !== info.type) return { type: 'INVALID', stroke: 'INVALID' };\n\n      startInfo.type = 'double_' + startInfo.type;\n    }\n\n    if (startInfo.type === 'double_arrow') {\n      startInfo.type = 'double_arrow_point';\n    }\n\n    startInfo.length = info.length;\n    return startInfo;\n  }\n\n  return info;\n};\n\n// Todo optimizer this by caching existing nodes\nconst exists = (allSgs, _id) => {\n  let res = false;\n  allSgs.forEach((sg) => {\n    const pos = sg.nodes.indexOf(_id);\n    if (pos >= 0) {\n      res = true;\n    }\n  });\n  return res;\n};\n/**\n * Deletes an id from all subgraphs\n *\n * @param sg\n * @param allSubgraphs\n */\nconst makeUniq = (sg, allSubgraphs) => {\n  const res = [];\n  sg.nodes.forEach((_id, pos) => {\n    if (!exists(allSubgraphs, _id)) {\n      res.push(sg.nodes[pos]);\n    }\n  });\n  return { nodes: res };\n};\n\nexport default {\n  parseDirective,\n  defaultConfig: () => configApi.defaultConfig.flowchart,\n  setTitle,\n  getTitle,\n  getAccDescription,\n  setAccDescription,\n  addVertex,\n  lookUpDomId,\n  addLink,\n  updateLinkInterpolate,\n  updateLink,\n  addClass,\n  setDirection,\n  setClass,\n  setTooltip,\n  getTooltip,\n  setClickEvent,\n  setLink,\n  bindFunctions,\n  getDirection,\n  getVertices,\n  getEdges,\n  getClasses,\n  clear,\n  setGen,\n  defaultStyle,\n  addSubGraph,\n  getDepthFirstPos,\n  indexNodes,\n  getSubGraphs,\n  destructLink,\n  lex: {\n    firstGraph,\n  },\n  exists,\n  makeUniq,\n};\n","import graphlib from 'graphlib';\nimport { select, curveLinear, selectAll } from 'd3';\n\nimport flowDb from './flowDb';\nimport flow from './parser/flow';\nimport { getConfig } from '../../config';\n\nimport { render } from '../../dagre-wrapper/index.js';\nimport addHtmlLabel from 'dagre-d3/lib/label/add-html-label.js';\nimport { log } from '../../logger';\nimport common, { evaluate } from '../common/common';\nimport { interpolateToCurve, getStylesFromArray, configureSvgSize } from '../../utils';\nimport addSVGAccessibilityFields from '../../accessibility';\n\nconst conf = {};\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n  for (let i = 0; i < keys.length; i++) {\n    conf[keys[i]] = cnf[keys[i]];\n  }\n};\n\n/**\n * Function that adds the vertices found during parsing to the graph to be rendered.\n *\n * @param vert Object containing the vertices.\n * @param g The graph that is to be drawn.\n * @param svgId\n * @param root\n * @param doc\n */\nexport const addVertices = function (vert, g, svgId, root, doc) {\n  const svg = root.select(`[id=\"${svgId}\"]`);\n  const keys = Object.keys(vert);\n\n  // Iterate through each item in the vertex object (containing all the vertices found) in the graph definition\n  keys.forEach(function (id) {\n    const vertex = vert[id];\n\n    /**\n     * Variable for storing the classes for the vertex\n     *\n     * @type {string}\n     */\n    let classStr = 'default';\n    if (vertex.classes.length > 0) {\n      classStr = vertex.classes.join(' ');\n    }\n\n    const styles = getStylesFromArray(vertex.styles);\n\n    // Use vertex id as text in the box if no text is provided by the graph definition\n    let vertexText = vertex.text !== undefined ? vertex.text : vertex.id;\n\n    // We create a SVG label, either by delegating to addHtmlLabel or manually\n    let vertexNode;\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      // TODO: addHtmlLabel accepts a labelStyle. Do we possibly have that?\n      const node = {\n        label: vertexText.replace(\n          /fa[lrsb]?:fa-[\\w-]+/g,\n          (s) => `<i class='${s.replace(':', ' ')}'></i>`\n        ),\n      };\n      vertexNode = addHtmlLabel(svg, node).node();\n      vertexNode.parentNode.removeChild(vertexNode);\n    } else {\n      const svgLabel = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n      svgLabel.setAttribute('style', styles.labelStyle.replace('color:', 'fill:'));\n\n      const rows = vertexText.split(common.lineBreakRegex);\n\n      for (let j = 0; j < rows.length; j++) {\n        const tspan = doc.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n        tspan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        tspan.setAttribute('dy', '1em');\n        tspan.setAttribute('x', '1');\n        tspan.textContent = rows[j];\n        svgLabel.appendChild(tspan);\n      }\n      vertexNode = svgLabel;\n    }\n\n    let radious = 0;\n    let _shape = '';\n    // Set the shape based parameters\n    switch (vertex.type) {\n      case 'round':\n        radious = 5;\n        _shape = 'rect';\n        break;\n      case 'square':\n        _shape = 'rect';\n        break;\n      case 'diamond':\n        _shape = 'question';\n        break;\n      case 'hexagon':\n        _shape = 'hexagon';\n        break;\n      case 'odd':\n        _shape = 'rect_left_inv_arrow';\n        break;\n      case 'lean_right':\n        _shape = 'lean_right';\n        break;\n      case 'lean_left':\n        _shape = 'lean_left';\n        break;\n      case 'trapezoid':\n        _shape = 'trapezoid';\n        break;\n      case 'inv_trapezoid':\n        _shape = 'inv_trapezoid';\n        break;\n      case 'odd_right':\n        _shape = 'rect_left_inv_arrow';\n        break;\n      case 'circle':\n        _shape = 'circle';\n        break;\n      case 'ellipse':\n        _shape = 'ellipse';\n        break;\n      case 'stadium':\n        _shape = 'stadium';\n        break;\n      case 'subroutine':\n        _shape = 'subroutine';\n        break;\n      case 'cylinder':\n        _shape = 'cylinder';\n        break;\n      case 'group':\n        _shape = 'rect';\n        break;\n      case 'doublecircle':\n        _shape = 'doublecircle';\n        break;\n      default:\n        _shape = 'rect';\n    }\n    // Add the node\n    g.setNode(vertex.id, {\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      labelText: vertexText,\n      rx: radious,\n      ry: radious,\n      class: classStr,\n      style: styles.style,\n      id: vertex.id,\n      link: vertex.link,\n      linkTarget: vertex.linkTarget,\n      tooltip: flowDb.getTooltip(vertex.id) || '',\n      domId: flowDb.lookUpDomId(vertex.id),\n      haveCallback: vertex.haveCallback,\n      width: vertex.type === 'group' ? 500 : undefined,\n      dir: vertex.dir,\n      type: vertex.type,\n      props: vertex.props,\n      padding: getConfig().flowchart.padding,\n    });\n\n    log.info('setNode', {\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      labelText: vertexText,\n      rx: radious,\n      ry: radious,\n      class: classStr,\n      style: styles.style,\n      id: vertex.id,\n      domId: flowDb.lookUpDomId(vertex.id),\n      width: vertex.type === 'group' ? 500 : undefined,\n      type: vertex.type,\n      dir: vertex.dir,\n      props: vertex.props,\n      padding: getConfig().flowchart.padding,\n    });\n  });\n};\n\n/**\n * Add edges to graph based on parsed graph definition\n *\n * @param {object} edges The edges to add to the graph\n * @param {object} g The graph object\n */\nexport const addEdges = function (edges, g) {\n  log.info('abc78 edges = ', edges);\n  let cnt = 0;\n  let linkIdCnt = {};\n\n  let defaultStyle;\n  let defaultLabelStyle;\n\n  if (typeof edges.defaultStyle !== 'undefined') {\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\n    defaultStyle = defaultStyles.style;\n    defaultLabelStyle = defaultStyles.labelStyle;\n  }\n\n  edges.forEach(function (edge) {\n    cnt++;\n\n    // Identify Link\n    var linkIdBase = 'L-' + edge.start + '-' + edge.end;\n    // count the links from+to the same node to give unique id\n    if (typeof linkIdCnt[linkIdBase] === 'undefined') {\n      linkIdCnt[linkIdBase] = 0;\n      log.info('abc78 new entry', linkIdBase, linkIdCnt[linkIdBase]);\n    } else {\n      linkIdCnt[linkIdBase]++;\n      log.info('abc78 new entry', linkIdBase, linkIdCnt[linkIdBase]);\n    }\n    let linkId = linkIdBase + '-' + linkIdCnt[linkIdBase];\n    log.info('abc78 new link id to be used is', linkIdBase, linkId, linkIdCnt[linkIdBase]);\n    var linkNameStart = 'LS-' + edge.start;\n    var linkNameEnd = 'LE-' + edge.end;\n\n    const edgeData = { style: '', labelStyle: '' };\n    edgeData.minlen = edge.length || 1;\n    //edgeData.id = 'id' + cnt;\n\n    // Set link type for rendering\n    if (edge.type === 'arrow_open') {\n      edgeData.arrowhead = 'none';\n    } else {\n      edgeData.arrowhead = 'normal';\n    }\n\n    // Check of arrow types, placed here in order not to break old rendering\n    edgeData.arrowTypeStart = 'arrow_open';\n    edgeData.arrowTypeEnd = 'arrow_open';\n\n    /* eslint-disable no-fallthrough */\n    switch (edge.type) {\n      case 'double_arrow_cross':\n        edgeData.arrowTypeStart = 'arrow_cross';\n      case 'arrow_cross':\n        edgeData.arrowTypeEnd = 'arrow_cross';\n        break;\n      case 'double_arrow_point':\n        edgeData.arrowTypeStart = 'arrow_point';\n      case 'arrow_point':\n        edgeData.arrowTypeEnd = 'arrow_point';\n        break;\n      case 'double_arrow_circle':\n        edgeData.arrowTypeStart = 'arrow_circle';\n      case 'arrow_circle':\n        edgeData.arrowTypeEnd = 'arrow_circle';\n        break;\n    }\n\n    let style = '';\n    let labelStyle = '';\n\n    switch (edge.stroke) {\n      case 'normal':\n        style = 'fill:none;';\n        if (typeof defaultStyle !== 'undefined') {\n          style = defaultStyle;\n        }\n        if (typeof defaultLabelStyle !== 'undefined') {\n          labelStyle = defaultLabelStyle;\n        }\n        edgeData.thickness = 'normal';\n        edgeData.pattern = 'solid';\n        break;\n      case 'dotted':\n        edgeData.thickness = 'normal';\n        edgeData.pattern = 'dotted';\n        edgeData.style = 'fill:none;stroke-width:2px;stroke-dasharray:3;';\n        break;\n      case 'thick':\n        edgeData.thickness = 'thick';\n        edgeData.pattern = 'solid';\n        edgeData.style = 'stroke-width: 3.5px;fill:none;';\n        break;\n    }\n    if (typeof edge.style !== 'undefined') {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    }\n\n    edgeData.style = edgeData.style += style;\n    edgeData.labelStyle = edgeData.labelStyle += labelStyle;\n\n    if (typeof edge.interpolate !== 'undefined') {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (typeof edges.defaultInterpolate !== 'undefined') {\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n\n    if (typeof edge.text === 'undefined') {\n      if (typeof edge.style !== 'undefined') {\n        edgeData.arrowheadStyle = 'fill: #333';\n      }\n    } else {\n      edgeData.arrowheadStyle = 'fill: #333';\n      edgeData.labelpos = 'c';\n    }\n    // if (evaluate(getConfig().flowchart.htmlLabels) && false) {\n    //   // eslint-disable-line\n    //   edgeData.labelType = 'html';\n    //   edgeData.label = `<span id=\"L-${linkId}\" class=\"edgeLabel L-${linkNameStart}' L-${linkNameEnd}\">${edge.text}</span>`;\n    // } else {\n    edgeData.labelType = 'text';\n    edgeData.label = edge.text.replace(common.lineBreakRegex, '\\n');\n\n    if (typeof edge.style === 'undefined') {\n      edgeData.style = edgeData.style || 'stroke: #333; stroke-width: 1.5px;fill:none;';\n    }\n\n    edgeData.labelStyle = edgeData.labelStyle.replace('color:', 'fill:');\n    // }\n\n    edgeData.id = linkId;\n    edgeData.classes = 'flowchart-link ' + linkNameStart + ' ' + linkNameEnd;\n\n    // Add the edge to the graph\n    g.setEdge(edge.start, edge.end, edgeData, cnt);\n  });\n};\n\n/**\n * Returns the all the styles from classDef statements in the graph definition.\n *\n * @param text\n * @returns {object} ClassDef styles\n */\nexport const getClasses = function (text) {\n  log.info('Extracting classes');\n  flowDb.clear();\n  const parser = flow.parser;\n  parser.yy = flowDb;\n\n  try {\n    // Parse the graph definition\n    parser.parse(text);\n  } catch (e) {\n    return;\n  }\n\n  return flowDb.getClasses();\n};\n\n/**\n * Draws a flowchart in the tag with id: id based on the graph definition in text.\n *\n * @param text\n * @param id\n */\n\nexport const draw = function (text, id) {\n  log.info('Drawing flowchart');\n  flowDb.clear();\n  flowDb.setGen('gen-2');\n  const parser = flow.parser;\n  parser.yy = flowDb;\n\n  // Parse the graph definition\n  // try {\n  parser.parse(text);\n  // } catch (err) {\n  // log.debug('Parsing failed');\n  // }\n\n  // Fetch the default direction, use TD if none was found\n  let dir = flowDb.getDirection();\n  if (typeof dir === 'undefined') {\n    dir = 'TD';\n  }\n\n  const conf = getConfig().flowchart;\n  const nodeSpacing = conf.nodeSpacing || 50;\n  const rankSpacing = conf.rankSpacing || 50;\n\n  const securityLevel = getConfig().securityLevel;\n  // Handle root and document for when rendering in sandbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  // Create the input mermaid.graph\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true,\n  })\n    .setGraph({\n      rankdir: dir,\n      nodesep: nodeSpacing,\n      ranksep: rankSpacing,\n      marginx: 8,\n      marginy: 8,\n    })\n    .setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n  let subG;\n  const subGraphs = flowDb.getSubGraphs();\n  log.info('Subgraphs - ', subGraphs);\n  for (let i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n    log.info('Subgraph - ', subG);\n    flowDb.addVertex(subG.id, subG.title, 'group', undefined, subG.classes, subG.dir);\n  }\n\n  // Fetch the vertices/nodes and edges/links from the parsed graph definition\n  const vert = flowDb.getVertices();\n\n  const edges = flowDb.getEdges();\n\n  log.info(edges);\n  let i = 0;\n  for (i = subGraphs.length - 1; i >= 0; i--) {\n    // for (let i = 0; i < subGraphs.length; i++) {\n    subG = subGraphs[i];\n\n    selectAll('cluster').append('text');\n\n    for (let j = 0; j < subG.nodes.length; j++) {\n      log.info('Setting up subgraphs', subG.nodes[j], subG.id);\n      g.setParent(subG.nodes[j], subG.id);\n    }\n  }\n  addVertices(vert, g, id, root, doc);\n  addEdges(edges, g);\n\n  // Add custom shapes\n  // flowChartShapes.addToRenderV2(addShape);\n\n  // Set up an SVG group so that we can translate the final graph.\n  const svg = root.select(`[id=\"${id}\"]`);\n  svg.attr('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n\n  // Adds title and description to the flow chart\n  addSVGAccessibilityFields(parser.yy, svg, id);\n\n  // Run the renderer. This is what draws the final graph.\n  const element = root.select('#' + id + ' g');\n  render(element, g, ['point', 'circle', 'cross'], 'flowchart', id);\n\n  const padding = conf.diagramPadding;\n  const svgBounds = svg.node().getBBox();\n  const width = svgBounds.width + padding * 2;\n  const height = svgBounds.height + padding * 2;\n  log.debug(\n    `new ViewBox 0 0 ${width} ${height}`,\n    `translate(${padding - g._label.marginx}, ${padding - g._label.marginy})`\n  );\n\n  configureSvgSize(svg, height, width, conf.useMaxWidth);\n\n  svg.attr('viewBox', `0 0 ${width} ${height}`);\n  svg\n    .select('g')\n    .attr('transform', `translate(${padding - g._label.marginx}, ${padding - svgBounds.y})`);\n\n  // Index nodes\n  flowDb.indexNodes('subGraph' + i);\n\n  // Add label rects for non html labels\n  if (!conf.htmlLabels) {\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (let k = 0; k < labels.length; k++) {\n      const label = labels[k];\n\n      // Get dimensions of label\n      const dim = label.getBBox();\n\n      const rect = doc.createElementNS('http://www.w3.org/2000/svg', 'rect');\n      rect.setAttribute('rx', 0);\n      rect.setAttribute('ry', 0);\n      rect.setAttribute('width', dim.width);\n      rect.setAttribute('height', dim.height);\n      // rect.setAttribute('style', 'fill:#e8e8e8;');\n\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n\n  // If node has a link, wrap it in an anchor SVG object.\n  const keys = Object.keys(vert);\n  keys.forEach(function (key) {\n    const vertex = vert[key];\n\n    if (vertex.link) {\n      const node = select('#' + id + ' [id=\"' + key + '\"]');\n      if (node) {\n        const link = doc.createElementNS('http://www.w3.org/2000/svg', 'a');\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'class', vertex.classes.join(' '));\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'href', vertex.link);\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'rel', 'noopener');\n        if (securityLevel === 'sandbox') {\n          link.setAttributeNS('http://www.w3.org/2000/svg', 'target', '_top');\n        } else if (vertex.linkTarget) {\n          link.setAttributeNS('http://www.w3.org/2000/svg', 'target', vertex.linkTarget);\n        }\n\n        const linkNode = node.insert(function () {\n          return link;\n        }, ':first-child');\n\n        const shape = node.select('.label-container');\n        if (shape) {\n          linkNode.append(function () {\n            return shape.node();\n          });\n        }\n\n        const label = node.select('.label');\n        if (label) {\n          linkNode.append(function () {\n            return label.node();\n          });\n        }\n      }\n    }\n  });\n};\n\nexport default {\n  setConf,\n  addVertices,\n  addEdges,\n  getClasses,\n  draw,\n};\n","import graphlib from 'graphlib';\nimport { select, curveLinear, selectAll } from 'd3';\n\nimport flowDb from './flowDb';\nimport flow from './parser/flow';\nimport { getConfig } from '../../config';\n\nimport dagreD3 from 'dagre-d3';\nimport addHtmlLabel from 'dagre-d3/lib/label/add-html-label.js';\nimport { log } from '../../logger';\nimport common, { evaluate } from '../common/common';\nimport { interpolateToCurve, getStylesFromArray, configureSvgSize } from '../../utils';\nimport flowChartShapes from './flowChartShapes';\nimport addSVGAccessibilityFields from '../../accessibility';\n\nconst conf = {};\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n  for (let i = 0; i < keys.length; i++) {\n    conf[keys[i]] = cnf[keys[i]];\n  }\n};\n\n/**\n * Function that adds the vertices found in the graph definition to the graph to be rendered.\n *\n * @param vert Object containing the vertices.\n * @param g The graph that is to be drawn.\n * @param svgId\n * @param root\n * @param doc\n * @param _doc\n */\nexport const addVertices = function (vert, g, svgId, root, _doc) {\n  const securityLevel = getConfig().securityLevel;\n\n  const svg = !root ? select(`[id=\"${svgId}\"]`) : root.select(`[id=\"${svgId}\"]`);\n  const doc = !_doc ? document : _doc;\n  const keys = Object.keys(vert);\n\n  // Iterate through each item in the vertex object (containing all the vertices found) in the graph definition\n  keys.forEach(function (id) {\n    const vertex = vert[id];\n\n    /**\n     * Variable for storing the classes for the vertex\n     *\n     * @type {string}\n     */\n    let classStr = 'default';\n    if (vertex.classes.length > 0) {\n      classStr = vertex.classes.join(' ');\n    }\n\n    const styles = getStylesFromArray(vertex.styles);\n\n    // Use vertex id as text in the box if no text is provided by the graph definition\n    let vertexText = vertex.text !== undefined ? vertex.text : vertex.id;\n\n    // We create a SVG label, either by delegating to addHtmlLabel or manually\n    let vertexNode;\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      // TODO: addHtmlLabel accepts a labelStyle. Do we possibly have that?\n      const node = {\n        label: vertexText.replace(\n          /fa[lrsb]?:fa-[\\w-]+/g,\n          (s) => `<i class='${s.replace(':', ' ')}'></i>`\n        ),\n      };\n      vertexNode = addHtmlLabel(svg, node).node();\n      vertexNode.parentNode.removeChild(vertexNode);\n    } else {\n      const svgLabel = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n      svgLabel.setAttribute('style', styles.labelStyle.replace('color:', 'fill:'));\n\n      const rows = vertexText.split(common.lineBreakRegex);\n\n      for (let j = 0; j < rows.length; j++) {\n        const tspan = doc.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n        tspan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        tspan.setAttribute('dy', '1em');\n        tspan.setAttribute('x', '1');\n        tspan.textContent = rows[j];\n        svgLabel.appendChild(tspan);\n      }\n      vertexNode = svgLabel;\n    }\n\n    let radious = 0;\n    let _shape = '';\n    // Set the shape based parameters\n    switch (vertex.type) {\n      case 'round':\n        radious = 5;\n        _shape = 'rect';\n        break;\n      case 'square':\n        _shape = 'rect';\n        break;\n      case 'diamond':\n        _shape = 'question';\n        break;\n      case 'hexagon':\n        _shape = 'hexagon';\n        break;\n      case 'odd':\n        _shape = 'rect_left_inv_arrow';\n        break;\n      case 'lean_right':\n        _shape = 'lean_right';\n        break;\n      case 'lean_left':\n        _shape = 'lean_left';\n        break;\n      case 'trapezoid':\n        _shape = 'trapezoid';\n        break;\n      case 'inv_trapezoid':\n        _shape = 'inv_trapezoid';\n        break;\n      case 'odd_right':\n        _shape = 'rect_left_inv_arrow';\n        break;\n      case 'circle':\n        _shape = 'circle';\n        break;\n      case 'ellipse':\n        _shape = 'ellipse';\n        break;\n      case 'stadium':\n        _shape = 'stadium';\n        break;\n      case 'subroutine':\n        _shape = 'subroutine';\n        break;\n      case 'cylinder':\n        _shape = 'cylinder';\n        break;\n      case 'group':\n        _shape = 'rect';\n        break;\n      default:\n        _shape = 'rect';\n    }\n    // Add the node\n    log.warn('Adding node', vertex.id, vertex.domId);\n    g.setNode(flowDb.lookUpDomId(vertex.id), {\n      labelType: 'svg',\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      label: vertexNode,\n      rx: radious,\n      ry: radious,\n      class: classStr,\n      style: styles.style,\n      id: flowDb.lookUpDomId(vertex.id),\n    });\n  });\n};\n\n/**\n * Add edges to graph based on parsed graph definition\n *\n * @param {object} edges The edges to add to the graph\n * @param {object} g The graph object\n */\nexport const addEdges = function (edges, g) {\n  let cnt = 0;\n\n  let defaultStyle;\n  let defaultLabelStyle;\n\n  if (typeof edges.defaultStyle !== 'undefined') {\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\n    defaultStyle = defaultStyles.style;\n    defaultLabelStyle = defaultStyles.labelStyle;\n  }\n\n  edges.forEach(function (edge) {\n    cnt++;\n\n    // Identify Link\n    var linkId = 'L-' + edge.start + '-' + edge.end;\n    var linkNameStart = 'LS-' + edge.start;\n    var linkNameEnd = 'LE-' + edge.end;\n\n    const edgeData = {};\n\n    // Set link type for rendering\n    if (edge.type === 'arrow_open') {\n      edgeData.arrowhead = 'none';\n    } else {\n      edgeData.arrowhead = 'normal';\n    }\n\n    let style = '';\n    let labelStyle = '';\n\n    if (typeof edge.style !== 'undefined') {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    } else {\n      switch (edge.stroke) {\n        case 'normal':\n          style = 'fill:none';\n          if (typeof defaultStyle !== 'undefined') {\n            style = defaultStyle;\n          }\n          if (typeof defaultLabelStyle !== 'undefined') {\n            labelStyle = defaultLabelStyle;\n          }\n          break;\n        case 'dotted':\n          style = 'fill:none;stroke-width:2px;stroke-dasharray:3;';\n          break;\n        case 'thick':\n          style = ' stroke-width: 3.5px;fill:none';\n          break;\n      }\n    }\n\n    edgeData.style = style;\n    edgeData.labelStyle = labelStyle;\n\n    if (typeof edge.interpolate !== 'undefined') {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (typeof edges.defaultInterpolate !== 'undefined') {\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n\n    if (typeof edge.text === 'undefined') {\n      if (typeof edge.style !== 'undefined') {\n        edgeData.arrowheadStyle = 'fill: #333';\n      }\n    } else {\n      edgeData.arrowheadStyle = 'fill: #333';\n      edgeData.labelpos = 'c';\n\n      if (evaluate(getConfig().flowchart.htmlLabels)) {\n        edgeData.labelType = 'html';\n        edgeData.label = `<span id=\"L-${linkId}\" class=\"edgeLabel L-${linkNameStart}' L-${linkNameEnd}\" style=\"${\n          edgeData.labelStyle\n        }\">${edge.text.replace(\n          /fa[lrsb]?:fa-[\\w-]+/g,\n          (s) => `<i class='${s.replace(':', ' ')}'></i>`\n        )}</span>`;\n      } else {\n        edgeData.labelType = 'text';\n        edgeData.label = edge.text.replace(common.lineBreakRegex, '\\n');\n\n        if (typeof edge.style === 'undefined') {\n          edgeData.style = edgeData.style || 'stroke: #333; stroke-width: 1.5px;fill:none';\n        }\n\n        edgeData.labelStyle = edgeData.labelStyle.replace('color:', 'fill:');\n      }\n    }\n\n    edgeData.id = linkId;\n    edgeData.class = linkNameStart + ' ' + linkNameEnd;\n    edgeData.minlen = edge.length || 1;\n\n    // Add the edge to the graph\n    g.setEdge(flowDb.lookUpDomId(edge.start), flowDb.lookUpDomId(edge.end), edgeData, cnt);\n  });\n};\n\n/**\n * Returns the all the styles from classDef statements in the graph definition.\n *\n * @param text\n * @returns {object} ClassDef styles\n */\nexport const getClasses = function (text) {\n  log.info('Extracting classes');\n  flowDb.clear();\n  try {\n    const parser = flow.parser;\n    parser.yy = flowDb;\n\n    // Parse the graph definition\n    parser.parse(text);\n    return flowDb.getClasses();\n  } catch (e) {\n    return;\n  }\n};\n\n/**\n * Draws a flowchart in the tag with id: id based on the graph definition in text.\n *\n * @param text\n * @param id\n */\nexport const draw = function (text, id) {\n  log.info('Drawing flowchart');\n  flowDb.clear();\n  flowDb.setGen('gen-1');\n  const parser = flow.parser;\n  parser.yy = flowDb;\n\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  // Parse the graph definition\n  // try {\n  parser.parse(text);\n  // } catch (err) {\n  // log.debug('Parsing failed');\n  // }\n\n  // Fetch the default direction, use TD if none was found\n  let dir = flowDb.getDirection();\n  if (typeof dir === 'undefined') {\n    dir = 'TD';\n  }\n\n  const conf = getConfig().flowchart;\n  const nodeSpacing = conf.nodeSpacing || 50;\n  const rankSpacing = conf.rankSpacing || 50;\n\n  // Create the input mermaid.graph\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true,\n  })\n    .setGraph({\n      rankdir: dir,\n      nodesep: nodeSpacing,\n      ranksep: rankSpacing,\n      marginx: 8,\n      marginy: 8,\n    })\n    .setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n  let subG;\n  const subGraphs = flowDb.getSubGraphs();\n  for (let i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n    flowDb.addVertex(subG.id, subG.title, 'group', undefined, subG.classes);\n  }\n\n  // Fetch the vertices/nodes and edges/links from the parsed graph definition\n  const vert = flowDb.getVertices();\n  log.warn('Get vertices', vert);\n\n  const edges = flowDb.getEdges();\n\n  let i = 0;\n  for (i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n\n    selectAll('cluster').append('text');\n\n    for (let j = 0; j < subG.nodes.length; j++) {\n      log.warn(\n        'Setting subgraph',\n        subG.nodes[j],\n        flowDb.lookUpDomId(subG.nodes[j]),\n        flowDb.lookUpDomId(subG.id)\n      );\n      g.setParent(flowDb.lookUpDomId(subG.nodes[j]), flowDb.lookUpDomId(subG.id));\n    }\n  }\n  addVertices(vert, g, id, root, doc);\n  addEdges(edges, g);\n\n  // Create the renderer\n  const Render = dagreD3.render;\n  const render = new Render();\n\n  // Add custom shapes\n  flowChartShapes.addToRender(render);\n\n  // Add our custom arrow - an empty arrowhead\n  render.arrows().none = function normal(parent, id, edge, type) {\n    const marker = parent\n      .append('marker')\n      .attr('id', id)\n      .attr('viewBox', '0 0 10 10')\n      .attr('refX', 9)\n      .attr('refY', 5)\n      .attr('markerUnits', 'strokeWidth')\n      .attr('markerWidth', 8)\n      .attr('markerHeight', 6)\n      .attr('orient', 'auto');\n\n    const path = marker.append('path').attr('d', 'M 0 0 L 0 0 L 0 0 z');\n    dagreD3.util.applyStyle(path, edge[type + 'Style']);\n  };\n\n  // Override normal arrowhead defined in d3. Remove style & add class to allow css styling.\n  render.arrows().normal = function normal(parent, id) {\n    const marker = parent\n      .append('marker')\n      .attr('id', id)\n      .attr('viewBox', '0 0 10 10')\n      .attr('refX', 9)\n      .attr('refY', 5)\n      .attr('markerUnits', 'strokeWidth')\n      .attr('markerWidth', 8)\n      .attr('markerHeight', 6)\n      .attr('orient', 'auto');\n\n    marker\n      .append('path')\n      .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n      .attr('class', 'arrowheadPath')\n      .style('stroke-width', 1)\n      .style('stroke-dasharray', '1,0');\n  };\n\n  // Set up an SVG group so that we can translate the final graph.\n  const svg = root.select(`[id=\"${id}\"]`);\n  svg.attr('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n\n  log.warn(g);\n\n  // Adds title and description to the flow chart\n  addSVGAccessibilityFields(parser.yy, svg, id);\n\n  // Run the renderer. This is what draws the final graph.\n  const element = root.select('#' + id + ' g');\n  render(element, g);\n\n  element.selectAll('g.node').attr('title', function () {\n    return flowDb.getTooltip(this.id);\n  });\n\n  const padding = conf.diagramPadding;\n  const svgBounds = svg.node().getBBox();\n  const width = svgBounds.width + padding * 2;\n  const height = svgBounds.height + padding * 2;\n\n  configureSvgSize(svg, height, width, conf.useMaxWidth);\n\n  // Ensure the viewBox includes the whole svgBounds area with extra space for padding\n  const vBox = `${svgBounds.x - padding} ${svgBounds.y - padding} ${width} ${height}`;\n  log.debug(`viewBox ${vBox}`);\n  svg.attr('viewBox', vBox);\n\n  // Index nodes\n  flowDb.indexNodes('subGraph' + i);\n\n  // reposition labels\n  for (i = 0; i < subGraphs.length; i++) {\n    subG = subGraphs[i];\n    if (subG.title !== 'undefined') {\n      const clusterRects = doc.querySelectorAll(\n        '#' + id + ' [id=\"' + flowDb.lookUpDomId(subG.id) + '\"] rect'\n      );\n      const clusterEl = doc.querySelectorAll(\n        '#' + id + ' [id=\"' + flowDb.lookUpDomId(subG.id) + '\"]'\n      );\n\n      const xPos = clusterRects[0].x.baseVal.value;\n      const yPos = clusterRects[0].y.baseVal.value;\n      const width = clusterRects[0].width.baseVal.value;\n      const cluster = select(clusterEl[0]);\n      const te = cluster.select('.label');\n      te.attr('transform', `translate(${xPos + width / 2}, ${yPos + 14})`);\n      te.attr('id', id + 'Text');\n\n      for (let j = 0; j < subG.classes.length; j++) {\n        clusterEl[0].classList.add(subG.classes[j]);\n      }\n    }\n  }\n\n  // Add label rects for non html labels\n  if (!evaluate(conf.htmlLabels) || true) { // eslint-disable-line\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (let k = 0; k < labels.length; k++) {\n      const label = labels[k];\n\n      // Get dimensions of label\n      const dim = label.getBBox();\n\n      const rect = doc.createElementNS('http://www.w3.org/2000/svg', 'rect');\n      rect.setAttribute('rx', 0);\n      rect.setAttribute('ry', 0);\n      rect.setAttribute('width', dim.width);\n      rect.setAttribute('height', dim.height);\n      // rect.setAttribute('style', 'fill:#e8e8e8;');\n\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n\n  // If node has a link, wrap it in an anchor SVG object.\n  const keys = Object.keys(vert);\n  keys.forEach(function (key) {\n    const vertex = vert[key];\n\n    if (vertex.link) {\n      const node = root.select('#' + id + ' [id=\"' + flowDb.lookUpDomId(key) + '\"]');\n      if (node) {\n        const link = doc.createElementNS('http://www.w3.org/2000/svg', 'a');\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'class', vertex.classes.join(' '));\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'href', vertex.link);\n        link.setAttributeNS('http://www.w3.org/2000/svg', 'rel', 'noopener');\n        if (securityLevel === 'sandbox') {\n          link.setAttributeNS('http://www.w3.org/2000/svg', 'target', '_top');\n        } else if (vertex.linkTarget) {\n          link.setAttributeNS('http://www.w3.org/2000/svg', 'target', vertex.linkTarget);\n        }\n\n        const linkNode = node.insert(function () {\n          return link;\n        }, ':first-child');\n\n        const shape = node.select('.label-container');\n        if (shape) {\n          linkNode.append(function () {\n            return shape.node();\n          });\n        }\n\n        const label = node.select('.label');\n        if (label) {\n          linkNode.append(function () {\n            return label.node();\n          });\n        }\n      }\n    }\n  });\n};\n\nexport default {\n  setConf,\n  addVertices,\n  addEdges,\n  getClasses,\n  draw,\n};\n","/**\n * Returns the styles given options\n *\n * @param {{\n *   fontFamily: string;\n *   nodeTextColor: string;\n *   textColor: string;\n *   titleColor: string;\n *   mainBkg: string;\n *   nodeBorder: string;\n *   arrowheadColor: string;\n *   lineColor: string;\n *   edgeLabelBackground: string;\n *   clusterBkg: string;\n *   clusterBorder: string;\n *   tertiaryColor: string;\n *   border2: string;\n * }} options\n *   The options for the styles\n * @returns {string} The resulting styles\n */\nconst getStyles = (options) =>\n  `.label {\n    font-family: ${options.fontFamily};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n  .cluster-label text {\n    fill: ${options.titleColor};\n  }\n  .cluster-label span {\n    color: ${options.titleColor};\n  }\n\n  .label text,span {\n    fill: ${options.nodeTextColor || options.textColor};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n\n  .node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n    stroke-width: 1px;\n  }\n\n  .node .label {\n    text-align: center;\n  }\n  .node.clickable {\n    cursor: pointer;\n  }\n\n  .arrowheadPath {\n    fill: ${options.arrowheadColor};\n  }\n\n  .edgePath .path {\n    stroke: ${options.lineColor};\n    stroke-width: 2.0px;\n  }\n\n  .flowchart-link {\n    stroke: ${options.lineColor};\n    fill: none;\n  }\n\n  .edgeLabel {\n    background-color: ${options.edgeLabelBackground};\n    rect {\n      opacity: 0.5;\n      background-color: ${options.edgeLabelBackground};\n      fill: ${options.edgeLabelBackground};\n    }\n    text-align: center;\n  }\n\n  .cluster rect {\n    fill: ${options.clusterBkg};\n    stroke: ${options.clusterBorder};\n    stroke-width: 1px;\n  }\n\n  .cluster text {\n    fill: ${options.titleColor};\n  }\n\n  .cluster span {\n    color: ${options.titleColor};\n  }\n  /* .cluster div {\n    color: ${options.titleColor};\n  } */\n\n  div.mermaidTooltip {\n    position: absolute;\n    text-align: center;\n    max-width: 200px;\n    padding: 2px;\n    font-family: ${options.fontFamily};\n    font-size: 12px;\n    background: ${options.tertiaryColor};\n    border: 1px solid ${options.border2};\n    border-radius: 2px;\n    pointer-events: none;\n    z-index: 100;\n  }\n`;\n\nexport default getStyles;\n","import moment from 'moment-mini';\nimport { sanitizeUrl } from '@braintree/sanitize-url';\nimport { log } from '../../logger';\nimport * as configApi from '../../config';\nimport utils from '../../utils';\nimport mermaidAPI from '../../mermaidAPI';\nimport common from '../common/common';\nimport {\n  setTitle,\n  getTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n} from '../../commonDb';\n\nlet dateFormat = '';\nlet axisFormat = '';\nlet todayMarker = '';\nlet includes = [];\nlet excludes = [];\nlet links = {};\nlet title = '';\nlet accDescription = '';\nlet sections = [];\nlet tasks = [];\nlet currentSection = '';\nconst tags = ['active', 'done', 'crit', 'milestone'];\nlet funs = [];\nlet inclusiveEndDates = false;\nlet topAxis = false;\n\n// The serial order of the task in the script\nlet lastOrder = 0;\n\nconst sanitizeText = function (txt) {\n  return common.sanitizeText(txt, configApi.getConfig());\n};\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\nexport const clear = function () {\n  sections = [];\n  tasks = [];\n  currentSection = '';\n  funs = [];\n  title = '';\n  taskCnt = 0;\n  lastTask = undefined;\n  lastTaskID = undefined;\n  rawTasks = [];\n  dateFormat = '';\n  axisFormat = '';\n  todayMarker = '';\n  includes = [];\n  excludes = [];\n  inclusiveEndDates = false;\n  topAxis = false;\n  lastOrder = 0;\n  links = {};\n  commonClear();\n};\n\nexport const setAxisFormat = function (txt) {\n  axisFormat = txt;\n};\n\nexport const getAxisFormat = function () {\n  return axisFormat;\n};\n\nexport const setTodayMarker = function (txt) {\n  todayMarker = txt;\n};\n\nexport const getTodayMarker = function () {\n  return todayMarker;\n};\n\nexport const setDateFormat = function (txt) {\n  dateFormat = txt;\n};\n\nexport const enableInclusiveEndDates = function () {\n  inclusiveEndDates = true;\n};\n\nexport const endDatesAreInclusive = function () {\n  return inclusiveEndDates;\n};\n\nexport const enableTopAxis = function () {\n  topAxis = true;\n};\n\nexport const topAxisEnabled = function () {\n  return topAxis;\n};\n\nexport const getDateFormat = function () {\n  return dateFormat;\n};\n\nexport const setIncludes = function (txt) {\n  includes = txt.toLowerCase().split(/[\\s,]+/);\n};\n\nexport const getIncludes = function () {\n  return includes;\n};\nexport const setExcludes = function (txt) {\n  excludes = txt.toLowerCase().split(/[\\s,]+/);\n};\n\nexport const getExcludes = function () {\n  return excludes;\n};\n\nexport const getLinks = function () {\n  return links;\n};\n\nexport const addSection = function (txt) {\n  currentSection = txt;\n  sections.push(txt);\n};\n\nexport const getSections = function () {\n  return sections;\n};\n\nexport const getTasks = function () {\n  let allItemsPricessed = compileTasks();\n  const maxDepth = 10;\n  let iterationCount = 0;\n  while (!allItemsPricessed && iterationCount < maxDepth) {\n    allItemsPricessed = compileTasks();\n    iterationCount++;\n  }\n\n  tasks = rawTasks;\n\n  return tasks;\n};\n\nexport const isInvalidDate = function (date, dateFormat, excludes, includes) {\n  if (includes.indexOf(date.format(dateFormat.trim())) >= 0) {\n    return false;\n  }\n  if (date.isoWeekday() >= 6 && excludes.indexOf('weekends') >= 0) {\n    return true;\n  }\n  if (excludes.indexOf(date.format('dddd').toLowerCase()) >= 0) {\n    return true;\n  }\n  return excludes.indexOf(date.format(dateFormat.trim())) >= 0;\n};\n\nconst checkTaskDates = function (task, dateFormat, excludes, includes) {\n  if (!excludes.length || task.manualEndTime) return;\n  let startTime = moment(task.startTime, dateFormat, true);\n  startTime.add(1, 'd');\n  let endTime = moment(task.endTime, dateFormat, true);\n  let renderEndTime = fixTaskDates(startTime, endTime, dateFormat, excludes, includes);\n  task.endTime = endTime.toDate();\n  task.renderEndTime = renderEndTime;\n};\n\nconst fixTaskDates = function (startTime, endTime, dateFormat, excludes, includes) {\n  let invalid = false;\n  let renderEndTime = null;\n  while (startTime <= endTime) {\n    if (!invalid) {\n      renderEndTime = endTime.toDate();\n    }\n    invalid = isInvalidDate(startTime, dateFormat, excludes, includes);\n    if (invalid) {\n      endTime.add(1, 'd');\n    }\n    startTime.add(1, 'd');\n  }\n  return renderEndTime;\n};\n\nconst getStartDate = function (prevTime, dateFormat, str) {\n  str = str.trim();\n\n  // Test for after\n  const re = /^after\\s+([\\d\\w- ]+)/;\n  const afterStatement = re.exec(str.trim());\n\n  if (afterStatement !== null) {\n    // check all after ids and take the latest\n    let latestEndingTask = null;\n    afterStatement[1].split(' ').forEach(function (id) {\n      let task = findTaskById(id);\n      if (typeof task !== 'undefined') {\n        if (!latestEndingTask) {\n          latestEndingTask = task;\n        } else {\n          if (task.endTime > latestEndingTask.endTime) {\n            latestEndingTask = task;\n          }\n        }\n      }\n    });\n\n    if (!latestEndingTask) {\n      const dt = new Date();\n      dt.setHours(0, 0, 0, 0);\n      return dt;\n    } else {\n      return latestEndingTask.endTime;\n    }\n  }\n\n  // Check for actual date set\n  let mDate = moment(str, dateFormat.trim(), true);\n  if (mDate.isValid()) {\n    return mDate.toDate();\n  } else {\n    log.debug('Invalid date:' + str);\n    log.debug('With date format:' + dateFormat.trim());\n  }\n\n  // Default date - now\n  return new Date();\n};\n\nconst durationToDate = function (durationStatement, relativeTime) {\n  if (durationStatement !== null) {\n    switch (durationStatement[2]) {\n      case 's':\n        relativeTime.add(durationStatement[1], 'seconds');\n        break;\n      case 'm':\n        relativeTime.add(durationStatement[1], 'minutes');\n        break;\n      case 'h':\n        relativeTime.add(durationStatement[1], 'hours');\n        break;\n      case 'd':\n        relativeTime.add(durationStatement[1], 'days');\n        break;\n      case 'w':\n        relativeTime.add(durationStatement[1], 'weeks');\n        break;\n    }\n  }\n  // Default date - now\n  return relativeTime.toDate();\n};\n\nconst getEndDate = function (prevTime, dateFormat, str, inclusive) {\n  inclusive = inclusive || false;\n  str = str.trim();\n\n  // Check for actual date\n  let mDate = moment(str, dateFormat.trim(), true);\n  if (mDate.isValid()) {\n    if (inclusive) {\n      mDate.add(1, 'd');\n    }\n    return mDate.toDate();\n  }\n\n  return durationToDate(/^([\\d]+)([wdhms])/.exec(str.trim()), moment(prevTime));\n};\n\nlet taskCnt = 0;\nconst parseId = function (idStr) {\n  if (typeof idStr === 'undefined') {\n    taskCnt = taskCnt + 1;\n    return 'task' + taskCnt;\n  }\n  return idStr;\n};\n// id, startDate, endDate\n// id, startDate, length\n// id, after x, endDate\n// id, after x, length\n// startDate, endDate\n// startDate, length\n// after x, endDate\n// after x, length\n// endDate\n// length\n\nconst compileData = function (prevTask, dataStr) {\n  let ds;\n\n  if (dataStr.substr(0, 1) === ':') {\n    ds = dataStr.substr(1, dataStr.length);\n  } else {\n    ds = dataStr;\n  }\n\n  const data = ds.split(',');\n\n  const task = {};\n\n  // Get tags like active, done, crit and milestone\n  getTaskTags(data, task, tags);\n\n  for (let i = 0; i < data.length; i++) {\n    data[i] = data[i].trim();\n  }\n\n  let endTimeData = '';\n  switch (data.length) {\n    case 1:\n      task.id = parseId();\n      task.startTime = prevTask.endTime;\n      endTimeData = data[0];\n      break;\n    case 2:\n      task.id = parseId();\n      task.startTime = getStartDate(undefined, dateFormat, data[0]);\n      endTimeData = data[1];\n      break;\n    case 3:\n      task.id = parseId(data[0]);\n      task.startTime = getStartDate(undefined, dateFormat, data[1]);\n      endTimeData = data[2];\n      break;\n    default:\n  }\n\n  if (endTimeData) {\n    task.endTime = getEndDate(task.startTime, dateFormat, endTimeData, inclusiveEndDates);\n    task.manualEndTime = moment(endTimeData, 'YYYY-MM-DD', true).isValid();\n    checkTaskDates(task, dateFormat, excludes, includes);\n  }\n\n  return task;\n};\n\nconst parseData = function (prevTaskId, dataStr) {\n  let ds;\n  if (dataStr.substr(0, 1) === ':') {\n    ds = dataStr.substr(1, dataStr.length);\n  } else {\n    ds = dataStr;\n  }\n\n  const data = ds.split(',');\n\n  const task = {};\n\n  // Get tags like active, done, crit and milestone\n  getTaskTags(data, task, tags);\n\n  for (let i = 0; i < data.length; i++) {\n    data[i] = data[i].trim();\n  }\n\n  switch (data.length) {\n    case 1:\n      task.id = parseId();\n      task.startTime = {\n        type: 'prevTaskEnd',\n        id: prevTaskId,\n      };\n      task.endTime = {\n        data: data[0],\n      };\n      break;\n    case 2:\n      task.id = parseId();\n      task.startTime = {\n        type: 'getStartDate',\n        startData: data[0],\n      };\n      task.endTime = {\n        data: data[1],\n      };\n      break;\n    case 3:\n      task.id = parseId(data[0]);\n      task.startTime = {\n        type: 'getStartDate',\n        startData: data[1],\n      };\n      task.endTime = {\n        data: data[2],\n      };\n      break;\n    default:\n  }\n\n  return task;\n};\n\nlet lastTask;\nlet lastTaskID;\nlet rawTasks = [];\nconst taskDb = {};\nexport const addTask = function (descr, data) {\n  const rawTask = {\n    section: currentSection,\n    type: currentSection,\n    processed: false,\n    manualEndTime: false,\n    renderEndTime: null,\n    raw: { data: data },\n    task: descr,\n    classes: [],\n  };\n  const taskInfo = parseData(lastTaskID, data);\n  rawTask.raw.startTime = taskInfo.startTime;\n  rawTask.raw.endTime = taskInfo.endTime;\n  rawTask.id = taskInfo.id;\n  rawTask.prevTaskId = lastTaskID;\n  rawTask.active = taskInfo.active;\n  rawTask.done = taskInfo.done;\n  rawTask.crit = taskInfo.crit;\n  rawTask.milestone = taskInfo.milestone;\n  rawTask.order = lastOrder;\n\n  lastOrder++;\n\n  const pos = rawTasks.push(rawTask);\n\n  lastTaskID = rawTask.id;\n  // Store cross ref\n  taskDb[rawTask.id] = pos - 1;\n};\n\nexport const findTaskById = function (id) {\n  const pos = taskDb[id];\n  return rawTasks[pos];\n};\n\nexport const addTaskOrg = function (descr, data) {\n  const newTask = {\n    section: currentSection,\n    type: currentSection,\n    description: descr,\n    task: descr,\n    classes: [],\n  };\n  const taskInfo = compileData(lastTask, data);\n  newTask.startTime = taskInfo.startTime;\n  newTask.endTime = taskInfo.endTime;\n  newTask.id = taskInfo.id;\n  newTask.active = taskInfo.active;\n  newTask.done = taskInfo.done;\n  newTask.crit = taskInfo.crit;\n  newTask.milestone = taskInfo.milestone;\n  lastTask = newTask;\n  tasks.push(newTask);\n};\n\nconst compileTasks = function () {\n  const compileTask = function (pos) {\n    const task = rawTasks[pos];\n    let startTime = '';\n    switch (rawTasks[pos].raw.startTime.type) {\n      case 'prevTaskEnd': {\n        const prevTask = findTaskById(task.prevTaskId);\n        task.startTime = prevTask.endTime;\n        break;\n      }\n      case 'getStartDate':\n        startTime = getStartDate(undefined, dateFormat, rawTasks[pos].raw.startTime.startData);\n        if (startTime) {\n          rawTasks[pos].startTime = startTime;\n        }\n        break;\n    }\n\n    if (rawTasks[pos].startTime) {\n      rawTasks[pos].endTime = getEndDate(\n        rawTasks[pos].startTime,\n        dateFormat,\n        rawTasks[pos].raw.endTime.data,\n        inclusiveEndDates\n      );\n      if (rawTasks[pos].endTime) {\n        rawTasks[pos].processed = true;\n        rawTasks[pos].manualEndTime = moment(\n          rawTasks[pos].raw.endTime.data,\n          'YYYY-MM-DD',\n          true\n        ).isValid();\n        checkTaskDates(rawTasks[pos], dateFormat, excludes, includes);\n      }\n    }\n\n    return rawTasks[pos].processed;\n  };\n\n  let allProcessed = true;\n  for (let i = 0; i < rawTasks.length; i++) {\n    compileTask(i);\n\n    allProcessed = allProcessed && rawTasks[i].processed;\n  }\n  return allProcessed;\n};\n\n/**\n * Called by parser when a link is found. Adds the URL to the vertex data.\n *\n * @param ids Comma separated list of ids\n * @param _linkStr URL to create a link for\n */\nexport const setLink = function (ids, _linkStr) {\n  let linkStr = _linkStr;\n  if (configApi.getConfig().securityLevel !== 'loose') {\n    linkStr = sanitizeUrl(_linkStr);\n  }\n  ids.split(',').forEach(function (id) {\n    let rawTask = findTaskById(id);\n    if (typeof rawTask !== 'undefined') {\n      pushFun(id, () => {\n        window.open(linkStr, '_self');\n      });\n      links[id] = linkStr;\n    }\n  });\n  setClass(ids, 'clickable');\n};\n\n/**\n * Called by parser when a special node is found, e.g. a clickable element.\n *\n * @param ids Comma separated list of ids\n * @param className Class to add\n */\nexport const setClass = function (ids, className) {\n  ids.split(',').forEach(function (id) {\n    let rawTask = findTaskById(id);\n    if (typeof rawTask !== 'undefined') {\n      rawTask.classes.push(className);\n    }\n  });\n};\n\nconst setClickFun = function (id, functionName, functionArgs) {\n  if (configApi.getConfig().securityLevel !== 'loose') {\n    return;\n  }\n  if (typeof functionName === 'undefined') {\n    return;\n  }\n\n  let argList = [];\n  if (typeof functionArgs === 'string') {\n    /* Splits functionArgs by ',', ignoring all ',' in double quoted strings */\n    argList = functionArgs.split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n    for (let i = 0; i < argList.length; i++) {\n      let item = argList[i].trim();\n      /* Removes all double quotes at the start and end of an argument */\n      /* This preserves all starting and ending whitespace inside */\n      if (item.charAt(0) === '\"' && item.charAt(item.length - 1) === '\"') {\n        item = item.substr(1, item.length - 2);\n      }\n      argList[i] = item;\n    }\n  }\n\n  /* if no arguments passed into callback, default to passing in id */\n  if (argList.length === 0) {\n    argList.push(id);\n  }\n\n  let rawTask = findTaskById(id);\n  if (typeof rawTask !== 'undefined') {\n    pushFun(id, () => {\n      utils.runFunc(functionName, ...argList);\n    });\n  }\n};\n\n/**\n * The callbackFunction is executed in a click event bound to the task with the specified id or the\n * task's assigned text\n *\n * @param id The task's id\n * @param callbackFunction A function to be executed when clicked on the task or the task's text\n */\nconst pushFun = function (id, callbackFunction) {\n  funs.push(function () {\n    // const elem = d3.select(element).select(`[id=\"${id}\"]`)\n    const elem = document.querySelector(`[id=\"${id}\"]`);\n    if (elem !== null) {\n      elem.addEventListener('click', function () {\n        callbackFunction();\n      });\n    }\n  });\n  funs.push(function () {\n    // const elem = d3.select(element).select(`[id=\"${id}-text\"]`)\n    const elem = document.querySelector(`[id=\"${id}-text\"]`);\n    if (elem !== null) {\n      elem.addEventListener('click', function () {\n        callbackFunction();\n      });\n    }\n  });\n};\n\n/**\n * Called by parser when a click definition is found. Registers an event handler.\n *\n * @param ids Comma separated list of ids\n * @param functionName Function to be called on click\n * @param functionArgs Function args the function should be called with\n */\nexport const setClickEvent = function (ids, functionName, functionArgs) {\n  ids.split(',').forEach(function (id) {\n    setClickFun(id, functionName, functionArgs);\n  });\n  setClass(ids, 'clickable');\n};\n\n/**\n * Binds all functions previously added to fun (specified through click) to the element\n *\n * @param element\n */\nexport const bindFunctions = function (element) {\n  funs.forEach(function (fun) {\n    fun(element);\n  });\n};\n\nexport default {\n  parseDirective,\n  getConfig: () => configApi.getConfig().gantt,\n  clear,\n  setDateFormat,\n  getDateFormat,\n  enableInclusiveEndDates,\n  endDatesAreInclusive,\n  enableTopAxis,\n  topAxisEnabled,\n  setAxisFormat,\n  getAxisFormat,\n  setTodayMarker,\n  getTodayMarker,\n  setTitle,\n  getTitle,\n  setAccDescription,\n  getAccDescription,\n  addSection,\n  getSections,\n  getTasks,\n  addTask,\n  findTaskById,\n  addTaskOrg,\n  setIncludes,\n  getIncludes,\n  setExcludes,\n  getExcludes,\n  setClickEvent,\n  setLink,\n  getLinks,\n  bindFunctions,\n  durationToDate,\n  isInvalidDate,\n};\n\n/**\n * @param data\n * @param task\n * @param tags\n */\nfunction getTaskTags(data, task, tags) {\n  let matchFound = true;\n  while (matchFound) {\n    matchFound = false;\n    tags.forEach(function (t) {\n      const pattern = '^\\\\s*' + t + '\\\\s*$';\n      const regex = new RegExp(pattern);\n      if (data[0].match(regex)) {\n        task[t] = true;\n        data.shift(1);\n        matchFound = true;\n      }\n    });\n  }\n}\n","import moment from 'moment-mini';\nimport {\n  select,\n  scaleTime,\n  min,\n  max,\n  scaleLinear,\n  interpolateHcl,\n  axisBottom,\n  axisTop,\n  timeFormat,\n} from 'd3';\nimport { parser } from './parser/gantt';\nimport common from '../common/common';\nimport ganttDb from './ganttDb';\nimport { getConfig } from '../../config';\nimport { configureSvgSize } from '../../utils';\nimport addSVGAccessibilityFields from '../../accessibility';\n\nparser.yy = ganttDb;\nexport const setConf = function () {\n  // const keys = Object.keys(cnf);\n  // keys.forEach(function(key) {\n  //   conf[key] = cnf[key];\n  // });\n};\nlet w;\nexport const draw = function (text, id) {\n  const conf = getConfig().gantt;\n  parser.yy.clear();\n  parser.parse(text);\n\n  const securityLevel = getConfig().securityLevel;\n  // Handle root and ocument for when rendering in sanbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  const elem = doc.getElementById(id);\n  w = elem.parentElement.offsetWidth;\n\n  if (typeof w === 'undefined') {\n    w = 1200;\n  }\n\n  if (typeof conf.useWidth !== 'undefined') {\n    w = conf.useWidth;\n  }\n\n  const taskArray = parser.yy.getTasks();\n\n  // Set height based on number of tasks\n  const h = taskArray.length * (conf.barHeight + conf.barGap) + 2 * conf.topPadding;\n\n  // Set viewBox\n  elem.setAttribute('viewBox', '0 0 ' + w + ' ' + h);\n  const svg = root.select(`[id=\"${id}\"]`);\n\n  // Set timescale\n  const timeScale = scaleTime()\n    .domain([\n      min(taskArray, function (d) {\n        return d.startTime;\n      }),\n      max(taskArray, function (d) {\n        return d.endTime;\n      }),\n    ])\n    .rangeRound([0, w - conf.leftPadding - conf.rightPadding]);\n\n  let categories = [];\n\n  for (let i = 0; i < taskArray.length; i++) {\n    categories.push(taskArray[i].type);\n  }\n\n  const catsUnfiltered = categories; // for vert labels\n\n  categories = checkUnique(categories);\n\n  /**\n   * @param a\n   * @param b\n   */\n  function taskCompare(a, b) {\n    const taskA = a.startTime;\n    const taskB = b.startTime;\n    let result = 0;\n    if (taskA > taskB) {\n      result = 1;\n    } else if (taskA < taskB) {\n      result = -1;\n    }\n    return result;\n  }\n\n  // Sort the task array using the above taskCompare() so that\n  // tasks are created based on their order of startTime\n  taskArray.sort(taskCompare);\n\n  makeGant(taskArray, w, h);\n\n  configureSvgSize(svg, h, w, conf.useMaxWidth);\n\n  svg\n    .append('text')\n    .text(parser.yy.getTitle())\n    .attr('x', w / 2)\n    .attr('y', conf.titleTopMargin)\n    .attr('class', 'titleText');\n\n  addSVGAccessibilityFields(parser.yy, svg, id);\n\n  /**\n   * @param tasks\n   * @param pageWidth\n   * @param pageHeight\n   */\n  function makeGant(tasks, pageWidth, pageHeight) {\n    const barHeight = conf.barHeight;\n    const gap = barHeight + conf.barGap;\n    const topPadding = conf.topPadding;\n    const leftPadding = conf.leftPadding;\n\n    const colorScale = scaleLinear()\n      .domain([0, categories.length])\n      .range(['#00B9FA', '#F95002'])\n      .interpolate(interpolateHcl);\n\n    drawExcludeDays(\n      gap,\n      topPadding,\n      leftPadding,\n      pageWidth,\n      pageHeight,\n      tasks,\n      parser.yy.getExcludes(),\n      parser.yy.getIncludes()\n    );\n    makeGrid(leftPadding, topPadding, pageWidth, pageHeight);\n    drawRects(tasks, gap, topPadding, leftPadding, barHeight, colorScale, pageWidth, pageHeight);\n    vertLabels(gap, topPadding, leftPadding, barHeight, colorScale);\n    drawToday(leftPadding, topPadding, pageWidth, pageHeight);\n  }\n\n  /**\n   * @param theArray\n   * @param theGap\n   * @param theTopPad\n   * @param theSidePad\n   * @param theBarHeight\n   * @param theColorScale\n   * @param w\n   */\n  function drawRects(theArray, theGap, theTopPad, theSidePad, theBarHeight, theColorScale, w) {\n    // Draw background rects covering the entire width of the graph, these form the section rows.\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(theArray)\n      .enter()\n      .append('rect')\n      .attr('x', 0)\n      .attr('y', function (d, i) {\n        // Ignore the incoming i value and use our order instead\n        i = d.order;\n        return i * theGap + theTopPad - 2;\n      })\n      .attr('width', function () {\n        return w - conf.rightPadding / 2;\n      })\n      .attr('height', theGap)\n      .attr('class', function (d) {\n        for (let i = 0; i < categories.length; i++) {\n          if (d.type === categories[i]) {\n            return 'section section' + (i % conf.numberSectionStyles);\n          }\n        }\n        return 'section section0';\n      });\n\n    // Draw the rects representing the tasks\n    const rectangles = svg.append('g').selectAll('rect').data(theArray).enter();\n\n    const links = ganttDb.getLinks();\n\n    // Render the tasks with links\n    // Render the other tasks\n    rectangles\n      .append('rect')\n      .attr('id', function (d) {\n        return d.id;\n      })\n      .attr('rx', 3)\n      .attr('ry', 3)\n      .attr('x', function (d) {\n        if (d.milestone) {\n          return (\n            timeScale(d.startTime) +\n            theSidePad +\n            0.5 * (timeScale(d.endTime) - timeScale(d.startTime)) -\n            0.5 * theBarHeight\n          );\n        }\n        return timeScale(d.startTime) + theSidePad;\n      })\n      .attr('y', function (d, i) {\n        // Ignore the incoming i value and use our order instead\n        i = d.order;\n        return i * theGap + theTopPad;\n      })\n      .attr('width', function (d) {\n        if (d.milestone) {\n          return theBarHeight;\n        }\n        return timeScale(d.renderEndTime || d.endTime) - timeScale(d.startTime);\n      })\n      .attr('height', theBarHeight)\n      .attr('transform-origin', function (d, i) {\n        // Ignore the incoming i value and use our order instead\n        i = d.order;\n\n        return (\n          (\n            timeScale(d.startTime) +\n            theSidePad +\n            0.5 * (timeScale(d.endTime) - timeScale(d.startTime))\n          ).toString() +\n          'px ' +\n          (i * theGap + theTopPad + 0.5 * theBarHeight).toString() +\n          'px'\n        );\n      })\n      .attr('class', function (d) {\n        const res = 'task';\n\n        let classStr = '';\n        if (d.classes.length > 0) {\n          classStr = d.classes.join(' ');\n        }\n\n        let secNum = 0;\n        for (let i = 0; i < categories.length; i++) {\n          if (d.type === categories[i]) {\n            secNum = i % conf.numberSectionStyles;\n          }\n        }\n\n        let taskClass = '';\n        if (d.active) {\n          if (d.crit) {\n            taskClass += ' activeCrit';\n          } else {\n            taskClass = ' active';\n          }\n        } else if (d.done) {\n          if (d.crit) {\n            taskClass = ' doneCrit';\n          } else {\n            taskClass = ' done';\n          }\n        } else {\n          if (d.crit) {\n            taskClass += ' crit';\n          }\n        }\n\n        if (taskClass.length === 0) {\n          taskClass = ' task';\n        }\n\n        if (d.milestone) {\n          taskClass = ' milestone ' + taskClass;\n        }\n\n        taskClass += secNum;\n\n        taskClass += ' ' + classStr;\n\n        return res + taskClass;\n      });\n\n    // Append task labels\n    rectangles\n      .append('text')\n      .attr('id', function (d) {\n        return d.id + '-text';\n      })\n      .text(function (d) {\n        return d.task;\n      })\n      .attr('font-size', conf.fontSize)\n      .attr('x', function (d) {\n        let startX = timeScale(d.startTime);\n        let endX = timeScale(d.renderEndTime || d.endTime);\n        if (d.milestone) {\n          startX += 0.5 * (timeScale(d.endTime) - timeScale(d.startTime)) - 0.5 * theBarHeight;\n        }\n        if (d.milestone) {\n          endX = startX + theBarHeight;\n        }\n        const textWidth = this.getBBox().width;\n\n        // Check id text width > width of rectangle\n        if (textWidth > endX - startX) {\n          if (endX + textWidth + 1.5 * conf.leftPadding > w) {\n            return startX + theSidePad - 5;\n          } else {\n            return endX + theSidePad + 5;\n          }\n        } else {\n          return (endX - startX) / 2 + startX + theSidePad;\n        }\n      })\n      .attr('y', function (d, i) {\n        // Ignore the incoming i value and use our order instead\n        i = d.order;\n        return i * theGap + conf.barHeight / 2 + (conf.fontSize / 2 - 2) + theTopPad;\n      })\n      .attr('text-height', theBarHeight)\n      .attr('class', function (d) {\n        const startX = timeScale(d.startTime);\n        let endX = timeScale(d.endTime);\n        if (d.milestone) {\n          endX = startX + theBarHeight;\n        }\n        const textWidth = this.getBBox().width;\n\n        let classStr = '';\n        if (d.classes.length > 0) {\n          classStr = d.classes.join(' ');\n        }\n\n        let secNum = 0;\n        for (let i = 0; i < categories.length; i++) {\n          if (d.type === categories[i]) {\n            secNum = i % conf.numberSectionStyles;\n          }\n        }\n\n        let taskType = '';\n        if (d.active) {\n          if (d.crit) {\n            taskType = 'activeCritText' + secNum;\n          } else {\n            taskType = 'activeText' + secNum;\n          }\n        }\n\n        if (d.done) {\n          if (d.crit) {\n            taskType = taskType + ' doneCritText' + secNum;\n          } else {\n            taskType = taskType + ' doneText' + secNum;\n          }\n        } else {\n          if (d.crit) {\n            taskType = taskType + ' critText' + secNum;\n          }\n        }\n\n        if (d.milestone) {\n          taskType += ' milestoneText';\n        }\n\n        // Check id text width > width of rectangle\n        if (textWidth > endX - startX) {\n          if (endX + textWidth + 1.5 * conf.leftPadding > w) {\n            return classStr + ' taskTextOutsideLeft taskTextOutside' + secNum + ' ' + taskType;\n          } else {\n            return (\n              classStr +\n              ' taskTextOutsideRight taskTextOutside' +\n              secNum +\n              ' ' +\n              taskType +\n              ' width-' +\n              textWidth\n            );\n          }\n        } else {\n          return classStr + ' taskText taskText' + secNum + ' ' + taskType + ' width-' + textWidth;\n        }\n      });\n\n    const securityLevel = getConfig().securityLevel;\n\n    // Wrap the tasks in an a tag for working links without javascript\n    if (securityLevel === 'sandbox') {\n      let sandboxElement;\n      sandboxElement = select('#i' + id);\n      const root = select(sandboxElement.nodes()[0].contentDocument.body);\n      const doc = sandboxElement.nodes()[0].contentDocument;\n\n      rectangles\n        .filter(function (d) {\n          return typeof links[d.id] !== 'undefined';\n        })\n        .each(function (o) {\n          var taskRect = doc.querySelector('#' + o.id);\n          var taskText = doc.querySelector('#' + o.id + '-text');\n          const oldParent = taskRect.parentNode;\n          var Link = doc.createElement('a');\n          Link.setAttribute('xlink:href', links[o.id]);\n          Link.setAttribute('target', '_top');\n          oldParent.appendChild(Link);\n          Link.appendChild(taskRect);\n          Link.appendChild(taskText);\n        });\n    }\n  }\n  /**\n   * @param theGap\n   * @param theTopPad\n   * @param theSidePad\n   * @param w\n   * @param h\n   * @param tasks\n   * @param excludes\n   * @param includes\n   */\n  function drawExcludeDays(theGap, theTopPad, theSidePad, w, h, tasks, excludes, includes) {\n    const minTime = tasks.reduce(\n      (min, { startTime }) => (min ? Math.min(min, startTime) : startTime),\n      0\n    );\n    const maxTime = tasks.reduce((max, { endTime }) => (max ? Math.max(max, endTime) : endTime), 0);\n    const dateFormat = parser.yy.getDateFormat();\n    if (!minTime || !maxTime) return;\n\n    const excludeRanges = [];\n    let range = null;\n    let d = moment(minTime);\n    while (d.valueOf() <= maxTime) {\n      if (parser.yy.isInvalidDate(d, dateFormat, excludes, includes)) {\n        if (!range) {\n          range = {\n            start: d.clone(),\n            end: d.clone(),\n          };\n        } else {\n          range.end = d.clone();\n        }\n      } else {\n        if (range) {\n          excludeRanges.push(range);\n          range = null;\n        }\n      }\n      d.add(1, 'd');\n    }\n\n    const rectangles = svg.append('g').selectAll('rect').data(excludeRanges).enter();\n\n    rectangles\n      .append('rect')\n      .attr('id', function (d) {\n        return 'exclude-' + d.start.format('YYYY-MM-DD');\n      })\n      .attr('x', function (d) {\n        return timeScale(d.start) + theSidePad;\n      })\n      .attr('y', conf.gridLineStartPadding)\n      .attr('width', function (d) {\n        const renderEnd = d.end.clone().add(1, 'day');\n        return timeScale(renderEnd) - timeScale(d.start);\n      })\n      .attr('height', h - theTopPad - conf.gridLineStartPadding)\n      .attr('transform-origin', function (d, i) {\n        return (\n          (\n            timeScale(d.start) +\n            theSidePad +\n            0.5 * (timeScale(d.end) - timeScale(d.start))\n          ).toString() +\n          'px ' +\n          (i * theGap + 0.5 * h).toString() +\n          'px'\n        );\n      })\n      .attr('class', 'exclude-range');\n  }\n\n  /**\n   * @param theSidePad\n   * @param theTopPad\n   * @param w\n   * @param h\n   */\n  function makeGrid(theSidePad, theTopPad, w, h) {\n    let bottomXAxis = axisBottom(timeScale)\n      .tickSize(-h + theTopPad + conf.gridLineStartPadding)\n      .tickFormat(timeFormat(parser.yy.getAxisFormat() || conf.axisFormat || '%Y-%m-%d'));\n\n    svg\n      .append('g')\n      .attr('class', 'grid')\n      .attr('transform', 'translate(' + theSidePad + ', ' + (h - 50) + ')')\n      .call(bottomXAxis)\n      .selectAll('text')\n      .style('text-anchor', 'middle')\n      .attr('fill', '#000')\n      .attr('stroke', 'none')\n      .attr('font-size', 10)\n      .attr('dy', '1em');\n\n    if (ganttDb.topAxisEnabled() || conf.topAxis) {\n      let topXAxis = axisTop(timeScale)\n        .tickSize(-h + theTopPad + conf.gridLineStartPadding)\n        .tickFormat(timeFormat(parser.yy.getAxisFormat() || conf.axisFormat || '%Y-%m-%d'));\n\n      svg\n        .append('g')\n        .attr('class', 'grid')\n        .attr('transform', 'translate(' + theSidePad + ', ' + theTopPad + ')')\n        .call(topXAxis)\n        .selectAll('text')\n        .style('text-anchor', 'middle')\n        .attr('fill', '#000')\n        .attr('stroke', 'none')\n        .attr('font-size', 10);\n      // .attr('dy', '1em');\n    }\n  }\n\n  /**\n   * @param theGap\n   * @param theTopPad\n   */\n  function vertLabels(theGap, theTopPad) {\n    const numOccurances = [];\n    let prevGap = 0;\n\n    for (let i = 0; i < categories.length; i++) {\n      numOccurances[i] = [categories[i], getCount(categories[i], catsUnfiltered)];\n    }\n\n    svg\n      .append('g') // without doing this, impossible to put grid lines behind text\n      .selectAll('text')\n      .data(numOccurances)\n      .enter()\n      .append(function (d) {\n        const rows = d[0].split(common.lineBreakRegex);\n        const dy = -(rows.length - 1) / 2;\n\n        const svgLabel = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        svgLabel.setAttribute('dy', dy + 'em');\n\n        for (let j = 0; j < rows.length; j++) {\n          const tspan = doc.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n          tspan.setAttribute('alignment-baseline', 'central');\n          tspan.setAttribute('x', '10');\n          if (j > 0) tspan.setAttribute('dy', '1em');\n          tspan.textContent = rows[j];\n          svgLabel.appendChild(tspan);\n        }\n        return svgLabel;\n      })\n      .attr('x', 10)\n      .attr('y', function (d, i) {\n        if (i > 0) {\n          for (let j = 0; j < i; j++) {\n            prevGap += numOccurances[i - 1][1];\n            return (d[1] * theGap) / 2 + prevGap * theGap + theTopPad;\n          }\n        } else {\n          return (d[1] * theGap) / 2 + theTopPad;\n        }\n      })\n      .attr('font-size', conf.sectionFontSize)\n      .attr('font-size', conf.sectionFontSize)\n      .attr('class', function (d) {\n        for (let i = 0; i < categories.length; i++) {\n          if (d[0] === categories[i]) {\n            return 'sectionTitle sectionTitle' + (i % conf.numberSectionStyles);\n          }\n        }\n        return 'sectionTitle';\n      });\n  }\n\n  /**\n   * @param theSidePad\n   * @param theTopPad\n   * @param w\n   * @param h\n   */\n  function drawToday(theSidePad, theTopPad, w, h) {\n    const todayMarker = ganttDb.getTodayMarker();\n    if (todayMarker === 'off') {\n      return;\n    }\n\n    const todayG = svg.append('g').attr('class', 'today');\n    const today = new Date();\n    const todayLine = todayG.append('line');\n\n    todayLine\n      .attr('x1', timeScale(today) + theSidePad)\n      .attr('x2', timeScale(today) + theSidePad)\n      .attr('y1', conf.titleTopMargin)\n      .attr('y2', h - conf.titleTopMargin)\n      .attr('class', 'today');\n\n    if (todayMarker !== '') {\n      todayLine.attr('style', todayMarker.replace(/,/g, ';'));\n    }\n  }\n\n  /**\n   * From this stackexchange question:\n   * http://stackoverflow.com/questions/1890203/unique-for-arrays-in-javascript\n   *\n   * @param arr\n   */\n  function checkUnique(arr) {\n    const hash = {};\n    const result = [];\n    for (let i = 0, l = arr.length; i < l; ++i) {\n      if (!Object.prototype.hasOwnProperty.call(hash, arr[i])) {\n        // eslint-disable-line\n        // it works with objects! in FF, at least\n        hash[arr[i]] = true;\n        result.push(arr[i]);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * From this stackexchange question:\n   * http://stackoverflow.com/questions/14227981/count-how-many-strings-in-an-array-have-duplicates-in-the-same-array\n   *\n   * @param arr\n   */\n  function getCounts(arr) {\n    let i = arr.length; // const to loop over\n    const obj = {}; // obj to store results\n    while (i) {\n      obj[arr[--i]] = (obj[arr[i]] || 0) + 1; // count occurrences\n    }\n    return obj;\n  }\n\n  /**\n   * Get specific from everything\n   *\n   * @param word\n   * @param arr\n   */\n  function getCount(word, arr) {\n    return getCounts(arr)[word] || 0;\n  }\n};\n\nexport default {\n  setConf,\n  draw,\n};\n","const getStyles = (options) =>\n  `\n  .mermaid-main-font {\n    font-family: \"trebuchet ms\", verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n  .exclude-range {\n    fill: ${options.excludeBkgColor};\n  }\n\n  .section {\n    stroke: none;\n    opacity: 0.2;\n  }\n\n  .section0 {\n    fill: ${options.sectionBkgColor};\n  }\n\n  .section2 {\n    fill: ${options.sectionBkgColor2};\n  }\n\n  .section1,\n  .section3 {\n    fill: ${options.altSectionBkgColor};\n    opacity: 0.2;\n  }\n\n  .sectionTitle0 {\n    fill: ${options.titleColor};\n  }\n\n  .sectionTitle1 {\n    fill: ${options.titleColor};\n  }\n\n  .sectionTitle2 {\n    fill: ${options.titleColor};\n  }\n\n  .sectionTitle3 {\n    fill: ${options.titleColor};\n  }\n\n  .sectionTitle {\n    text-anchor: start;\n    // font-size: ${options.ganttFontSize};\n    // text-height: 14px;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n\n  }\n\n\n  /* Grid and axis */\n\n  .grid .tick {\n    stroke: ${options.gridColor};\n    opacity: 0.8;\n    shape-rendering: crispEdges;\n    text {\n      font-family: ${options.fontFamily};\n      fill: ${options.textColor};\n    }\n  }\n\n  .grid path {\n    stroke-width: 0;\n  }\n\n\n  /* Today line */\n\n  .today {\n    fill: none;\n    stroke: ${options.todayLineColor};\n    stroke-width: 2px;\n  }\n\n\n  /* Task styling */\n\n  /* Default task */\n\n  .task {\n    stroke-width: 2;\n  }\n\n  .taskText {\n    text-anchor: middle;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n\n  // .taskText:not([font-size]) {\n  //   font-size: ${options.ganttFontSize};\n  // }\n\n  .taskTextOutsideRight {\n    fill: ${options.taskTextDarkColor};\n    text-anchor: start;\n    // font-size: ${options.ganttFontSize};\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n\n  }\n\n  .taskTextOutsideLeft {\n    fill: ${options.taskTextDarkColor};\n    text-anchor: end;\n    // font-size: ${options.ganttFontSize};\n  }\n\n  /* Special case clickable */\n  .task.clickable {\n    cursor: pointer;\n  }\n  .taskText.clickable {\n    cursor: pointer;\n    fill: ${options.taskTextClickableColor} !important;\n    font-weight: bold;\n  }\n\n  .taskTextOutsideLeft.clickable {\n    cursor: pointer;\n    fill: ${options.taskTextClickableColor} !important;\n    font-weight: bold;\n  }\n\n  .taskTextOutsideRight.clickable {\n    cursor: pointer;\n    fill: ${options.taskTextClickableColor} !important;\n    font-weight: bold;\n  }\n\n  /* Specific task settings for the sections*/\n\n  .taskText0,\n  .taskText1,\n  .taskText2,\n  .taskText3 {\n    fill: ${options.taskTextColor};\n  }\n\n  .task0,\n  .task1,\n  .task2,\n  .task3 {\n    fill: ${options.taskBkgColor};\n    stroke: ${options.taskBorderColor};\n  }\n\n  .taskTextOutside0,\n  .taskTextOutside2\n  {\n    fill: ${options.taskTextOutsideColor};\n  }\n\n  .taskTextOutside1,\n  .taskTextOutside3 {\n    fill: ${options.taskTextOutsideColor};\n  }\n\n\n  /* Active task */\n\n  .active0,\n  .active1,\n  .active2,\n  .active3 {\n    fill: ${options.activeTaskBkgColor};\n    stroke: ${options.activeTaskBorderColor};\n  }\n\n  .activeText0,\n  .activeText1,\n  .activeText2,\n  .activeText3 {\n    fill: ${options.taskTextDarkColor} !important;\n  }\n\n\n  /* Completed task */\n\n  .done0,\n  .done1,\n  .done2,\n  .done3 {\n    stroke: ${options.doneTaskBorderColor};\n    fill: ${options.doneTaskBkgColor};\n    stroke-width: 2;\n  }\n\n  .doneText0,\n  .doneText1,\n  .doneText2,\n  .doneText3 {\n    fill: ${options.taskTextDarkColor} !important;\n  }\n\n\n  /* Tasks on the critical line */\n\n  .crit0,\n  .crit1,\n  .crit2,\n  .crit3 {\n    stroke: ${options.critBorderColor};\n    fill: ${options.critBkgColor};\n    stroke-width: 2;\n  }\n\n  .activeCrit0,\n  .activeCrit1,\n  .activeCrit2,\n  .activeCrit3 {\n    stroke: ${options.critBorderColor};\n    fill: ${options.activeTaskBkgColor};\n    stroke-width: 2;\n  }\n\n  .doneCrit0,\n  .doneCrit1,\n  .doneCrit2,\n  .doneCrit3 {\n    stroke: ${options.critBorderColor};\n    fill: ${options.doneTaskBkgColor};\n    stroke-width: 2;\n    cursor: pointer;\n    shape-rendering: crispEdges;\n  }\n\n  .milestone {\n    transform: rotate(45deg) scale(0.8,0.8);\n  }\n\n  .milestoneText {\n    font-style: italic;\n  }\n  .doneCritText0,\n  .doneCritText1,\n  .doneCritText2,\n  .doneCritText3 {\n    fill: ${options.taskTextDarkColor} !important;\n  }\n\n  .activeCritText0,\n  .activeCritText1,\n  .activeCritText2,\n  .activeCritText3 {\n    fill: ${options.taskTextDarkColor} !important;\n  }\n\n  .titleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor}    ;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n`;\n\nexport default getStyles;\n","import { log } from '../../logger';\nimport { random } from '../../utils';\nimport mermaidAPI from '../../mermaidAPI';\nimport * as configApi from '../../config';\nimport { getConfig } from '../../config';\nimport common from '../common/common';\nimport {\n  setTitle,\n  getTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n} from '../../commonDb';\n\nlet mainBranchName = getConfig().gitGraph.mainBranchName;\nlet mainBranchOrder = getConfig().gitGraph.mainBranchOrder;\nlet commits = {};\nlet head = null;\nlet branchesConfig = {};\nbranchesConfig[mainBranchName] = { name: mainBranchName, order: mainBranchOrder };\nlet branches = {};\nbranches[mainBranchName] = head;\nlet curBranch = mainBranchName;\nlet direction = 'LR';\nlet seq = 0;\n\nfunction getId() {\n  return random({ length: 7 });\n}\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\n// /**\n//  * @param currentCommit\n//  * @param otherCommit\n//  */\n// function isfastforwardable(currentCommit, otherCommit) {\n//   log.debug('Entering isfastforwardable:', currentCommit.id, otherCommit.id);\n//   let cnt = 0;\n//   while (currentCommit.seq <= otherCommit.seq && currentCommit !== otherCommit && cnt < 1000) {\n//     cnt++;\n//     // only if other branch has more commits\n//     if (otherCommit.parent == null) break;\n//     if (Array.isArray(otherCommit.parent)) {\n//       log.debug('In merge commit:', otherCommit.parent);\n//       return (\n//         isfastforwardable(currentCommit, commits[otherCommit.parent[0]]) ||\n//         isfastforwardable(currentCommit, commits[otherCommit.parent[1]])\n//       );\n//     } else {\n//       otherCommit = commits[otherCommit.parent];\n//     }\n//   }\n//   log.debug(currentCommit.id, otherCommit.id);\n//   return currentCommit.id === otherCommit.id;\n// }\n\n/**\n * @param currentCommit\n * @param otherCommit\n */\n// function isReachableFrom(currentCommit, otherCommit) {\n//   const currentSeq = currentCommit.seq;\n//   const otherSeq = otherCommit.seq;\n//   if (currentSeq > otherSeq) return isfastforwardable(otherCommit, currentCommit);\n//   return false;\n// }\n\n/**\n * @param list\n * @param fn\n */\nfunction uniqBy(list, fn) {\n  const recordMap = Object.create(null);\n  return list.reduce((out, item) => {\n    const key = fn(item);\n    if (!recordMap[key]) {\n      recordMap[key] = true;\n      out.push(item);\n    }\n    return out;\n  }, []);\n}\n\nexport const setDirection = function (dir) {\n  direction = dir;\n};\nlet options = {};\nexport const setOptions = function (rawOptString) {\n  log.debug('options str', rawOptString);\n  rawOptString = rawOptString && rawOptString.trim();\n  rawOptString = rawOptString || '{}';\n  try {\n    options = JSON.parse(rawOptString);\n  } catch (e) {\n    log.error('error while parsing gitGraph options', e.message);\n  }\n};\n\nexport const getOptions = function () {\n  return options;\n};\n\nexport const commit = function (msg, id, type, tag) {\n  log.debug('Entering commit:', msg, id, type, tag);\n  id = common.sanitizeText(id, configApi.getConfig());\n  msg = common.sanitizeText(msg, configApi.getConfig());\n  tag = common.sanitizeText(tag, configApi.getConfig());\n  const commit = {\n    id: id ? id : seq + '-' + getId(),\n    message: msg,\n    seq: seq++,\n    type: type ? type : commitType.NORMAL,\n    tag: tag ? tag : '',\n    parents: head == null ? [] : [head.id],\n    branch: curBranch,\n  };\n  head = commit;\n  commits[commit.id] = commit;\n  branches[curBranch] = commit.id;\n  log.debug('in pushCommit ' + commit.id);\n};\n\nexport const branch = function (name, order) {\n  name = common.sanitizeText(name, configApi.getConfig());\n  if (typeof branches[name] === 'undefined') {\n    branches[name] = head != null ? head.id : null;\n    branchesConfig[name] = { name, order: order ? parseInt(order, 10) : null };\n    checkout(name);\n    log.debug('in createBranch');\n  } else {\n    let error = new Error(\n      'Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using \"checkout ' +\n        name +\n        '\")'\n    );\n    error.hash = {\n      text: 'branch ' + name,\n      token: 'branch ' + name,\n      line: '1',\n      loc: { first_line: 1, last_line: 1, first_column: 1, last_column: 1 },\n      expected: ['\"checkout ' + name + '\"'],\n    };\n    throw error;\n  }\n};\n\nexport const merge = function (otherBranch, tag) {\n  otherBranch = common.sanitizeText(otherBranch, configApi.getConfig());\n  const currentCommit = commits[branches[curBranch]];\n  const otherCommit = commits[branches[otherBranch]];\n  if (curBranch === otherBranch) {\n    let error = new Error('Incorrect usage of \"merge\". Cannot merge a branch to itself');\n    error.hash = {\n      text: 'merge ' + otherBranch,\n      token: 'merge ' + otherBranch,\n      line: '1',\n      loc: { first_line: 1, last_line: 1, first_column: 1, last_column: 1 },\n      expected: ['branch abc'],\n    };\n    throw error;\n  } else if (typeof currentCommit === 'undefined' || !currentCommit) {\n    let error = new Error(\n      'Incorrect usage of \"merge\". Current branch (' + curBranch + ')has no commits'\n    );\n    error.hash = {\n      text: 'merge ' + otherBranch,\n      token: 'merge ' + otherBranch,\n      line: '1',\n      loc: { first_line: 1, last_line: 1, first_column: 1, last_column: 1 },\n      expected: ['commit'],\n    };\n    throw error;\n  } else if (typeof branches[otherBranch] === 'undefined') {\n    let error = new Error(\n      'Incorrect usage of \"merge\". Branch to be merged (' + otherBranch + ') does not exist'\n    );\n    error.hash = {\n      text: 'merge ' + otherBranch,\n      token: 'merge ' + otherBranch,\n      line: '1',\n      loc: { first_line: 1, last_line: 1, first_column: 1, last_column: 1 },\n      expected: ['branch ' + otherBranch],\n    };\n    throw error;\n  } else if (typeof otherCommit === 'undefined' || !otherCommit) {\n    let error = new Error(\n      'Incorrect usage of \"merge\". Branch to be merged (' + otherBranch + ') has no commits'\n    );\n    error.hash = {\n      text: 'merge ' + otherBranch,\n      token: 'merge ' + otherBranch,\n      line: '1',\n      loc: { first_line: 1, last_line: 1, first_column: 1, last_column: 1 },\n      expected: ['\"commit\"'],\n    };\n    throw error;\n  } else if (currentCommit === otherCommit) {\n    let error = new Error('Incorrect usage of \"merge\". Both branches have same head');\n    error.hash = {\n      text: 'merge ' + otherBranch,\n      token: 'merge ' + otherBranch,\n      line: '1',\n      loc: { first_line: 1, last_line: 1, first_column: 1, last_column: 1 },\n      expected: ['branch abc'],\n    };\n    throw error;\n  }\n  // if (isReachableFrom(currentCommit, otherCommit)) {\n  //   log.debug('Already merged');\n  //   return;\n  // }\n  // if (isfastforwardable(currentCommit, otherCommit)) {\n  //   branches[curBranch] = branches[otherBranch];\n  //   head = commits[branches[curBranch]];\n  // } else {\n  // create merge commit\n  const commit = {\n    id: seq + '-' + getId(),\n    message: 'merged branch ' + otherBranch + ' into ' + curBranch,\n    seq: seq++,\n    parents: [head == null ? null : head.id, branches[otherBranch]],\n    branch: curBranch,\n    type: commitType.MERGE,\n    tag: tag ? tag : '',\n  };\n  head = commit;\n  commits[commit.id] = commit;\n  branches[curBranch] = commit.id;\n  // }\n  log.debug(branches);\n  log.debug('in mergeBranch');\n};\n\nexport const checkout = function (branch) {\n  branch = common.sanitizeText(branch, configApi.getConfig());\n  if (typeof branches[branch] === 'undefined') {\n    let error = new Error(\n      'Trying to checkout branch which is not yet created. (Help try using \"branch ' + branch + '\")'\n    );\n    error.hash = {\n      text: 'checkout ' + branch,\n      token: 'checkout ' + branch,\n      line: '1',\n      loc: { first_line: 1, last_line: 1, first_column: 1, last_column: 1 },\n      expected: ['\"branch ' + branch + '\"'],\n    };\n    throw error;\n    //branches[branch] = head != null ? head.id : null;\n    //log.debug('in createBranch');\n  } else {\n    curBranch = branch;\n    const id = branches[curBranch];\n    head = commits[id];\n  }\n};\n\n// export const reset = function (commitRef) {\n//   log.debug('in reset', commitRef);\n//   const ref = commitRef.split(':')[0];\n//   let parentCount = parseInt(commitRef.split(':')[1]);\n//   let commit = ref === 'HEAD' ? head : commits[branches[ref]];\n//   log.debug(commit, parentCount);\n//   while (parentCount > 0) {\n//     commit = commits[commit.parent];\n//     parentCount--;\n//     if (!commit) {\n//       const err = 'Critical error - unique parent commit not found during reset';\n//       log.error(err);\n//       throw err;\n//     }\n//   }\n//   head = commit;\n//   branches[curBranch] = commit.id;\n// };\n\n/**\n * @param arr\n * @param key\n * @param newval\n */\nfunction upsert(arr, key, newval) {\n  const index = arr.indexOf(key);\n  if (index === -1) {\n    arr.push(newval);\n  } else {\n    arr.splice(index, 1, newval);\n  }\n}\n\n/** @param commitArr */\nfunction prettyPrintCommitHistory(commitArr) {\n  const commit = commitArr.reduce((out, commit) => {\n    if (out.seq > commit.seq) return out;\n    return commit;\n  }, commitArr[0]);\n  let line = '';\n  commitArr.forEach(function (c) {\n    if (c === commit) {\n      line += '\\t*';\n    } else {\n      line += '\\t|';\n    }\n  });\n  const label = [line, commit.id, commit.seq];\n  for (let branch in branches) {\n    if (branches[branch] === commit.id) label.push(branch);\n  }\n  log.debug(label.join(' '));\n  if (commit.parents && commit.parents.length == 2) {\n    const newCommit = commits[commit.parents[0]];\n    upsert(commitArr, commit, newCommit);\n    commitArr.push(commits[commit.parents[1]]);\n  } else if (commit.parents.length == 0) {\n    return;\n  } else {\n    const nextCommit = commits[commit.parents];\n    upsert(commitArr, commit, nextCommit);\n  }\n  commitArr = uniqBy(commitArr, (c) => c.id);\n  prettyPrintCommitHistory(commitArr);\n}\n\nexport const prettyPrint = function () {\n  log.debug(commits);\n  const node = getCommitsArray()[0];\n  prettyPrintCommitHistory([node]);\n};\n\nexport const clear = function () {\n  commits = {};\n  head = null;\n  let mainBranch = getConfig().gitGraph.mainBranchName;\n  let mainBranchOrder = getConfig().gitGraph.mainBranchOrder;\n  branches = {};\n  branches[mainBranch] = null;\n  branchesConfig = {};\n  branchesConfig[mainBranch] = { name: mainBranch, order: mainBranchOrder };\n  curBranch = mainBranch;\n  seq = 0;\n  commonClear();\n};\n\nexport const getBranchesAsObjArray = function () {\n  const branchesArray = Object.values(branchesConfig)\n    .map((branchConfig, i) => {\n      if (branchConfig.order !== null) return branchConfig;\n      return {\n        ...branchConfig,\n        order: parseFloat(`0.${i}`, 10),\n      };\n    })\n    .sort((a, b) => a.order - b.order)\n    .map(({ name }) => ({ name }));\n\n  return branchesArray;\n};\n\nexport const getBranches = function () {\n  return branches;\n};\nexport const getCommits = function () {\n  return commits;\n};\nexport const getCommitsArray = function () {\n  const commitArr = Object.keys(commits).map(function (key) {\n    return commits[key];\n  });\n  commitArr.forEach(function (o) {\n    log.debug(o.id);\n  });\n  commitArr.sort((a, b) => a.seq - b.seq);\n  return commitArr;\n};\nexport const getCurrentBranch = function () {\n  return curBranch;\n};\nexport const getDirection = function () {\n  return direction;\n};\nexport const getHead = function () {\n  return head;\n};\n\nexport const commitType = {\n  NORMAL: 0,\n  REVERSE: 1,\n  HIGHLIGHT: 2,\n  MERGE: 3,\n};\n\nexport default {\n  parseDirective,\n  getConfig: () => configApi.getConfig().gitGraph,\n  setDirection,\n  setOptions,\n  getOptions,\n  commit,\n  branch,\n  merge,\n  checkout,\n  //reset,\n  prettyPrint,\n  clear,\n  getBranchesAsObjArray,\n  getBranches,\n  getCommits,\n  getCommitsArray,\n  getCurrentBranch,\n  getDirection,\n  getHead,\n  setTitle,\n  getTitle,\n  getAccDescription,\n  setAccDescription,\n  commitType,\n};\n","import { curveBasis, line, select } from 'd3';\nimport { interpolateToCurve, getStylesFromArray, configureSvgSize } from '../../utils';\nimport db from './gitGraphAst';\nimport gitGraphParser from './parser/gitGraph';\nimport { log } from '../../logger';\nimport { getConfig } from '../../config';\nimport addSVGAccessibilityFields from '../../accessibility';\n\nlet allCommitsDict = {};\nlet branchNum;\n\nconst commitType = {\n  NORMAL: 0,\n  REVERSE: 1,\n  HIGHLIGHT: 2,\n  MERGE: 3,\n};\n\nlet branchPos = {};\nlet commitPos = {};\nlet lanes = [];\nlet maxPos = 0;\nconst clear = () => {\n  branchPos = {};\n  commitPos = {};\n  allCommitsDict = {};\n  maxPos = 0;\n  lanes = [];\n};\n\n/**\n * Draws a text, used for labels of the branches\n *\n * @param {string} txt The text\n * @returns {SVGElement}\n */\nconst drawText = (txt) => {\n  const svgLabel = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n  let rows = [];\n\n  // Handling of new lines in the label\n  if (typeof txt === 'string') {\n    rows = txt.split(/\\\\n|\\n|<br\\s*\\/?>/gi);\n  } else if (Array.isArray(txt)) {\n    rows = txt;\n  } else {\n    rows = [];\n  }\n\n  for (let j = 0; j < rows.length; j++) {\n    const tspan = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n    tspan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    tspan.setAttribute('dy', '1em');\n    tspan.setAttribute('x', '0');\n    tspan.setAttribute('class', 'row');\n    tspan.textContent = rows[j].trim();\n    svgLabel.appendChild(tspan);\n  }\n  /**\n   * @param svg\n   * @param selector\n   */\n  return svgLabel;\n};\n\n/**\n * Draws the commits with its symbol and labels. The function has tywo modes, one which only\n * calculates the positions and one that does the actual drawing. This for a simple way getting the\n * vertical leyering rcorrect in the graph.\n *\n * @param {any} svg\n * @param {any} commits\n * @param {any} modifyGraph\n */\nconst drawCommits = (svg, commits, modifyGraph) => {\n  const gitGraphConfig = getConfig().gitGraph;\n  const gBullets = svg.append('g').attr('class', 'commit-bullets');\n  const gLabels = svg.append('g').attr('class', 'commit-labels');\n  let pos = 0;\n\n  const keys = Object.keys(commits);\n  const sortedKeys = keys.sort((a, b) => {\n    return commits[a].seq - commits[b].seq;\n  });\n  sortedKeys.forEach((key, index) => {\n    const commit = commits[key];\n\n    const y = branchPos[commit.branch].pos;\n    const x = pos + 10;\n    // Don't draw the commits now but calculate the positioning which is used by the branch lines etc.\n    if (modifyGraph) {\n      let typeClass;\n      switch (commit.type) {\n        case commitType.NORMAL:\n          typeClass = 'commit-normal';\n          break;\n        case commitType.REVERSE:\n          typeClass = 'commit-reverse';\n          break;\n        case commitType.HIGHLIGHT:\n          typeClass = 'commit-highlight';\n          break;\n        case commitType.MERGE:\n          typeClass = 'commit-merge';\n          break;\n        default:\n          typeClass = 'commit-normal';\n      }\n\n      if (commit.type === commitType.HIGHLIGHT) {\n        const circle = gBullets.append('rect');\n        circle.attr('x', x - 10);\n        circle.attr('y', y - 10);\n        circle.attr('height', 20);\n        circle.attr('width', 20);\n        circle.attr(\n          'class',\n          'commit ' +\n            commit.id +\n            ' commit-highlight' +\n            branchPos[commit.branch].index +\n            ' ' +\n            typeClass +\n            '-outer'\n        );\n        gBullets\n          .append('rect')\n          .attr('x', x - 6)\n          .attr('y', y - 6)\n          .attr('height', 12)\n          .attr('width', 12)\n          .attr(\n            'class',\n            'commit ' +\n              commit.id +\n              ' commit' +\n              branchPos[commit.branch].index +\n              ' ' +\n              typeClass +\n              '-inner'\n          );\n      } else {\n        const circle = gBullets.append('circle');\n        circle.attr('cx', x);\n        circle.attr('cy', y);\n        circle.attr('r', commit.type === commitType.MERGE ? 9 : 10);\n        circle.attr('class', 'commit ' + commit.id + ' commit' + branchPos[commit.branch].index);\n        if (commit.type === commitType.MERGE) {\n          const circle2 = gBullets.append('circle');\n          circle2.attr('cx', x);\n          circle2.attr('cy', y);\n          circle2.attr('r', 6);\n          circle2.attr(\n            'class',\n            'commit ' + typeClass + ' ' + commit.id + ' commit' + branchPos[commit.branch].index\n          );\n        }\n        if (commit.type === commitType.REVERSE) {\n          const cross = gBullets.append('path');\n          cross\n            .attr('d', `M ${x - 5},${y - 5}L${x + 5},${y + 5}M${x - 5},${y + 5}L${x + 5},${y - 5}`)\n            .attr(\n              'class',\n              'commit ' + typeClass + ' ' + commit.id + ' commit' + branchPos[commit.branch].index\n            );\n        }\n      }\n    }\n    commitPos[commit.id] = { x: pos + 10, y: y };\n\n    // The first iteration over the commits are for positioning purposes, this\n    // is required for drawing the lines. The circles and labels is drawn after the labels\n    // placing them on top of the lines.\n    if (modifyGraph) {\n      const px = 4;\n      const py = 2;\n      // Draw the commit label\n      if (commit.type !== commitType.MERGE && gitGraphConfig.showCommitLabel) {\n        const labelBkg = gLabels.insert('rect').attr('class', 'commit-label-bkg');\n\n        const text = gLabels\n          .append('text')\n          .attr('x', pos)\n          .attr('y', y + 25)\n          .attr('class', 'commit-label')\n          .text(commit.id);\n        let bbox = text.node().getBBox();\n\n        // Now we have the label, lets position the background\n        labelBkg\n          .attr('x', pos + 10 - bbox.width / 2 - py)\n          .attr('y', y + 13.5)\n          .attr('width', bbox.width + 2 * py)\n          .attr('height', bbox.height + 2 * py);\n        text.attr('x', pos + 10 - bbox.width / 2);\n      }\n      if (commit.tag) {\n        const rect = gLabels.insert('polygon');\n        const hole = gLabels.append('circle');\n        const tag = gLabels\n          .append('text')\n          // Note that we are delaying setting the x position until we know the width of the text\n          .attr('y', y - 16)\n          .attr('class', 'tag-label')\n          .text(commit.tag);\n        let tagBbox = tag.node().getBBox();\n        tag.attr('x', pos + 10 - tagBbox.width / 2);\n\n        const h2 = tagBbox.height / 2;\n        const ly = y - 19.2;\n        rect.attr('class', 'tag-label-bkg').attr(\n          'points',\n          `\n          ${pos - tagBbox.width / 2 - px / 2},${ly + py}\n          ${pos - tagBbox.width / 2 - px / 2},${ly - py}\n          ${pos + 10 - tagBbox.width / 2 - px},${ly - h2 - py}\n          ${pos + 10 + tagBbox.width / 2 + px},${ly - h2 - py}\n          ${pos + 10 + tagBbox.width / 2 + px},${ly + h2 + py}\n          ${pos + 10 - tagBbox.width / 2 - px},${ly + h2 + py}`\n        );\n\n        hole\n          .attr('cx', pos - tagBbox.width / 2 + px / 2)\n          .attr('cy', ly)\n          .attr('r', 1.5)\n          .attr('class', 'tag-hole');\n      }\n    }\n    pos += 50;\n    if (pos > maxPos) {\n      maxPos = pos;\n    }\n  });\n};\n\n/**\n * Detect if there are other commits between commit1s x-position and commit2s x-position on the same\n * branch as commit2.\n *\n * @param {any} commit1\n * @param {any} commit2\n * @param allCommits\n * @returns\n */\nconst hasOverlappingCommits = (commit1, commit2, allCommits) => {\n  const commit1Pos = commitPos[commit2.id];\n  const commit2Pos = commitPos[commit1.id];\n\n  // Find commits on the same branch as commit2\n  const keys = Object.keys(allCommits);\n  const overlappingComits = keys.filter((key) => {\n    return (\n      allCommits[key].branch === commit2.branch &&\n      allCommits[key].seq > commit1.seq &&\n      allCommits[key].seq < commit2.seq\n    );\n  });\n\n  return overlappingComits.length > 0;\n};\n\n/**\n * This function find a lane in the y-axis that is not overlapping with any other lanes. This is\n * used for drawing the lines between commits.\n *\n * @param {any} y1\n * @param {any} y2\n * @param {any} _depth\n * @returns\n */\nconst findLane = (y1, y2, _depth) => {\n  const depth = _depth || 0;\n\n  const candidate = y1 + Math.abs(y1 - y2) / 2;\n  if (depth > 5) {\n    return candidate;\n  }\n\n  let ok = true;\n  for (let i = 0; i < lanes.length; i++) {\n    if (Math.abs(lanes[i] - candidate) < 10) {\n      ok = false;\n    }\n  }\n  if (ok) {\n    lanes.push(candidate);\n    return candidate;\n  }\n  const diff = Math.abs(y1 - y2);\n  return findLane(y1, y2 - diff / 5, depth);\n};\n\n/**\n * This function draw trhe lines between the commits. They were arrows initially.\n *\n * @param {any} svg\n * @param {any} commit1\n * @param {any} commit2\n * @param {any} allCommits\n */\nconst drawArrow = (svg, commit1, commit2, allCommits) => {\n  const conf = getConfig();\n\n  const p1 = commitPos[commit1.id];\n  const p2 = commitPos[commit2.id];\n  const overlappingCommits = hasOverlappingCommits(commit1, commit2, allCommits);\n  // log.debug('drawArrow', p1, p2, overlappingCommits, commit1.id, commit2.id);\n\n  let url = '';\n  if (conf.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n\n  let arc = '';\n  let arc2 = '';\n  let radius = 0;\n  let offset = 0;\n  let colorClassNum = branchPos[commit2.branch].index;\n  let lineDef;\n  if (overlappingCommits) {\n    arc = 'A 10 10, 0, 0, 0,';\n    arc2 = 'A 10 10, 0, 0, 1,';\n    radius = 10;\n    offset = 10;\n    // Figure out the color of the arrow,arrows going down take the color from the destination branch\n    colorClassNum = branchPos[commit2.branch].index;\n\n    const lineY = p1.y < p2.y ? findLane(p1.y, p2.y) : findLane(p2.y, p1.y);\n\n    if (p1.y < p2.y) {\n      lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${lineY - radius} ${arc} ${p1.x + offset} ${lineY} L ${\n        p2.x - radius\n      } ${lineY} ${arc2} ${p2.x} ${lineY + offset} L ${p2.x} ${p2.y}`;\n    } else {\n      lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${lineY + radius} ${arc2} ${\n        p1.x + offset\n      } ${lineY} L ${p2.x - radius} ${lineY} ${arc} ${p2.x} ${lineY - offset} L ${p2.x} ${p2.y}`;\n    }\n  } else {\n    if (p1.y < p2.y) {\n      arc = 'A 20 20, 0, 0, 0,';\n      radius = 20;\n      offset = 20;\n\n      // Figure out the color of the arrow,arrows going down take the color from the destination branch\n      colorClassNum = branchPos[commit2.branch].index;\n\n      lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc} ${p1.x + offset} ${p2.y} L ${\n        p2.x\n      } ${p2.y}`;\n    }\n    if (p1.y > p2.y) {\n      arc = 'A 20 20, 0, 0, 0,';\n      radius = 20;\n      offset = 20;\n\n      // Arrows going up take the color from the source branch\n      colorClassNum = branchPos[commit1.branch].index;\n      lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc} ${p2.x} ${p1.y - offset} L ${\n        p2.x\n      } ${p2.y}`;\n    }\n\n    if (p1.y === p2.y) {\n      colorClassNum = branchPos[commit1.branch].index;\n      lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc} ${p1.x + offset} ${p2.y} L ${\n        p2.x\n      } ${p2.y}`;\n    }\n  }\n  const arrow = svg\n    .append('path')\n    .attr('d', lineDef)\n    .attr('class', 'arrow arrow' + colorClassNum);\n};\n\nconst drawArrows = (svg, commits) => {\n  const gArrows = svg.append('g').attr('class', 'commit-arrows');\n  let pos = 0;\n\n  const k = Object.keys(commits);\n  k.forEach((key, index) => {\n    const commit = commits[key];\n    if (commit.parents && commit.parents.length > 0) {\n      commit.parents.forEach((parent) => {\n        drawArrow(gArrows, commits[parent], commit, commits);\n      });\n    }\n  });\n};\n\n/**\n * This function adds the branches and the branches' labels to the svg.\n *\n * @param svg\n * @param commitid\n * @param branches\n * @param direction\n */\nconst drawBranches = (svg, branches) => {\n  const gitGraphConfig = getConfig().gitGraph;\n  const g = svg.append('g');\n  branches.forEach((branch, index) => {\n    const pos = branchPos[branch.name].pos;\n    const line = g.append('line');\n    line.attr('x1', 0);\n    line.attr('y1', pos);\n    line.attr('x2', maxPos);\n    line.attr('y2', pos);\n    line.attr('class', 'branch branch' + index);\n\n    lanes.push(pos);\n\n    let name = branch.name;\n\n    // Create the actual text element\n    const labelElement = drawText(name);\n    // Create outer g, edgeLabel, this will be positioned after graph layout\n    const bkg = g.insert('rect');\n    const branchLabel = g.insert('g').attr('class', 'branchLabel');\n\n    // Create inner g, label, this will be positioned now for centering the text\n    const label = branchLabel.insert('g').attr('class', 'label branch-label' + index);\n    label.node().appendChild(labelElement);\n    let bbox = labelElement.getBBox();\n    bkg\n      .attr('class', 'branchLabelBkg label' + index)\n      .attr('rx', 4)\n      .attr('ry', 4)\n      .attr('x', -bbox.width - 4)\n      .attr('y', -bbox.height / 2 + 8)\n      .attr('width', bbox.width + 18)\n      .attr('height', bbox.height + 4);\n\n    label.attr(\n      'transform',\n      'translate(' + (-bbox.width - 14) + ', ' + (pos - bbox.height / 2 - 1) + ')'\n    );\n    bkg.attr('transform', 'translate(' + -19 + ', ' + (pos - bbox.height / 2) + ')');\n  });\n};\n\n/**\n * @param svg\n * @param commit\n * @param direction\n * @param branchColor\n * @param txt\n * @param id\n * @param ver\n */\nexport const draw = function (txt, id, ver) {\n  clear();\n  const conf = getConfig();\n  const gitGraphConfig = getConfig().gitGraph;\n  // try {\n  const parser = gitGraphParser.parser;\n  parser.yy = db;\n  parser.yy.clear();\n\n  log.debug('in gitgraph renderer', txt + '\\n', 'id:', id, ver);\n  // // Parse the graph definition\n  parser.parse(txt + '\\n');\n\n  const direction = db.getDirection();\n  allCommitsDict = db.getCommits();\n  const branches = db.getBranchesAsObjArray();\n\n  // Position branches vertically\n  let pos = 0;\n  branches.forEach((branch, index) => {\n    branchPos[branch.name] = { pos, index };\n    pos += 50;\n  });\n\n  const diagram = select(`[id=\"${id}\"]`);\n\n  // Adds title and description to the flow chart\n  addSVGAccessibilityFields(parser.yy, diagram, id);\n\n  drawCommits(diagram, allCommitsDict, false);\n  if (gitGraphConfig.showBranches) {\n    drawBranches(diagram, branches);\n  }\n  drawArrows(diagram, allCommitsDict);\n  drawCommits(diagram, allCommitsDict, true);\n\n  const padding = gitGraphConfig.diagramPadding;\n  const svgBounds = diagram.node().getBBox();\n  const width = svgBounds.width + padding * 2;\n  const height = svgBounds.height + padding * 2;\n\n  configureSvgSize(diagram, height, width, conf.useMaxWidth);\n  const vBox = `${svgBounds.x - padding} ${svgBounds.y - padding} ${width} ${height}`;\n  diagram.attr('viewBox', vBox);\n};\n\nexport default {\n  draw,\n};\n","const getStyles = (options) =>\n  `\n  .commit-id,\n  .commit-msg,\n  .branch-label {\n    fill: lightgrey;\n    color: lightgrey;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n  ${[0, 1, 2, 3, 4, 5, 6, 7]\n    .map(\n      (i) =>\n        `\n        .branch-label${i} { fill: ${options['gitBranchLabel' + i]}; }\n        .commit${i} { stroke: ${options['git' + i]}; fill: ${options['git' + i]}; }\n        .commit-highlight${i} { stroke: ${options['gitInv' + i]}; fill: ${options['gitInv' + i]}; }\n        .label${i}  { fill: ${options['git' + i]}; }\n        .arrow${i} { stroke: ${options['git' + i]}; }\n        `\n    )\n    .join('\\n')}\n\n  .branch {\n    stroke-width: 1;\n    stroke: ${options.lineColor};\n    stroke-dasharray: 2;\n  }\n  .commit-label { font-size: 10px; fill: ${options.commitLabelColor};}\n  .commit-label-bkg { font-size: 10px; fill: ${options.commitLabelBackground}; opacity: 0.5; }\n  .tag-label { font-size: 10px; fill: ${options.tagLabelColor};}\n  .tag-label-bkg { fill: ${options.tagLabelBackground}; stroke: ${options.tagLabelBorder}; }\n  .tag-hole { fill: ${options.textColor}; }\n\n  .commit-merge {\n    stroke: ${options.primaryColor};\n    fill: ${options.primaryColor};\n  }\n  .commit-reverse {\n    stroke: ${options.primaryColor};\n    fill: ${options.primaryColor};\n    stroke-width: 3;\n  }\n  .commit-highlight-outer {\n  }\n  .commit-highlight-inner {\n    stroke: ${options.primaryColor};\n    fill: ${options.primaryColor};\n  }\n\n  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}\n  }\n`;\n\nexport default getStyles;\n","/** Created by knut on 15-01-14. */\nimport { log } from '../../logger';\n\nvar message = '';\nvar info = false;\n\nexport const setMessage = (txt) => {\n  log.debug('Setting message to: ' + txt);\n  message = txt;\n};\n\nexport const getMessage = () => {\n  return message;\n};\n\nexport const setInfo = (inf) => {\n  info = inf;\n};\n\nexport const getInfo = () => {\n  return info;\n};\n\n// export const parseError = (err, hash) => {\n//   global.mermaidAPI.parseError(err, hash)\n// }\n\nexport default {\n  setMessage,\n  getMessage,\n  setInfo,\n  getInfo,\n  // parseError\n};\n","/** Created by knut on 14-12-11. */\nimport { select } from 'd3';\nimport db from './infoDb';\nimport infoParser from './parser/info';\nimport { log } from '../../logger';\nimport { getConfig } from '../../config';\n\nconst conf = {};\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n\n  keys.forEach(function (key) {\n    conf[key] = cnf[key];\n  });\n};\n\n/**\n * Draws a an info picture in the tag with id: id based on the graph definition in text.\n *\n * @param {any} text\n * @param {any} id\n * @param {any} version\n */\nexport const draw = (text, id, version) => {\n  try {\n    const parser = infoParser.parser;\n    parser.yy = db;\n    log.debug('Renering info diagram\\n' + text);\n\n    const securityLevel = getConfig().securityLevel;\n    // Handle root and ocument for when rendering in sanbox mode\n    let sandboxElement;\n    if (securityLevel === 'sandbox') {\n      sandboxElement = select('#i' + id);\n    }\n    const root =\n      securityLevel === 'sandbox'\n        ? select(sandboxElement.nodes()[0].contentDocument.body)\n        : select('body');\n    const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n    // Parse the graph definition\n    parser.parse(text);\n    log.debug('Parsed info diagram');\n    // Fetch the default direction, use TD if none was found\n    const svg = root.select('#' + id);\n\n    const g = svg.append('g');\n\n    g.append('text') // text label for the x axis\n      .attr('x', 100)\n      .attr('y', 40)\n      .attr('class', 'version')\n      .attr('font-size', '32px')\n      .style('text-anchor', 'middle')\n      .text('v ' + version);\n\n    svg.attr('height', 100);\n    svg.attr('width', 400);\n    // svg.attr('viewBox', '0 0 300 150');\n  } catch (e) {\n    log.error('Error while rendering info diagram');\n    log.error(e.message);\n  }\n};\n\nexport default {\n  setConf,\n  draw,\n};\n","const getStyles = () => ``;\r\n\r\nexport default getStyles;\r\n","import { log } from '../../logger';\nimport mermaidAPI from '../../mermaidAPI';\nimport * as configApi from '../../config';\nimport common from '../common/common';\nimport {\n  setTitle,\n  getTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n} from '../../commonDb';\n\nlet sections = {};\nlet title = '';\nlet description = '';\nlet showData = false;\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\nconst addSection = function (id, value) {\n  id = common.sanitizeText(id, configApi.getConfig());\n  if (typeof sections[id] === 'undefined') {\n    sections[id] = value;\n    log.debug('Added new section :', id);\n  }\n};\nconst getSections = () => sections;\n\nconst setShowData = function (toggle) {\n  showData = toggle;\n};\n\nconst getShowData = function () {\n  return showData;\n};\n\nconst cleanupValue = function (value) {\n  if (value.substring(0, 1) === ':') {\n    value = value.substring(1).trim();\n    return Number(value.trim());\n  } else {\n    return Number(value.trim());\n  }\n};\n\nconst clear = function () {\n  sections = {};\n  title = '';\n  showData = false;\n  commonClear();\n};\n\nexport const setPieTitle = function (txt) {\n  let sanitizedText = common.sanitizeText(txt, configApi.getConfig());\n  title = sanitizedText;\n};\n\nexport const getPieTitle = function () {\n  return title;\n};\n\nexport default {\n  parseDirective,\n  getConfig: () => configApi.getConfig().pie,\n  addSection,\n  getSections,\n  cleanupValue,\n  clear,\n  setTitle,\n  getTitle,\n  setPieTitle,\n  getPieTitle,\n  setShowData,\n  getShowData,\n  getAccDescription,\n  setAccDescription,\n};\n","/** Created by AshishJ on 11-09-2019. */\nimport { select, scaleOrdinal, pie as d3pie, arc } from 'd3';\nimport pieData from './pieDb';\nimport pieParser from './parser/pie';\nimport { log } from '../../logger';\nimport { configureSvgSize } from '../../utils';\nimport * as configApi from '../../config';\nimport addSVGAccessibilityFields from '../../accessibility';\n\nlet conf = configApi.getConfig();\n\n/**\n * Draws a Pie Chart with the data given in text.\n *\n * @param text\n * @param id\n */\nlet width;\nconst height = 450;\nexport const draw = (txt, id) => {\n  try {\n    conf = configApi.getConfig();\n    const parser = pieParser.parser;\n    parser.yy = pieData;\n    log.debug('Rendering info diagram\\n' + txt);\n\n    const securityLevel = configApi.getConfig().securityLevel;\n    // Handle root and ocument for when rendering in sanbox mode\n    let sandboxElement;\n    if (securityLevel === 'sandbox') {\n      sandboxElement = select('#i' + id);\n    }\n    const root =\n      securityLevel === 'sandbox'\n        ? select(sandboxElement.nodes()[0].contentDocument.body)\n        : select('body');\n    const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n    // Parse the Pie Chart definition\n    parser.yy.clear();\n    parser.parse(txt);\n    log.debug('Parsed info diagram');\n    const elem = doc.getElementById(id);\n    width = elem.parentElement.offsetWidth;\n\n    if (typeof width === 'undefined') {\n      width = 1200;\n    }\n\n    if (typeof conf.useWidth !== 'undefined') {\n      width = conf.useWidth;\n    }\n    if (typeof conf.pie.useWidth !== 'undefined') {\n      width = conf.pie.useWidth;\n    }\n\n    const diagram = root.select('#' + id);\n    configureSvgSize(diagram, height, width, conf.pie.useMaxWidth);\n\n    addSVGAccessibilityFields(parser.yy, diagram, id);\n    // Set viewBox\n    elem.setAttribute('viewBox', '0 0 ' + width + ' ' + height);\n\n    // Fetch the default direction, use TD if none was found\n    var margin = 40;\n    var legendRectSize = 18;\n    var legendSpacing = 4;\n\n    var radius = Math.min(width, height) / 2 - margin;\n\n    var svg = diagram\n      .append('g')\n      .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');\n\n    var data = pieData.getSections();\n    var sum = 0;\n    Object.keys(data).forEach(function (key) {\n      sum += data[key];\n    });\n\n    const themeVariables = conf.themeVariables;\n    var myGeneratedColors = [\n      themeVariables.pie1,\n      themeVariables.pie2,\n      themeVariables.pie3,\n      themeVariables.pie4,\n      themeVariables.pie5,\n      themeVariables.pie6,\n      themeVariables.pie7,\n      themeVariables.pie8,\n      themeVariables.pie9,\n      themeVariables.pie10,\n      themeVariables.pie11,\n      themeVariables.pie12,\n    ];\n\n    // Set the color scale\n    var color = scaleOrdinal().range(myGeneratedColors);\n\n    // Compute the position of each group on the pie:\n    var pie = d3pie().value(function (d) {\n      return d[1];\n    });\n    var dataReady = pie(Object.entries(data));\n\n    // Shape helper to build arcs:\n    var arcGenerator = arc().innerRadius(0).outerRadius(radius);\n\n    // Build the pie chart: each part of the pie is a path that we build using the arc function.\n    svg\n      .selectAll('mySlices')\n      .data(dataReady)\n      .enter()\n      .append('path')\n      .attr('d', arcGenerator)\n      .attr('fill', function (d) {\n        return color(d.data[0]);\n      })\n      .attr('class', 'pieCircle');\n\n    // Now add the percentage.\n    // Use the centroid method to get the best coordinates.\n    svg\n      .selectAll('mySlices')\n      .data(dataReady)\n      .enter()\n      .append('text')\n      .text(function (d) {\n        return ((d.data[1] / sum) * 100).toFixed(0) + '%';\n      })\n      .attr('transform', function (d) {\n        return 'translate(' + arcGenerator.centroid(d) + ')';\n      })\n      .style('text-anchor', 'middle')\n      .attr('class', 'slice');\n\n    svg\n      .append('text')\n      .text(parser.yy.getPieTitle())\n      .attr('x', 0)\n      .attr('y', -(height - 50) / 2)\n      .attr('class', 'pieTitleText');\n\n    // Add the legends/annotations for each section\n    var legend = svg\n      .selectAll('.legend')\n      .data(color.domain())\n      .enter()\n      .append('g')\n      .attr('class', 'legend')\n      .attr('transform', function (d, i) {\n        var height = legendRectSize + legendSpacing;\n        var offset = (height * color.domain().length) / 2;\n        var horz = 12 * legendRectSize;\n        var vert = i * height - offset;\n        return 'translate(' + horz + ',' + vert + ')';\n      });\n\n    legend\n      .append('rect')\n      .attr('width', legendRectSize)\n      .attr('height', legendRectSize)\n      .style('fill', color)\n      .style('stroke', color);\n\n    legend\n      .data(dataReady)\n      .append('text')\n      .attr('x', legendRectSize + legendSpacing)\n      .attr('y', legendRectSize - legendSpacing)\n      .text(function (d) {\n        if (parser.yy.getShowData() || conf.showData || conf.pie.showData) {\n          return d.data[0] + ' [' + d.data[1] + ']';\n        } else {\n          return d.data[0];\n        }\n      });\n  } catch (e) {\n    log.error('Error while rendering info diagram');\n    log.error(e);\n  }\n};\n\nexport default {\n  draw,\n};\n","const getStyles = (options) =>\n  `\n  .pieCircle{\n    stroke: ${options.pieStrokeColor};\n    stroke-width : ${options.pieStrokeWidth};\n    opacity : ${options.pieOpacity};\n  }\n  .pieTitleText {\n    text-anchor: middle;\n    font-size: ${options.pieTitleTextSize};\n    fill: ${options.pieTitleTextColor};\n    font-family: ${options.fontFamily};\n  }\n  .slice {\n    font-family: ${options.fontFamily};\n    fill: ${options.pieSectionTextColor};\n    font-size:${options.pieSectionTextSize};\n    // fill: white;\n  }\n  .legend text {\n    fill: ${options.pieLegendTextColor};\n    font-family: ${options.fontFamily};\n    font-size: ${options.pieLegendTextSize};\n  }\n`;\n\nexport default getStyles;\n","import * as configApi from '../../config';\nimport { log } from '../../logger';\nimport mermaidAPI from '../../mermaidAPI';\nimport common from '../common/common';\nimport {\n  setTitle,\n  getTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n} from '../../commonDb';\n\nlet relations = [];\nlet latestRequirement = {};\nlet requirements = {};\nlet latestElement = {};\nlet elements = {};\nlet title = '';\nlet accDescription = '';\n\nconst sanitizeText = (txt) => common.sanitizeText(txt, configApi.getConfig());\n\nconst RequirementType = {\n  REQUIREMENT: 'Requirement',\n  FUNCTIONAL_REQUIREMENT: 'Functional Requirement',\n  INTERFACE_REQUIREMENT: 'Interface Requirement',\n  PERFORMANCE_REQUIREMENT: 'Performance Requirement',\n  PHYSICAL_REQUIREMENT: 'Physical Requirement',\n  DESIGN_CONSTRAINT: 'Design Constraint',\n};\n\nconst RiskLevel = {\n  LOW_RISK: 'Low',\n  MED_RISK: 'Medium',\n  HIGH_RISK: 'High',\n};\n\nconst VerifyType = {\n  VERIFY_ANALYSIS: 'Analysis',\n  VERIFY_DEMONSTRATION: 'Demonstration',\n  VERIFY_INSPECTION: 'Inspection',\n  VERIFY_TEST: 'Test',\n};\n\nconst Relationships = {\n  CONTAINS: 'contains',\n  COPIES: 'copies',\n  DERIVES: 'derives',\n  SATISFIES: 'satisfies',\n  VERIFIES: 'verifies',\n  REFINES: 'refines',\n  TRACES: 'traces',\n};\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\nconst addRequirement = (name, type) => {\n  if (typeof requirements[name] === 'undefined') {\n    requirements[name] = {\n      name,\n      type,\n\n      id: latestRequirement.id,\n      text: latestRequirement.text,\n      risk: latestRequirement.risk,\n      verifyMethod: latestRequirement.verifyMethod,\n    };\n  }\n  latestRequirement = {};\n\n  return requirements[name];\n};\n\nconst getRequirements = () => requirements;\n\nconst setNewReqId = (id) => {\n  if (typeof latestRequirement != 'undefined') {\n    latestRequirement.id = id;\n  }\n};\n\nconst setNewReqText = (text) => {\n  if (typeof latestRequirement != 'undefined') {\n    latestRequirement.text = text;\n  }\n};\n\nconst setNewReqRisk = (risk) => {\n  if (typeof latestRequirement != 'undefined') {\n    latestRequirement.risk = risk;\n  }\n};\n\nconst setNewReqVerifyMethod = (verifyMethod) => {\n  if (typeof latestRequirement != 'undefined') {\n    latestRequirement.verifyMethod = verifyMethod;\n  }\n};\n\nconst addElement = (name) => {\n  if (typeof elements[name] === 'undefined') {\n    elements[name] = {\n      name,\n\n      type: latestElement.type,\n      docRef: latestElement.docRef,\n    };\n    log.info('Added new requirement: ', name);\n  }\n  latestElement = {};\n\n  return elements[name];\n};\n\nconst getElements = () => elements;\n\nconst setNewElementType = (type) => {\n  if (typeof latestElement != 'undefined') {\n    latestElement.type = type;\n  }\n};\n\nconst setNewElementDocRef = (docRef) => {\n  if (typeof latestElement != 'undefined') {\n    latestElement.docRef = docRef;\n  }\n};\n\nconst addRelationship = (type, src, dst) => {\n  relations.push({\n    type,\n    src,\n    dst,\n  });\n};\n\nconst getRelationships = () => relations;\n\nconst clear = () => {\n  relations = [];\n  latestRequirement = {};\n  requirements = {};\n  latestElement = {};\n  elements = {};\n  commonClear();\n};\n\nexport default {\n  RequirementType,\n  RiskLevel,\n  VerifyType,\n  Relationships,\n\n  parseDirective,\n  getConfig: () => configApi.getConfig().req,\n\n  addRequirement,\n  getRequirements,\n  setNewReqId,\n  setNewReqText,\n  setNewReqRisk,\n  setNewReqVerifyMethod,\n  setTitle,\n  getTitle,\n  setAccDescription,\n  getAccDescription,\n\n  addElement,\n  getElements,\n  setNewElementType,\n  setNewElementDocRef,\n\n  addRelationship,\n  getRelationships,\n\n  clear,\n};\n","const ReqMarkers = {\n  CONTAINS: 'contains',\n  ARROW: 'arrow',\n};\n\nconst insertLineEndings = (parentNode, conf) => {\n  let containsNode = parentNode\n    .append('defs')\n    .append('marker')\n    .attr('id', ReqMarkers.CONTAINS + '_line_ending')\n    .attr('refX', 0)\n    .attr('refY', conf.line_height / 2)\n    .attr('markerWidth', conf.line_height)\n    .attr('markerHeight', conf.line_height)\n    .attr('orient', 'auto')\n    .append('g');\n\n  containsNode\n    .append('circle')\n    .attr('cx', conf.line_height / 2)\n    .attr('cy', conf.line_height / 2)\n    .attr('r', conf.line_height / 2)\n    // .attr('stroke', conf.rect_border_color)\n    // .attr('stroke-width', 1)\n    .attr('fill', 'none');\n\n  containsNode\n    .append('line')\n    .attr('x1', 0)\n    .attr('x2', conf.line_height)\n    .attr('y1', conf.line_height / 2)\n    .attr('y2', conf.line_height / 2)\n    // .attr('stroke', conf.rect_border_color)\n    .attr('stroke-width', 1);\n\n  containsNode\n    .append('line')\n    .attr('y1', 0)\n    .attr('y2', conf.line_height)\n    .attr('x1', conf.line_height / 2)\n    .attr('x2', conf.line_height / 2)\n    // .attr('stroke', conf.rect_border_color)\n    .attr('stroke-width', 1);\n\n  parentNode\n    .append('defs')\n    .append('marker')\n    .attr('id', ReqMarkers.ARROW + '_line_ending')\n    .attr('refX', conf.line_height)\n    .attr('refY', 0.5 * conf.line_height)\n    .attr('markerWidth', conf.line_height)\n    .attr('markerHeight', conf.line_height)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr(\n      'd',\n      `M0,0\n      L${conf.line_height},${conf.line_height / 2}\n      M${conf.line_height},${conf.line_height / 2}\n      L0,${conf.line_height}`\n    )\n    .attr('stroke-width', 1);\n  // .attr('stroke', conf.rect_border_color);\n};\n\nexport default {\n  ReqMarkers,\n  insertLineEndings,\n};\n","import { line, select } from 'd3';\nimport dagre from 'dagre';\nimport graphlib from 'graphlib';\n// import * as configApi from '../../config';\nimport { log } from '../../logger';\nimport { configureSvgSize } from '../../utils';\nimport common from '../common/common';\nimport { parser } from './parser/requirementDiagram';\nimport requirementDb from './requirementDb';\nimport markers from './requirementMarkers';\nimport { getConfig } from '../../config';\nimport addSVGAccessibilityFields from '../../accessibility';\n\nconst conf = {};\nlet relCnt = 0;\n\nexport const setConf = function (cnf) {\n  if (typeof cnf === 'undefined') {\n    return;\n  }\n  const keys = Object.keys(cnf);\n  for (let i = 0; i < keys.length; i++) {\n    conf[keys[i]] = cnf[keys[i]];\n  }\n};\n\nconst newRectNode = (parentNode, id) => {\n  return parentNode\n    .insert('rect', '#' + id)\n    .attr('class', 'req reqBox')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', conf.rect_min_width + 'px')\n    .attr('height', conf.rect_min_height + 'px');\n};\n\nconst newTitleNode = (parentNode, id, txts) => {\n  let x = conf.rect_min_width / 2;\n\n  let title = parentNode\n    .append('text')\n    .attr('class', 'req reqLabel reqTitle')\n    .attr('id', id)\n    .attr('x', x)\n    .attr('y', conf.rect_padding)\n    .attr('dominant-baseline', 'hanging');\n  // .attr(\n  //   'style',\n  //   'font-family: ' + configApi.getConfig().fontFamily + '; font-size: ' + conf.fontSize + 'px'\n  // )\n  let i = 0;\n  txts.forEach((textStr) => {\n    if (i == 0) {\n      title\n        .append('tspan')\n        .attr('text-anchor', 'middle')\n        .attr('x', conf.rect_min_width / 2)\n        .attr('dy', 0)\n        .text(textStr);\n    } else {\n      title\n        .append('tspan')\n        .attr('text-anchor', 'middle')\n        .attr('x', conf.rect_min_width / 2)\n        .attr('dy', conf.line_height * 0.75)\n        .text(textStr);\n    }\n    i++;\n  });\n\n  let yPadding = 1.5 * conf.rect_padding;\n  let linePadding = i * conf.line_height * 0.75;\n  let totalY = yPadding + linePadding;\n\n  parentNode\n    .append('line')\n    .attr('class', 'req-title-line')\n    .attr('x1', '0')\n    .attr('x2', conf.rect_min_width)\n    .attr('y1', totalY)\n    .attr('y2', totalY);\n\n  return {\n    titleNode: title,\n    y: totalY,\n  };\n};\n\nconst newBodyNode = (parentNode, id, txts, yStart) => {\n  let body = parentNode\n    .append('text')\n    .attr('class', 'req reqLabel')\n    .attr('id', id)\n    .attr('x', conf.rect_padding)\n    .attr('y', yStart)\n    .attr('dominant-baseline', 'hanging');\n  // .attr(\n  //   'style',\n  //   'font-family: ' + configApi.getConfig().fontFamily + '; font-size: ' + conf.fontSize + 'px'\n  // );\n\n  let currentRow = 0;\n  const charLimit = 30;\n  let wrappedTxts = [];\n  txts.forEach((textStr) => {\n    let currentTextLen = textStr.length;\n    while (currentTextLen > charLimit && currentRow < 3) {\n      let firstPart = textStr.substring(0, charLimit);\n      textStr = textStr.substring(charLimit, textStr.length);\n      currentTextLen = textStr.length;\n      wrappedTxts[wrappedTxts.length] = firstPart;\n      currentRow++;\n    }\n    if (currentRow == 3) {\n      let lastStr = wrappedTxts[wrappedTxts.length - 1];\n      wrappedTxts[wrappedTxts.length - 1] = lastStr.substring(0, lastStr.length - 4) + '...';\n    } else {\n      wrappedTxts[wrappedTxts.length] = textStr;\n    }\n    currentRow = 0;\n  });\n\n  wrappedTxts.forEach((textStr) => {\n    body.append('tspan').attr('x', conf.rect_padding).attr('dy', conf.line_height).text(textStr);\n  });\n\n  return body;\n};\n\nconst addEdgeLabel = (parentNode, svgPath, conf, txt) => {\n  // Find the half-way point\n  const len = svgPath.node().getTotalLength();\n  const labelPoint = svgPath.node().getPointAtLength(len * 0.5);\n\n  // Append a text node containing the label\n  const labelId = 'rel' + relCnt;\n  relCnt++;\n\n  const labelNode = parentNode\n    .append('text')\n    .attr('class', 'req relationshipLabel')\n    .attr('id', labelId)\n    .attr('x', labelPoint.x)\n    .attr('y', labelPoint.y)\n    .attr('text-anchor', 'middle')\n    .attr('dominant-baseline', 'middle')\n    // .attr('style', 'font-family: ' + conf.fontFamily + '; font-size: ' + conf.fontSize + 'px')\n    .text(txt);\n\n  // Figure out how big the opaque 'container' rectangle needs to be\n  const labelBBox = labelNode.node().getBBox();\n\n  // Insert the opaque rectangle before the text label\n  parentNode\n    .insert('rect', '#' + labelId)\n    .attr('class', 'req reqLabelBox')\n    .attr('x', labelPoint.x - labelBBox.width / 2)\n    .attr('y', labelPoint.y - labelBBox.height / 2)\n    .attr('width', labelBBox.width)\n    .attr('height', labelBBox.height)\n    .attr('fill', 'white')\n    .attr('fill-opacity', '85%');\n};\n\nconst drawRelationshipFromLayout = function (svg, rel, g, insert) {\n  // Find the edge relating to this relationship\n  const edge = g.edge(elementString(rel.src), elementString(rel.dst));\n\n  // Get a function that will generate the line path\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    });\n\n  // Insert the line at the right place\n  const svgPath = svg\n    .insert('path', '#' + insert)\n    .attr('class', 'er relationshipLine')\n    .attr('d', lineFunction(edge.points))\n    .attr('fill', 'none');\n\n  if (rel.type == requirementDb.Relationships.CONTAINS) {\n    svgPath.attr(\n      'marker-start',\n      'url(' + common.getUrl(conf.arrowMarkerAbsolute) + '#' + rel.type + '_line_ending' + ')'\n    );\n  } else {\n    svgPath.attr('stroke-dasharray', '10,7');\n    svgPath.attr(\n      'marker-end',\n      'url(' +\n        common.getUrl(conf.arrowMarkerAbsolute) +\n        '#' +\n        markers.ReqMarkers.ARROW +\n        '_line_ending' +\n        ')'\n    );\n  }\n\n  addEdgeLabel(svg, svgPath, conf, `<<${rel.type}>>`);\n\n  return;\n};\n\nexport const drawReqs = (reqs, graph, svgNode) => {\n  Object.keys(reqs).forEach((reqName) => {\n    let req = reqs[reqName];\n    reqName = elementString(reqName);\n    log.info('Added new requirement: ', reqName);\n\n    const groupNode = svgNode.append('g').attr('id', reqName);\n    const textId = 'req-' + reqName;\n    const rectNode = newRectNode(groupNode, textId);\n\n    let nodes = [];\n\n    let titleNodeInfo = newTitleNode(groupNode, reqName + '_title', [\n      `<<${req.type}>>`,\n      `${req.name}`,\n    ]);\n\n    nodes.push(titleNodeInfo.titleNode);\n\n    let bodyNode = newBodyNode(\n      groupNode,\n      reqName + '_body',\n      [\n        `Id: ${req.id}`,\n        `Text: ${req.text}`,\n        `Risk: ${req.risk}`,\n        `Verification: ${req.verifyMethod}`,\n      ],\n      titleNodeInfo.y\n    );\n\n    nodes.push(bodyNode);\n\n    const rectBBox = rectNode.node().getBBox();\n\n    // Add the entity to the graph\n    graph.setNode(reqName, {\n      width: rectBBox.width,\n      height: rectBBox.height,\n      shape: 'rect',\n      id: reqName,\n    });\n  });\n};\n\nexport const drawElements = (els, graph, svgNode) => {\n  Object.keys(els).forEach((elName) => {\n    let el = els[elName];\n    const id = elementString(elName);\n\n    const groupNode = svgNode.append('g').attr('id', id);\n    const textId = 'element-' + id;\n    const rectNode = newRectNode(groupNode, textId);\n\n    let nodes = [];\n\n    let titleNodeInfo = newTitleNode(groupNode, textId + '_title', [`<<Element>>`, `${elName}`]);\n\n    nodes.push(titleNodeInfo.titleNode);\n\n    let bodyNode = newBodyNode(\n      groupNode,\n      textId + '_body',\n      [`Type: ${el.type || 'Not Specified'}`, `Doc Ref: ${el.docRef || 'None'}`],\n      titleNodeInfo.y\n    );\n\n    nodes.push(bodyNode);\n\n    const rectBBox = rectNode.node().getBBox();\n\n    // Add the entity to the graph\n    graph.setNode(id, {\n      width: rectBBox.width,\n      height: rectBBox.height,\n      shape: 'rect',\n      id: id,\n    });\n  });\n};\n\nconst addRelationships = (relationships, g) => {\n  relationships.forEach(function (r) {\n    let src = elementString(r.src);\n    let dst = elementString(r.dst);\n    g.setEdge(src, dst, { relationship: r });\n  });\n  return relationships;\n};\n\nconst adjustEntities = function (svgNode, graph) {\n  graph.nodes().forEach(function (v) {\n    if (typeof v !== 'undefined' && typeof graph.node(v) !== 'undefined') {\n      svgNode.select('#' + v);\n      svgNode\n        .select('#' + v)\n        .attr(\n          'transform',\n          'translate(' +\n            (graph.node(v).x - graph.node(v).width / 2) +\n            ',' +\n            (graph.node(v).y - graph.node(v).height / 2) +\n            ' )'\n        );\n    }\n  });\n  return;\n};\n\nconst elementString = (str) => {\n  return str.replace(/\\s/g, '').replace(/\\./g, '_');\n};\n\nexport const draw = (text, id) => {\n  parser.yy = requirementDb;\n  parser.yy.clear();\n  parser.parse(text);\n\n  const securityLevel = getConfig().securityLevel;\n  // Handle root and ocument for when rendering in sanbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  const svg = root.select(`[id='${id}']`);\n  markers.insertLineEndings(svg, conf);\n\n  const g = new graphlib.Graph({\n    multigraph: false,\n    compound: false,\n    directed: true,\n  })\n    .setGraph({\n      rankdir: conf.layoutDirection,\n      marginx: 20,\n      marginy: 20,\n      nodesep: 100,\n      edgesep: 100,\n      ranksep: 100,\n    })\n    .setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n  let requirements = requirementDb.getRequirements();\n  let elements = requirementDb.getElements();\n  let relationships = requirementDb.getRelationships();\n\n  drawReqs(requirements, g, svg);\n  drawElements(elements, g, svg);\n  addRelationships(relationships, g);\n  dagre.layout(g);\n  adjustEntities(svg, g);\n\n  relationships.forEach(function (rel) {\n    drawRelationshipFromLayout(svg, rel, g, id);\n  });\n\n  // svg.attr('height', '500px');\n  const padding = conf.rect_padding;\n  const svgBounds = svg.node().getBBox();\n  const width = svgBounds.width + padding * 2;\n  const height = svgBounds.height + padding * 2;\n\n  configureSvgSize(svg, height, width, conf.useMaxWidth);\n\n  svg.attr('viewBox', `${svgBounds.x - padding} ${svgBounds.y - padding} ${width} ${height}`);\n  // Adds title and description to the requirements diagram\n  addSVGAccessibilityFields(parser.yy, svg, id);\n};\n\nexport default {\n  setConf,\n  draw,\n};\n","const getStyles = (options) => `\n\n  marker {\n    fill: ${options.relationColor};\n    stroke: ${options.relationColor};\n  }\n\n  marker.cross {\n    stroke: ${options.lineColor};\n  }\n\n  svg {\n    font-family: ${options.fontFamily};\n    font-size: ${options.fontSize};\n  }\n\n  .reqBox {\n    fill: ${options.requirementBackground};\n    fill-opacity: 100%;\n    stroke: ${options.requirementBorderColor};\n    stroke-width: ${options.requirementBorderSize};\n  }\n  \n  .reqTitle, .reqLabel{\n    fill:  ${options.requirementTextColor};\n  }\n  .reqLabelBox {\n    fill: ${options.relationLabelBackground};\n    fill-opacity: 100%;\n  }\n\n  .req-title-line {\n    stroke: ${options.requirementBorderColor};\n    stroke-width: ${options.requirementBorderSize};\n  }\n  .relationshipLine {\n    stroke: ${options.relationColor};\n    stroke-width: 1;\n  }\n  .relationshipLabel {\n    fill: ${options.relationLabelColor};\n  }\n\n`;\n// fill', conf.rect_fill)\nexport default getStyles;\n","import mermaidAPI from '../../mermaidAPI';\nimport * as configApi from '../../config';\nimport { log } from '../../logger';\nimport { sanitizeText } from '../common/common';\nimport {\n  setTitle,\n  getTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n} from '../../commonDb';\n\nlet prevActor = undefined;\nlet actors = {};\nlet messages = [];\nconst notes = [];\nlet diagramTitle = '';\nlet description = '';\nlet sequenceNumbersEnabled = false;\nlet wrapEnabled = false;\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\nexport const addActor = function (id, name, description, type) {\n  // Don't allow description nulling\n  const old = actors[id];\n  if (old && name === old.name && description == null) return;\n\n  // Don't allow null descriptions, either\n  if (description == null || description.text == null) {\n    description = { text: name, wrap: null, type };\n  }\n  if (type == null || description.text == null) {\n    description = { text: name, wrap: null, type };\n  }\n\n  actors[id] = {\n    name: name,\n    description: description.text,\n    wrap: (description.wrap === undefined && autoWrap()) || !!description.wrap,\n    prevActor: prevActor,\n    links: {},\n    properties: {},\n    actorCnt: null,\n    rectData: null,\n    type: type || 'participant',\n  };\n  if (prevActor && actors[prevActor]) {\n    actors[prevActor].nextActor = id;\n  }\n\n  prevActor = id;\n};\n\nconst activationCount = (part) => {\n  let i;\n  let count = 0;\n  for (i = 0; i < messages.length; i++) {\n    if (messages[i].type === LINETYPE.ACTIVE_START) {\n      if (messages[i].from.actor === part) {\n        count++;\n      }\n    }\n    if (messages[i].type === LINETYPE.ACTIVE_END) {\n      if (messages[i].from.actor === part) {\n        count--;\n      }\n    }\n  }\n  return count;\n};\n\nexport const addMessage = function (idFrom, idTo, message, answer) {\n  messages.push({\n    from: idFrom,\n    to: idTo,\n    message: message.text,\n    wrap: (message.wrap === undefined && autoWrap()) || !!message.wrap,\n    answer: answer,\n  });\n};\n\nexport const addSignal = function (\n  idFrom,\n  idTo,\n  message = { text: undefined, wrap: undefined },\n  messageType\n) {\n  if (messageType === LINETYPE.ACTIVE_END) {\n    const cnt = activationCount(idFrom.actor);\n    if (cnt < 1) {\n      // Bail out as there is an activation signal from an inactive participant\n      let error = new Error('Trying to inactivate an inactive participant (' + idFrom.actor + ')');\n      error.hash = {\n        text: '->>-',\n        token: '->>-',\n        line: '1',\n        loc: { first_line: 1, last_line: 1, first_column: 1, last_column: 1 },\n        expected: [\"'ACTIVE_PARTICIPANT'\"],\n      };\n      throw error;\n    }\n  }\n  messages.push({\n    from: idFrom,\n    to: idTo,\n    message: message.text,\n    wrap: (message.wrap === undefined && autoWrap()) || !!message.wrap,\n    type: messageType,\n  });\n  return true;\n};\n\nexport const getMessages = function () {\n  return messages;\n};\n\nexport const getActors = function () {\n  return actors;\n};\nexport const getActor = function (id) {\n  return actors[id];\n};\nexport const getActorKeys = function () {\n  return Object.keys(actors);\n};\nexport const enableSequenceNumbers = function () {\n  sequenceNumbersEnabled = true;\n};\nexport const disableSequenceNumbers = function () {\n  sequenceNumbersEnabled = false;\n};\nexport const showSequenceNumbers = () => sequenceNumbersEnabled;\n\nexport const setWrap = function (wrapSetting) {\n  wrapEnabled = wrapSetting;\n};\n\nexport const autoWrap = () => wrapEnabled;\n\nexport const clear = function () {\n  actors = {};\n  messages = [];\n  sequenceNumbersEnabled = false;\n  diagramTitle = '';\n  commonClear();\n};\n\nexport const parseMessage = function (str) {\n  const _str = str.trim();\n  const message = {\n    text: _str.replace(/^[:]?(?:no)?wrap:/, '').trim(),\n    wrap:\n      _str.match(/^[:]?wrap:/) !== null\n        ? true\n        : _str.match(/^[:]?nowrap:/) !== null\n        ? false\n        : undefined,\n  };\n  log.debug('parseMessage:', message);\n  return message;\n};\n\nexport const LINETYPE = {\n  SOLID: 0,\n  DOTTED: 1,\n  NOTE: 2,\n  SOLID_CROSS: 3,\n  DOTTED_CROSS: 4,\n  SOLID_OPEN: 5,\n  DOTTED_OPEN: 6,\n  LOOP_START: 10,\n  LOOP_END: 11,\n  ALT_START: 12,\n  ALT_ELSE: 13,\n  ALT_END: 14,\n  OPT_START: 15,\n  OPT_END: 16,\n  ACTIVE_START: 17,\n  ACTIVE_END: 18,\n  PAR_START: 19,\n  PAR_AND: 20,\n  PAR_END: 21,\n  RECT_START: 22,\n  RECT_END: 23,\n  SOLID_POINT: 24,\n  DOTTED_POINT: 25,\n  AUTONUMBER: 26,\n};\n\nexport const ARROWTYPE = {\n  FILLED: 0,\n  OPEN: 1,\n};\n\nexport const PLACEMENT = {\n  LEFTOF: 0,\n  RIGHTOF: 1,\n  OVER: 2,\n};\n\nexport const addNote = function (actor, placement, message) {\n  const note = {\n    actor: actor,\n    placement: placement,\n    message: message.text,\n    wrap: (message.wrap === undefined && autoWrap()) || !!message.wrap,\n  };\n\n  // Coerce actor into a [to, from, ...] array\n  const actors = [].concat(actor, actor);\n\n  notes.push(note);\n  messages.push({\n    from: actors[0],\n    to: actors[1],\n    message: message.text,\n    wrap: (message.wrap === undefined && autoWrap()) || !!message.wrap,\n    type: LINETYPE.NOTE,\n    placement: placement,\n  });\n};\n\nexport const addLinks = function (actorId, text) {\n  // find the actor\n  const actor = getActor(actorId);\n  // JSON.parse the text\n  try {\n    let sanitizedText = sanitizeText(text.text, configApi.getConfig());\n    sanitizedText = sanitizedText.replace(/&amp;/g, '&');\n    sanitizedText = sanitizedText.replace(/&equals;/g, '=');\n    const links = JSON.parse(sanitizedText);\n    // add the deserialized text to the actor's links field.\n    insertLinks(actor, links);\n  } catch (e) {\n    log.error('error while parsing actor link text', e);\n  }\n};\n\nexport const addALink = function (actorId, text) {\n  // find the actor\n  const actor = getActor(actorId);\n  try {\n    const links = {};\n    let sanitizedText = sanitizeText(text.text, configApi.getConfig());\n    var sep = sanitizedText.indexOf('@');\n    sanitizedText = sanitizedText.replace(/&amp;/g, '&');\n    sanitizedText = sanitizedText.replace(/&equals;/g, '=');\n    var label = sanitizedText.slice(0, sep - 1).trim();\n    var link = sanitizedText.slice(sep + 1).trim();\n\n    links[label] = link;\n    // add the deserialized text to the actor's links field.\n    insertLinks(actor, links);\n  } catch (e) {\n    log.error('error while parsing actor link text', e);\n  }\n};\n\n/**\n * @param {any} actor\n * @param {any} links\n */\nfunction insertLinks(actor, links) {\n  if (actor.links == null) {\n    actor.links = links;\n  } else {\n    for (let key in links) {\n      actor.links[key] = links[key];\n    }\n  }\n}\n\nexport const addProperties = function (actorId, text) {\n  // find the actor\n  const actor = getActor(actorId);\n  // JSON.parse the text\n  try {\n    let sanitizedText = sanitizeText(text.text, configApi.getConfig());\n    const properties = JSON.parse(sanitizedText);\n    // add the deserialized text to the actor's property field.\n    insertProperties(actor, properties);\n  } catch (e) {\n    log.error('error while parsing actor properties text', e);\n  }\n};\n\n/**\n * @param {any} actor\n * @param {any} properties\n */\nfunction insertProperties(actor, properties) {\n  if (actor.properties == null) {\n    actor.properties = properties;\n  } else {\n    for (let key in properties) {\n      actor.properties[key] = properties[key];\n    }\n  }\n}\n\nexport const addDetails = function (actorId, text) {\n  // find the actor\n  const actor = getActor(actorId);\n  const elem = document.getElementById(text.text);\n\n  // JSON.parse the text\n  try {\n    const text = elem.innerHTML;\n    const details = JSON.parse(text);\n    // add the deserialized text to the actor's property field.\n    if (details['properties']) {\n      insertProperties(actor, details['properties']);\n    }\n\n    if (details['links']) {\n      insertLinks(actor, details['links']);\n    }\n  } catch (e) {\n    log.error('error while parsing actor details text', e);\n  }\n};\n\nexport const getActorProperty = function (actor, key) {\n  if (typeof actor !== 'undefined' && typeof actor.properties !== 'undefined') {\n    return actor.properties[key];\n  }\n\n  return undefined;\n};\n\nexport const setDiagramTitle = function (txt) {\n  let sanitizedText = sanitizeText(txt, configApi.getConfig());\n  diagramTitle = sanitizedText;\n};\n\nexport const getDiagramTitle = function () {\n  return diagramTitle;\n};\n\nexport const apply = function (param) {\n  if (param instanceof Array) {\n    param.forEach(function (item) {\n      apply(item);\n    });\n  } else {\n    switch (param.type) {\n      case 'sequenceIndex':\n        messages.push({\n          from: undefined,\n          to: undefined,\n          message: {\n            start: param.sequenceIndex,\n            step: param.sequenceIndexStep,\n            visible: param.sequenceVisible,\n          },\n          wrap: false,\n          type: param.signalType,\n        });\n        break;\n      case 'addParticipant':\n        addActor(param.actor, param.actor, param.description, 'participant');\n        break;\n      case 'addActor':\n        addActor(param.actor, param.actor, param.description, 'actor');\n        break;\n      case 'activeStart':\n        addSignal(param.actor, undefined, undefined, param.signalType);\n        break;\n      case 'activeEnd':\n        addSignal(param.actor, undefined, undefined, param.signalType);\n        break;\n      case 'addNote':\n        addNote(param.actor, param.placement, param.text);\n        break;\n      case 'addLinks':\n        addLinks(param.actor, param.text);\n        break;\n      case 'addALink':\n        addALink(param.actor, param.text);\n        break;\n      case 'addProperties':\n        addProperties(param.actor, param.text);\n        break;\n      case 'addDetails':\n        addDetails(param.actor, param.text);\n        break;\n      case 'addMessage':\n        addSignal(param.from, param.to, param.msg, param.signalType);\n        break;\n      case 'loopStart':\n        addSignal(undefined, undefined, param.loopText, param.signalType);\n        break;\n      case 'loopEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'rectStart':\n        addSignal(undefined, undefined, param.color, param.signalType);\n        break;\n      case 'rectEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'optStart':\n        addSignal(undefined, undefined, param.optText, param.signalType);\n        break;\n      case 'optEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'altStart':\n        addSignal(undefined, undefined, param.altText, param.signalType);\n        break;\n      case 'else':\n        addSignal(undefined, undefined, param.altText, param.signalType);\n        break;\n      case 'altEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'setTitle':\n        setTitle(param.text);\n        break;\n      case 'parStart':\n        addSignal(undefined, undefined, param.parText, param.signalType);\n        break;\n      case 'and':\n        addSignal(undefined, undefined, param.parText, param.signalType);\n        break;\n      case 'parEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n    }\n  }\n};\n\nexport default {\n  addActor,\n  addMessage,\n  addSignal,\n  addLinks,\n  addDetails,\n  addProperties,\n  autoWrap,\n  setWrap,\n  enableSequenceNumbers,\n  disableSequenceNumbers,\n  showSequenceNumbers,\n  getMessages,\n  getActors,\n  getActor,\n  getActorKeys,\n  getActorProperty,\n  getTitle,\n  getDiagramTitle,\n  parseDirective,\n  getConfig: () => configApi.getConfig().sequence,\n  clear,\n  parseMessage,\n  LINETYPE,\n  ARROWTYPE,\n  PLACEMENT,\n  addNote,\n  setTitle,\n  setDiagramTitle,\n  apply,\n  setAccDescription,\n  getAccDescription,\n};\n","import { select, selectAll } from 'd3';\nimport svgDraw, { drawText, fixLifeLineHeights } from './svgDraw';\nimport { log } from '../../logger';\nimport { parser } from './parser/sequenceDiagram';\nimport common from '../common/common';\nimport sequenceDb from './sequenceDb';\nimport * as configApi from '../../config';\nimport utils, { assignWithDepth, configureSvgSize } from '../../utils';\nimport addSVGAccessibilityFields from '../../accessibility';\n\nparser.yy = sequenceDb;\n\nlet conf = {};\n\nexport const bounds = {\n  data: {\n    startx: undefined,\n    stopx: undefined,\n    starty: undefined,\n    stopy: undefined,\n  },\n  verticalPos: 0,\n  sequenceItems: [],\n  activations: [],\n  models: {\n    getHeight: function () {\n      return (\n        Math.max.apply(\n          null,\n          this.actors.length === 0 ? [0] : this.actors.map((actor) => actor.height || 0)\n        ) +\n        (this.loops.length === 0\n          ? 0\n          : this.loops.map((it) => it.height || 0).reduce((acc, h) => acc + h)) +\n        (this.messages.length === 0\n          ? 0\n          : this.messages.map((it) => it.height || 0).reduce((acc, h) => acc + h)) +\n        (this.notes.length === 0\n          ? 0\n          : this.notes.map((it) => it.height || 0).reduce((acc, h) => acc + h))\n      );\n    },\n    clear: function () {\n      this.actors = [];\n      this.loops = [];\n      this.messages = [];\n      this.notes = [];\n    },\n    addActor: function (actorModel) {\n      this.actors.push(actorModel);\n    },\n    addLoop: function (loopModel) {\n      this.loops.push(loopModel);\n    },\n    addMessage: function (msgModel) {\n      this.messages.push(msgModel);\n    },\n    addNote: function (noteModel) {\n      this.notes.push(noteModel);\n    },\n    lastActor: function () {\n      return this.actors[this.actors.length - 1];\n    },\n    lastLoop: function () {\n      return this.loops[this.loops.length - 1];\n    },\n    lastMessage: function () {\n      return this.messages[this.messages.length - 1];\n    },\n    lastNote: function () {\n      return this.notes[this.notes.length - 1];\n    },\n    actors: [],\n    loops: [],\n    messages: [],\n    notes: [],\n  },\n  init: function () {\n    this.sequenceItems = [];\n    this.activations = [];\n    this.models.clear();\n    this.data = {\n      startx: undefined,\n      stopx: undefined,\n      starty: undefined,\n      stopy: undefined,\n    };\n    this.verticalPos = 0;\n    setConf(parser.yy.getConfig());\n  },\n  updateVal: function (obj, key, val, fun) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = val;\n    } else {\n      obj[key] = fun(val, obj[key]);\n    }\n  },\n  updateBounds: function (startx, starty, stopx, stopy) {\n    const _self = this;\n    let cnt = 0;\n    /** @param {any} type */\n    function updateFn(type) {\n      return function updateItemBounds(item) {\n        cnt++;\n        // The loop sequenceItems is a stack so the biggest margins in the beginning of the sequenceItems\n        const n = _self.sequenceItems.length - cnt + 1;\n\n        _self.updateVal(item, 'starty', starty - n * conf.boxMargin, Math.min);\n        _self.updateVal(item, 'stopy', stopy + n * conf.boxMargin, Math.max);\n\n        _self.updateVal(bounds.data, 'startx', startx - n * conf.boxMargin, Math.min);\n        _self.updateVal(bounds.data, 'stopx', stopx + n * conf.boxMargin, Math.max);\n\n        if (!(type === 'activation')) {\n          _self.updateVal(item, 'startx', startx - n * conf.boxMargin, Math.min);\n          _self.updateVal(item, 'stopx', stopx + n * conf.boxMargin, Math.max);\n\n          _self.updateVal(bounds.data, 'starty', starty - n * conf.boxMargin, Math.min);\n          _self.updateVal(bounds.data, 'stopy', stopy + n * conf.boxMargin, Math.max);\n        }\n      };\n    }\n\n    this.sequenceItems.forEach(updateFn());\n    this.activations.forEach(updateFn('activation'));\n  },\n  insert: function (startx, starty, stopx, stopy) {\n    const _startx = Math.min(startx, stopx);\n    const _stopx = Math.max(startx, stopx);\n    const _starty = Math.min(starty, stopy);\n    const _stopy = Math.max(starty, stopy);\n\n    this.updateVal(bounds.data, 'startx', _startx, Math.min);\n    this.updateVal(bounds.data, 'starty', _starty, Math.min);\n    this.updateVal(bounds.data, 'stopx', _stopx, Math.max);\n    this.updateVal(bounds.data, 'stopy', _stopy, Math.max);\n\n    this.updateBounds(_startx, _starty, _stopx, _stopy);\n  },\n  newActivation: function (message, diagram, actors) {\n    const actorRect = actors[message.from.actor];\n    const stackedSize = actorActivations(message.from.actor).length || 0;\n    const x = actorRect.x + actorRect.width / 2 + ((stackedSize - 1) * conf.activationWidth) / 2;\n    this.activations.push({\n      startx: x,\n      starty: this.verticalPos + 2,\n      stopx: x + conf.activationWidth,\n      stopy: undefined,\n      actor: message.from.actor,\n      anchored: svgDraw.anchorElement(diagram),\n    });\n  },\n  endActivation: function (message) {\n    // find most recent activation for given actor\n    const lastActorActivationIdx = this.activations\n      .map(function (activation) {\n        return activation.actor;\n      })\n      .lastIndexOf(message.from.actor);\n    return this.activations.splice(lastActorActivationIdx, 1)[0];\n  },\n  createLoop: function (title = { message: undefined, wrap: false, width: undefined }, fill) {\n    return {\n      startx: undefined,\n      starty: this.verticalPos,\n      stopx: undefined,\n      stopy: undefined,\n      title: title.message,\n      wrap: title.wrap,\n      width: title.width,\n      height: 0,\n      fill: fill,\n    };\n  },\n  newLoop: function (title = { message: undefined, wrap: false, width: undefined }, fill) {\n    this.sequenceItems.push(this.createLoop(title, fill));\n  },\n  endLoop: function () {\n    return this.sequenceItems.pop();\n  },\n  addSectionToLoop: function (message) {\n    const loop = this.sequenceItems.pop();\n    loop.sections = loop.sections || [];\n    loop.sectionTitles = loop.sectionTitles || [];\n    loop.sections.push({ y: bounds.getVerticalPos(), height: 0 });\n    loop.sectionTitles.push(message);\n    this.sequenceItems.push(loop);\n  },\n  bumpVerticalPos: function (bump) {\n    this.verticalPos = this.verticalPos + bump;\n    this.data.stopy = this.verticalPos;\n  },\n  getVerticalPos: function () {\n    return this.verticalPos;\n  },\n  getBounds: function () {\n    return { bounds: this.data, models: this.models };\n  },\n};\n\n/**\n * Draws an note in the diagram with the attached line\n *\n * @param {any} elem - The diagram to draw to.\n * @param {{ x: number; y: number; message: string; width: number }} noteModel - Startx: x axis\n *   start position, verticalPos: y axis position, messsage: the message to be shown, width: Set\n *   this with a custom width to override the default configured width.\n */\nconst drawNote = function (elem, noteModel) {\n  bounds.bumpVerticalPos(conf.boxMargin);\n  noteModel.height = conf.boxMargin;\n  noteModel.starty = bounds.getVerticalPos();\n  const rect = svgDraw.getNoteRect();\n  rect.x = noteModel.startx;\n  rect.y = noteModel.starty;\n  rect.width = noteModel.width || conf.width;\n  rect.class = 'note';\n\n  let g = elem.append('g');\n  const rectElem = svgDraw.drawRect(g, rect);\n  const textObj = svgDraw.getTextObj();\n  textObj.x = noteModel.startx;\n  textObj.y = noteModel.starty;\n  textObj.width = rect.width;\n  textObj.dy = '1em';\n  textObj.text = noteModel.message;\n  textObj.class = 'noteText';\n  textObj.fontFamily = conf.noteFontFamily;\n  textObj.fontSize = conf.noteFontSize;\n  textObj.fontWeight = conf.noteFontWeight;\n  textObj.anchor = conf.noteAlign;\n  textObj.textMargin = conf.noteMargin;\n  textObj.valign = conf.noteAlign;\n\n  let textElem = drawText(g, textObj);\n\n  let textHeight = Math.round(\n    textElem\n      .map((te) => (te._groups || te)[0][0].getBBox().height)\n      .reduce((acc, curr) => acc + curr)\n  );\n\n  rectElem.attr('height', textHeight + 2 * conf.noteMargin);\n  noteModel.height += textHeight + 2 * conf.noteMargin;\n  bounds.bumpVerticalPos(textHeight + 2 * conf.noteMargin);\n  noteModel.stopy = noteModel.starty + textHeight + 2 * conf.noteMargin;\n  noteModel.stopx = noteModel.startx + rect.width;\n  bounds.insert(noteModel.startx, noteModel.starty, noteModel.stopx, noteModel.stopy);\n  bounds.models.addNote(noteModel);\n};\n\nconst messageFont = (cnf) => {\n  return {\n    fontFamily: cnf.messageFontFamily,\n    fontSize: cnf.messageFontSize,\n    fontWeight: cnf.messageFontWeight,\n  };\n};\nconst noteFont = (cnf) => {\n  return {\n    fontFamily: cnf.noteFontFamily,\n    fontSize: cnf.noteFontSize,\n    fontWeight: cnf.noteFontWeight,\n  };\n};\nconst actorFont = (cnf) => {\n  return {\n    fontFamily: cnf.actorFontFamily,\n    fontSize: cnf.actorFontSize,\n    fontWeight: cnf.actorFontWeight,\n  };\n};\n\n/**\n * Process a message by adding its dimensions to the bound. It returns the Y coordinate of the\n * message so it can be drawn later. We do not draw the message at this point so the arrowhead can\n * be on top of the activation box.\n *\n * @param {any} diagram - The parent of the message element\n * @param {any} msgModel - The model containing fields describing a message\n * @returns {number} LineStarty - The Y coordinate at which the message line starts\n */\nconst boundMessage = function (diagram, msgModel) {\n  bounds.bumpVerticalPos(10);\n  const { startx, stopx, message } = msgModel;\n  const lines = common.splitBreaks(message).length;\n  let textDims = utils.calculateTextDimensions(message, messageFont(conf));\n  const lineHeight = textDims.height / lines;\n  msgModel.height += lineHeight;\n\n  bounds.bumpVerticalPos(lineHeight);\n\n  let lineStarty;\n  let totalOffset = textDims.height - 10;\n  let textWidth = textDims.width;\n\n  if (startx === stopx) {\n    lineStarty = bounds.getVerticalPos() + totalOffset;\n    if (!conf.rightAngles) {\n      totalOffset += conf.boxMargin;\n      lineStarty = bounds.getVerticalPos() + totalOffset;\n    }\n    totalOffset += 30;\n    const dx = Math.max(textWidth / 2, conf.width / 2);\n    bounds.insert(\n      startx - dx,\n      bounds.getVerticalPos() - 10 + totalOffset,\n      stopx + dx,\n      bounds.getVerticalPos() + 30 + totalOffset\n    );\n  } else {\n    totalOffset += conf.boxMargin;\n    lineStarty = bounds.getVerticalPos() + totalOffset;\n    bounds.insert(startx, lineStarty - 10, stopx, lineStarty);\n  }\n  bounds.bumpVerticalPos(totalOffset);\n  msgModel.height += totalOffset;\n  msgModel.stopy = msgModel.starty + msgModel.height;\n  bounds.insert(msgModel.fromBounds, msgModel.starty, msgModel.toBounds, msgModel.stopy);\n\n  return lineStarty;\n};\n\n/**\n * Draws a message. Note that the bounds have previously been updated by boundMessage.\n *\n * @param {any} diagram - The parent of the message element\n * @param {any} msgModel - The model containing fields describing a message\n * @param {float} lineStarty - The Y coordinate at which the message line starts\n */\nconst drawMessage = function (diagram, msgModel, lineStarty) {\n  const { startx, stopx, starty, message, type, sequenceIndex, sequenceVisible } = msgModel;\n  let textDims = utils.calculateTextDimensions(message, messageFont(conf));\n  const textObj = svgDraw.getTextObj();\n  textObj.x = startx;\n  textObj.y = starty + 10;\n  textObj.width = stopx - startx;\n  textObj.class = 'messageText';\n  textObj.dy = '1em';\n  textObj.text = message;\n  textObj.fontFamily = conf.messageFontFamily;\n  textObj.fontSize = conf.messageFontSize;\n  textObj.fontWeight = conf.messageFontWeight;\n  textObj.anchor = conf.messageAlign;\n  textObj.valign = conf.messageAlign;\n  textObj.textMargin = conf.wrapPadding;\n  textObj.tspan = false;\n\n  drawText(diagram, textObj);\n\n  let textWidth = textDims.width;\n\n  let line;\n  if (startx === stopx) {\n    if (conf.rightAngles) {\n      line = diagram\n        .append('path')\n        .attr(\n          'd',\n          `M  ${startx},${lineStarty} H ${startx + Math.max(conf.width / 2, textWidth / 2)} V ${\n            lineStarty + 25\n          } H ${startx}`\n        );\n    } else {\n      line = diagram\n        .append('path')\n        .attr(\n          'd',\n          'M ' +\n            startx +\n            ',' +\n            lineStarty +\n            ' C ' +\n            (startx + 60) +\n            ',' +\n            (lineStarty - 10) +\n            ' ' +\n            (startx + 60) +\n            ',' +\n            (lineStarty + 30) +\n            ' ' +\n            startx +\n            ',' +\n            (lineStarty + 20)\n        );\n    }\n  } else {\n    line = diagram.append('line');\n    line.attr('x1', startx);\n    line.attr('y1', lineStarty);\n    line.attr('x2', stopx);\n    line.attr('y2', lineStarty);\n  }\n  // Make an SVG Container\n  // Draw the line\n  if (\n    type === parser.yy.LINETYPE.DOTTED ||\n    type === parser.yy.LINETYPE.DOTTED_CROSS ||\n    type === parser.yy.LINETYPE.DOTTED_POINT ||\n    type === parser.yy.LINETYPE.DOTTED_OPEN\n  ) {\n    line.style('stroke-dasharray', '3, 3');\n    line.attr('class', 'messageLine1');\n  } else {\n    line.attr('class', 'messageLine0');\n  }\n\n  let url = '';\n  if (conf.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n\n  line.attr('stroke-width', 2);\n  line.attr('stroke', 'none'); // handled by theme/css anyway\n  line.style('fill', 'none'); // remove any fill colour\n  if (type === parser.yy.LINETYPE.SOLID || type === parser.yy.LINETYPE.DOTTED) {\n    line.attr('marker-end', 'url(' + url + '#arrowhead)');\n  }\n  if (type === parser.yy.LINETYPE.SOLID_POINT || type === parser.yy.LINETYPE.DOTTED_POINT) {\n    line.attr('marker-end', 'url(' + url + '#filled-head)');\n  }\n\n  if (type === parser.yy.LINETYPE.SOLID_CROSS || type === parser.yy.LINETYPE.DOTTED_CROSS) {\n    line.attr('marker-end', 'url(' + url + '#crosshead)');\n  }\n\n  // add node number\n  if (sequenceVisible || conf.showSequenceNumbers) {\n    line.attr('marker-start', 'url(' + url + '#sequencenumber)');\n    diagram\n      .append('text')\n      .attr('x', startx)\n      .attr('y', lineStarty + 4)\n      .attr('font-family', 'sans-serif')\n      .attr('font-size', '12px')\n      .attr('text-anchor', 'middle')\n      .attr('textLength', '16px')\n      .attr('class', 'sequenceNumber')\n      .text(sequenceIndex);\n  }\n};\n\nexport const drawActors = function (\n  diagram,\n  actors,\n  actorKeys,\n  verticalPos,\n  configuration,\n  messages\n) {\n  if (configuration.hideUnusedParticipants === true) {\n    const newActors = new Set();\n    messages.forEach((message) => {\n      newActors.add(message.from);\n      newActors.add(message.to);\n    });\n    actorKeys = actorKeys.filter((actorKey) => newActors.has(actorKey));\n  }\n\n  // Draw the actors\n  let prevWidth = 0;\n  let prevMargin = 0;\n  let maxHeight = 0;\n  for (let i = 0; i < actorKeys.length; i++) {\n    const actor = actors[actorKeys[i]];\n\n    // Add some rendering data to the object\n    actor.width = actor.width || conf.width;\n    actor.height = Math.max(actor.height || conf.height, conf.height);\n    actor.margin = actor.margin || conf.actorMargin;\n\n    actor.x = prevWidth + prevMargin;\n    actor.y = verticalPos;\n\n    // Draw the box with the attached line\n    const height = svgDraw.drawActor(diagram, actor, conf);\n    maxHeight = Math.max(maxHeight, height);\n    bounds.insert(actor.x, verticalPos, actor.x + actor.width, actor.height);\n\n    prevWidth += actor.width;\n    prevMargin += actor.margin;\n    bounds.models.addActor(actor);\n  }\n\n  // Add a margin between the actor boxes and the first arrow\n  bounds.bumpVerticalPos(maxHeight);\n};\n\nexport const drawActorsPopup = function (diagram, actors, actorKeys, doc) {\n  var maxHeight = 0;\n  var maxWidth = 0;\n  for (let i = 0; i < actorKeys.length; i++) {\n    const actor = actors[actorKeys[i]];\n    const minMenuWidth = getRequiredPopupWidth(actor);\n    var menuDimensions = svgDraw.drawPopup(\n      diagram,\n      actor,\n      minMenuWidth,\n      conf,\n      conf.forceMenus,\n      doc\n    );\n    if (menuDimensions.height > maxHeight) {\n      maxHeight = menuDimensions.height;\n    }\n    if (menuDimensions.width + actor.x > maxWidth) {\n      maxWidth = menuDimensions.width + actor.x;\n    }\n  }\n\n  return { maxHeight: maxHeight, maxWidth: maxWidth };\n};\n\nexport const setConf = function (cnf) {\n  assignWithDepth(conf, cnf);\n\n  if (cnf.fontFamily) {\n    conf.actorFontFamily = conf.noteFontFamily = conf.messageFontFamily = cnf.fontFamily;\n  }\n  if (cnf.fontSize) {\n    conf.actorFontSize = conf.noteFontSize = conf.messageFontSize = cnf.fontSize;\n  }\n  if (cnf.fontWeight) {\n    conf.actorFontWeight = conf.noteFontWeight = conf.messageFontWeight = cnf.fontWeight;\n  }\n};\n\nconst actorActivations = function (actor) {\n  return bounds.activations.filter(function (activation) {\n    return activation.actor === actor;\n  });\n};\n\nconst activationBounds = function (actor, actors) {\n  // handle multiple stacked activations for same actor\n  const actorObj = actors[actor];\n  const activations = actorActivations(actor);\n\n  const left = activations.reduce(function (acc, activation) {\n    return Math.min(acc, activation.startx);\n  }, actorObj.x + actorObj.width / 2);\n  const right = activations.reduce(function (acc, activation) {\n    return Math.max(acc, activation.stopx);\n  }, actorObj.x + actorObj.width / 2);\n  return [left, right];\n};\n\n/**\n * @param {any} loopWidths\n * @param {any} msg\n * @param {any} preMargin\n * @param {any} postMargin\n * @param {any} addLoopFn\n */\nfunction adjustLoopHeightForWrap(loopWidths, msg, preMargin, postMargin, addLoopFn) {\n  bounds.bumpVerticalPos(preMargin);\n  let heightAdjust = postMargin;\n  if (msg.id && msg.message && loopWidths[msg.id]) {\n    let loopWidth = loopWidths[msg.id].width;\n    let textConf = messageFont(conf);\n    msg.message = utils.wrapLabel(`[${msg.message}]`, loopWidth - 2 * conf.wrapPadding, textConf);\n    msg.width = loopWidth;\n    msg.wrap = true;\n\n    // const lines = common.splitBreaks(msg.message).length;\n    const textDims = utils.calculateTextDimensions(msg.message, textConf);\n    const totalOffset = Math.max(textDims.height, conf.labelBoxHeight);\n    heightAdjust = postMargin + totalOffset;\n    log.debug(`${totalOffset} - ${msg.message}`);\n  }\n  addLoopFn(msg);\n  bounds.bumpVerticalPos(heightAdjust);\n}\n\n/**\n * Draws a sequenceDiagram in the tag with id: id based on the graph definition in text.\n *\n * @param {any} text\n * @param {any} id\n */\nexport const draw = function (text, id) {\n  conf = configApi.getConfig().sequence;\n  const securityLevel = configApi.getConfig().securityLevel;\n  // Handle root and ocument for when rendering in sanbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  parser.yy.clear();\n  parser.yy.setWrap(conf.wrap);\n  parser.parse(text + '\\n');\n  bounds.init();\n  log.debug(`C:${JSON.stringify(conf, null, 2)}`);\n\n  const diagram =\n    securityLevel === 'sandbox' ? root.select(`[id=\"${id}\"]`) : select(`[id=\"${id}\"]`);\n\n  // Fetch data from the parsing\n  const actors = parser.yy.getActors();\n  const actorKeys = parser.yy.getActorKeys();\n  const messages = parser.yy.getMessages();\n  const title = parser.yy.getDiagramTitle();\n\n  const maxMessageWidthPerActor = getMaxMessageWidthPerActor(actors, messages);\n  conf.height = calculateActorMargins(actors, maxMessageWidthPerActor);\n\n  svgDraw.insertComputerIcon(diagram);\n  svgDraw.insertDatabaseIcon(diagram);\n  svgDraw.insertClockIcon(diagram);\n\n  drawActors(diagram, actors, actorKeys, 0, conf, messages);\n  const loopWidths = calculateLoopBounds(messages, actors, maxMessageWidthPerActor);\n\n  // The arrow head definition is attached to the svg once\n  svgDraw.insertArrowHead(diagram);\n  svgDraw.insertArrowCrossHead(diagram);\n  svgDraw.insertArrowFilledHead(diagram);\n  svgDraw.insertSequenceNumber(diagram);\n\n  /**\n   * @param {any} msg\n   * @param {any} verticalPos\n   */\n  function activeEnd(msg, verticalPos) {\n    const activationData = bounds.endActivation(msg);\n    if (activationData.starty + 18 > verticalPos) {\n      activationData.starty = verticalPos - 6;\n      verticalPos += 12;\n    }\n    svgDraw.drawActivation(\n      diagram,\n      activationData,\n      verticalPos,\n      conf,\n      actorActivations(msg.from.actor).length\n    );\n\n    bounds.insert(activationData.startx, verticalPos - 10, activationData.stopx, verticalPos);\n  }\n\n  // Draw the messages/signals\n  let sequenceIndex = 1;\n  let sequenceIndexStep = 1;\n  let messagesToDraw = Array();\n  messages.forEach(function (msg) {\n    let loopModel, noteModel, msgModel;\n\n    switch (msg.type) {\n      case parser.yy.LINETYPE.NOTE:\n        noteModel = msg.noteModel;\n        drawNote(diagram, noteModel);\n        break;\n      case parser.yy.LINETYPE.ACTIVE_START:\n        bounds.newActivation(msg, diagram, actors);\n        break;\n      case parser.yy.LINETYPE.ACTIVE_END:\n        activeEnd(msg, bounds.getVerticalPos());\n        break;\n      case parser.yy.LINETYPE.LOOP_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case parser.yy.LINETYPE.LOOP_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'loop', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case parser.yy.LINETYPE.RECT_START:\n        adjustLoopHeightForWrap(loopWidths, msg, conf.boxMargin, conf.boxMargin, (message) =>\n          bounds.newLoop(undefined, message.message)\n        );\n        break;\n      case parser.yy.LINETYPE.RECT_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawBackgroundRect(diagram, loopModel);\n        bounds.models.addLoop(loopModel);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        break;\n      case parser.yy.LINETYPE.OPT_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case parser.yy.LINETYPE.OPT_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'opt', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case parser.yy.LINETYPE.ALT_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case parser.yy.LINETYPE.ALT_ELSE:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin + conf.boxTextMargin,\n          conf.boxMargin,\n          (message) => bounds.addSectionToLoop(message)\n        );\n        break;\n      case parser.yy.LINETYPE.ALT_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'alt', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case parser.yy.LINETYPE.PAR_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case parser.yy.LINETYPE.PAR_AND:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin + conf.boxTextMargin,\n          conf.boxMargin,\n          (message) => bounds.addSectionToLoop(message)\n        );\n        break;\n      case parser.yy.LINETYPE.PAR_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'par', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case parser.yy.LINETYPE.AUTONUMBER:\n        sequenceIndex = msg.message.start || sequenceIndex;\n        sequenceIndexStep = msg.message.step || sequenceIndexStep;\n        if (msg.message.visible) parser.yy.enableSequenceNumbers();\n        else parser.yy.disableSequenceNumbers();\n        break;\n      default:\n        try {\n          // lastMsg = msg\n          msgModel = msg.msgModel;\n          msgModel.starty = bounds.getVerticalPos();\n          msgModel.sequenceIndex = sequenceIndex;\n          msgModel.sequenceVisible = parser.yy.showSequenceNumbers();\n          let lineStarty = boundMessage(diagram, msgModel);\n          messagesToDraw.push({ messageModel: msgModel, lineStarty: lineStarty });\n          bounds.models.addMessage(msgModel);\n        } catch (e) {\n          log.error('error while drawing message', e);\n        }\n    }\n\n    // Increment sequence counter if msg.type is a line (and not another event like activation or note, etc)\n    if (\n      [\n        parser.yy.LINETYPE.SOLID_OPEN,\n        parser.yy.LINETYPE.DOTTED_OPEN,\n        parser.yy.LINETYPE.SOLID,\n        parser.yy.LINETYPE.DOTTED,\n        parser.yy.LINETYPE.SOLID_CROSS,\n        parser.yy.LINETYPE.DOTTED_CROSS,\n        parser.yy.LINETYPE.SOLID_POINT,\n        parser.yy.LINETYPE.DOTTED_POINT,\n      ].includes(msg.type)\n    ) {\n      sequenceIndex = sequenceIndex + sequenceIndexStep;\n    }\n  });\n\n  messagesToDraw.forEach((e) => drawMessage(diagram, e.messageModel, e.lineStarty));\n\n  if (conf.mirrorActors) {\n    // Draw actors below diagram\n    bounds.bumpVerticalPos(conf.boxMargin * 2);\n    drawActors(diagram, actors, actorKeys, bounds.getVerticalPos(), conf, messages);\n    bounds.bumpVerticalPos(conf.boxMargin);\n    fixLifeLineHeights(diagram, bounds.getVerticalPos());\n  }\n\n  // only draw popups for the top row of actors.\n  var requiredBoxSize = drawActorsPopup(diagram, actors, actorKeys, doc);\n\n  const { bounds: box } = bounds.getBounds();\n\n  // Adjust line height of actor lines now that the height of the diagram is known\n  log.debug('For line height fix Querying: #' + id + ' .actor-line');\n  const actorLines = selectAll('#' + id + ' .actor-line');\n  actorLines.attr('y2', box.stopy);\n\n  // Make sure the height of the diagram supports long menus.\n  let boxHeight = box.stopy - box.starty;\n  if (boxHeight < requiredBoxSize.maxHeight) {\n    boxHeight = requiredBoxSize.maxHeight;\n  }\n\n  let height = boxHeight + 2 * conf.diagramMarginY;\n  if (conf.mirrorActors) {\n    height = height - conf.boxMargin + conf.bottomMarginAdj;\n  }\n\n  // Make sure the width of the diagram supports wide menus.\n  let boxWidth = box.stopx - box.startx;\n  if (boxWidth < requiredBoxSize.maxWidth) {\n    boxWidth = requiredBoxSize.maxWidth;\n  }\n  const width = boxWidth + 2 * conf.diagramMarginX;\n\n  if (title) {\n    diagram\n      .append('text')\n      .text(title)\n      .attr('x', (box.stopx - box.startx) / 2 - 2 * conf.diagramMarginX)\n      .attr('y', -25);\n  }\n\n  configureSvgSize(diagram, height, width, conf.useMaxWidth);\n\n  const extraVertForTitle = title ? 40 : 0;\n  diagram.attr(\n    'viewBox',\n    box.startx -\n      conf.diagramMarginX +\n      ' -' +\n      (conf.diagramMarginY + extraVertForTitle) +\n      ' ' +\n      width +\n      ' ' +\n      (height + extraVertForTitle)\n  );\n\n  addSVGAccessibilityFields(parser.yy, diagram, id);\n  log.debug(`models:`, bounds.models);\n};\n\n/**\n * Retrieves the max message width of each actor, supports signals (messages, loops) and notes.\n *\n * It will enumerate each given message, and will determine its text width, in relation to the actor\n * it originates from, and destined to.\n *\n * @param {any} actors - The actors map\n * @param {Array} messages - A list of message objects to iterate\n * @returns {any}\n */\nconst getMaxMessageWidthPerActor = function (actors, messages) {\n  const maxMessageWidthPerActor = {};\n\n  messages.forEach(function (msg) {\n    if (actors[msg.to] && actors[msg.from]) {\n      const actor = actors[msg.to];\n\n      // If this is the first actor, and the message is left of it, no need to calculate the margin\n      if (msg.placement === parser.yy.PLACEMENT.LEFTOF && !actor.prevActor) {\n        return;\n      }\n\n      // If this is the last actor, and the message is right of it, no need to calculate the margin\n      if (msg.placement === parser.yy.PLACEMENT.RIGHTOF && !actor.nextActor) {\n        return;\n      }\n\n      const isNote = msg.placement !== undefined;\n      const isMessage = !isNote;\n\n      const textFont = isNote ? noteFont(conf) : messageFont(conf);\n      let wrappedMessage = msg.wrap\n        ? utils.wrapLabel(msg.message, conf.width - 2 * conf.wrapPadding, textFont)\n        : msg.message;\n      const messageDimensions = utils.calculateTextDimensions(wrappedMessage, textFont);\n      const messageWidth = messageDimensions.width + 2 * conf.wrapPadding;\n\n      /*\n       * The following scenarios should be supported:\n       *\n       * - There's a message (non-note) between fromActor and toActor\n       *   - If fromActor is on the right and toActor is on the left, we should\n       *     define the toActor's margin\n       *   - If fromActor is on the left and toActor is on the right, we should\n       *     define the fromActor's margin\n       * - There's a note, in which case fromActor == toActor\n       *   - If the note is to the left of the actor, we should define the previous actor\n       *     margin\n       *   - If the note is on the actor, we should define both the previous and next actor\n       *     margins, each being the half of the note size\n       *   - If the note is on the right of the actor, we should define the current actor\n       *     margin\n       */\n      if (isMessage && msg.from === actor.nextActor) {\n        maxMessageWidthPerActor[msg.to] = Math.max(\n          maxMessageWidthPerActor[msg.to] || 0,\n          messageWidth\n        );\n      } else if (isMessage && msg.from === actor.prevActor) {\n        maxMessageWidthPerActor[msg.from] = Math.max(\n          maxMessageWidthPerActor[msg.from] || 0,\n          messageWidth\n        );\n      } else if (isMessage && msg.from === msg.to) {\n        maxMessageWidthPerActor[msg.from] = Math.max(\n          maxMessageWidthPerActor[msg.from] || 0,\n          messageWidth / 2\n        );\n\n        maxMessageWidthPerActor[msg.to] = Math.max(\n          maxMessageWidthPerActor[msg.to] || 0,\n          messageWidth / 2\n        );\n      } else if (msg.placement === parser.yy.PLACEMENT.RIGHTOF) {\n        maxMessageWidthPerActor[msg.from] = Math.max(\n          maxMessageWidthPerActor[msg.from] || 0,\n          messageWidth\n        );\n      } else if (msg.placement === parser.yy.PLACEMENT.LEFTOF) {\n        maxMessageWidthPerActor[actor.prevActor] = Math.max(\n          maxMessageWidthPerActor[actor.prevActor] || 0,\n          messageWidth\n        );\n      } else if (msg.placement === parser.yy.PLACEMENT.OVER) {\n        if (actor.prevActor) {\n          maxMessageWidthPerActor[actor.prevActor] = Math.max(\n            maxMessageWidthPerActor[actor.prevActor] || 0,\n            messageWidth / 2\n          );\n        }\n\n        if (actor.nextActor) {\n          maxMessageWidthPerActor[msg.from] = Math.max(\n            maxMessageWidthPerActor[msg.from] || 0,\n            messageWidth / 2\n          );\n        }\n      }\n    }\n  });\n\n  log.debug('maxMessageWidthPerActor:', maxMessageWidthPerActor);\n  return maxMessageWidthPerActor;\n};\n\nconst getRequiredPopupWidth = function (actor) {\n  let requiredPopupWidth = 0;\n  const textFont = actorFont(conf);\n  for (let key in actor.links) {\n    let labelDimensions = utils.calculateTextDimensions(key, textFont);\n    let labelWidth = labelDimensions.width + 2 * conf.wrapPadding + 2 * conf.boxMargin;\n    if (requiredPopupWidth < labelWidth) {\n      requiredPopupWidth = labelWidth;\n    }\n  }\n\n  return requiredPopupWidth;\n};\n\n/**\n * This will calculate the optimal margin for each given actor, for a given actor->messageWidth map.\n *\n * An actor's margin is determined by the width of the actor, the width of the largest message that\n * originates from it, and the configured conf.actorMargin.\n *\n * @param {any} actors - The actors map to calculate margins for\n * @param {any} actorToMessageWidth - A map of actor key -> max message width it holds\n */\nconst calculateActorMargins = function (actors, actorToMessageWidth) {\n  let maxHeight = 0;\n  Object.keys(actors).forEach((prop) => {\n    const actor = actors[prop];\n    if (actor.wrap) {\n      actor.description = utils.wrapLabel(\n        actor.description,\n        conf.width - 2 * conf.wrapPadding,\n        actorFont(conf)\n      );\n    }\n    const actDims = utils.calculateTextDimensions(actor.description, actorFont(conf));\n    actor.width = actor.wrap\n      ? conf.width\n      : Math.max(conf.width, actDims.width + 2 * conf.wrapPadding);\n\n    actor.height = actor.wrap ? Math.max(actDims.height, conf.height) : conf.height;\n    maxHeight = Math.max(maxHeight, actor.height);\n  });\n\n  for (let actorKey in actorToMessageWidth) {\n    const actor = actors[actorKey];\n\n    if (!actor) {\n      continue;\n    }\n\n    const nextActor = actors[actor.nextActor];\n\n    // No need to space out an actor that doesn't have a next link\n    if (!nextActor) {\n      continue;\n    }\n\n    const messageWidth = actorToMessageWidth[actorKey];\n    const actorWidth = messageWidth + conf.actorMargin - actor.width / 2 - nextActor.width / 2;\n\n    actor.margin = Math.max(actorWidth, conf.actorMargin);\n  }\n\n  return Math.max(maxHeight, conf.height);\n};\n\nconst buildNoteModel = function (msg, actors) {\n  let startx = actors[msg.from].x;\n  let stopx = actors[msg.to].x;\n  let shouldWrap = msg.wrap && msg.message;\n\n  let textDimensions = utils.calculateTextDimensions(\n    shouldWrap ? utils.wrapLabel(msg.message, conf.width, noteFont(conf)) : msg.message,\n    noteFont(conf)\n  );\n  let noteModel = {\n    width: shouldWrap\n      ? conf.width\n      : Math.max(conf.width, textDimensions.width + 2 * conf.noteMargin),\n    height: 0,\n    startx: actors[msg.from].x,\n    stopx: 0,\n    starty: 0,\n    stopy: 0,\n    message: msg.message,\n  };\n  if (msg.placement === parser.yy.PLACEMENT.RIGHTOF) {\n    noteModel.width = shouldWrap\n      ? Math.max(conf.width, textDimensions.width)\n      : Math.max(\n          actors[msg.from].width / 2 + actors[msg.to].width / 2,\n          textDimensions.width + 2 * conf.noteMargin\n        );\n    noteModel.startx = startx + (actors[msg.from].width + conf.actorMargin) / 2;\n  } else if (msg.placement === parser.yy.PLACEMENT.LEFTOF) {\n    noteModel.width = shouldWrap\n      ? Math.max(conf.width, textDimensions.width + 2 * conf.noteMargin)\n      : Math.max(\n          actors[msg.from].width / 2 + actors[msg.to].width / 2,\n          textDimensions.width + 2 * conf.noteMargin\n        );\n    noteModel.startx = startx - noteModel.width + (actors[msg.from].width - conf.actorMargin) / 2;\n  } else if (msg.to === msg.from) {\n    textDimensions = utils.calculateTextDimensions(\n      shouldWrap\n        ? utils.wrapLabel(msg.message, Math.max(conf.width, actors[msg.from].width), noteFont(conf))\n        : msg.message,\n      noteFont(conf)\n    );\n    noteModel.width = shouldWrap\n      ? Math.max(conf.width, actors[msg.from].width)\n      : Math.max(actors[msg.from].width, conf.width, textDimensions.width + 2 * conf.noteMargin);\n    noteModel.startx = startx + (actors[msg.from].width - noteModel.width) / 2;\n  } else {\n    noteModel.width =\n      Math.abs(startx + actors[msg.from].width / 2 - (stopx + actors[msg.to].width / 2)) +\n      conf.actorMargin;\n    noteModel.startx =\n      startx < stopx\n        ? startx + actors[msg.from].width / 2 - conf.actorMargin / 2\n        : stopx + actors[msg.to].width / 2 - conf.actorMargin / 2;\n  }\n  if (shouldWrap) {\n    noteModel.message = utils.wrapLabel(\n      msg.message,\n      noteModel.width - 2 * conf.wrapPadding,\n      noteFont(conf)\n    );\n  }\n  log.debug(\n    `NM:[${noteModel.startx},${noteModel.stopx},${noteModel.starty},${noteModel.stopy}:${noteModel.width},${noteModel.height}=${msg.message}]`\n  );\n  return noteModel;\n};\n\nconst buildMessageModel = function (msg, actors) {\n  let process = false;\n  if (\n    [\n      parser.yy.LINETYPE.SOLID_OPEN,\n      parser.yy.LINETYPE.DOTTED_OPEN,\n      parser.yy.LINETYPE.SOLID,\n      parser.yy.LINETYPE.DOTTED,\n      parser.yy.LINETYPE.SOLID_CROSS,\n      parser.yy.LINETYPE.DOTTED_CROSS,\n      parser.yy.LINETYPE.SOLID_POINT,\n      parser.yy.LINETYPE.DOTTED_POINT,\n    ].includes(msg.type)\n  ) {\n    process = true;\n  }\n  if (!process) {\n    return {};\n  }\n  const fromBounds = activationBounds(msg.from, actors);\n  const toBounds = activationBounds(msg.to, actors);\n  const fromIdx = fromBounds[0] <= toBounds[0] ? 1 : 0;\n  const toIdx = fromBounds[0] < toBounds[0] ? 0 : 1;\n  const allBounds = fromBounds.concat(toBounds);\n  const boundedWidth = Math.abs(toBounds[toIdx] - fromBounds[fromIdx]);\n  if (msg.wrap && msg.message) {\n    msg.message = utils.wrapLabel(\n      msg.message,\n      Math.max(boundedWidth + 2 * conf.wrapPadding, conf.width),\n      messageFont(conf)\n    );\n  }\n  const msgDims = utils.calculateTextDimensions(msg.message, messageFont(conf));\n\n  return {\n    width: Math.max(\n      msg.wrap ? 0 : msgDims.width + 2 * conf.wrapPadding,\n      boundedWidth + 2 * conf.wrapPadding,\n      conf.width\n    ),\n    height: 0,\n    startx: fromBounds[fromIdx],\n    stopx: toBounds[toIdx],\n    starty: 0,\n    stopy: 0,\n    message: msg.message,\n    type: msg.type,\n    wrap: msg.wrap,\n    fromBounds: Math.min.apply(null, allBounds),\n    toBounds: Math.max.apply(null, allBounds),\n  };\n};\n\nconst calculateLoopBounds = function (messages, actors) {\n  const loops = {};\n  const stack = [];\n  let current, noteModel, msgModel;\n\n  messages.forEach(function (msg) {\n    msg.id = utils.random({ length: 10 });\n    switch (msg.type) {\n      case parser.yy.LINETYPE.LOOP_START:\n      case parser.yy.LINETYPE.ALT_START:\n      case parser.yy.LINETYPE.OPT_START:\n      case parser.yy.LINETYPE.PAR_START:\n        stack.push({\n          id: msg.id,\n          msg: msg.message,\n          from: Number.MAX_SAFE_INTEGER,\n          to: Number.MIN_SAFE_INTEGER,\n          width: 0,\n        });\n        break;\n      case parser.yy.LINETYPE.ALT_ELSE:\n      case parser.yy.LINETYPE.PAR_AND:\n        if (msg.message) {\n          current = stack.pop();\n          loops[current.id] = current;\n          loops[msg.id] = current;\n          stack.push(current);\n        }\n        break;\n      case parser.yy.LINETYPE.LOOP_END:\n      case parser.yy.LINETYPE.ALT_END:\n      case parser.yy.LINETYPE.OPT_END:\n      case parser.yy.LINETYPE.PAR_END:\n        current = stack.pop();\n        loops[current.id] = current;\n        break;\n      case parser.yy.LINETYPE.ACTIVE_START:\n        {\n          const actorRect = actors[msg.from ? msg.from.actor : msg.to.actor];\n          const stackedSize = actorActivations(msg.from ? msg.from.actor : msg.to.actor).length;\n          const x =\n            actorRect.x + actorRect.width / 2 + ((stackedSize - 1) * conf.activationWidth) / 2;\n          const toAdd = {\n            startx: x,\n            stopx: x + conf.activationWidth,\n            actor: msg.from.actor,\n            enabled: true,\n          };\n          bounds.activations.push(toAdd);\n        }\n        break;\n      case parser.yy.LINETYPE.ACTIVE_END:\n        {\n          const lastActorActivationIdx = bounds.activations\n            .map((a) => a.actor)\n            .lastIndexOf(msg.from.actor);\n          delete bounds.activations.splice(lastActorActivationIdx, 1)[0];\n        }\n        break;\n    }\n    const isNote = msg.placement !== undefined;\n    if (isNote) {\n      noteModel = buildNoteModel(msg, actors);\n      msg.noteModel = noteModel;\n      stack.forEach((stk) => {\n        current = stk;\n        current.from = Math.min(current.from, noteModel.startx);\n        current.to = Math.max(current.to, noteModel.startx + noteModel.width);\n        current.width =\n          Math.max(current.width, Math.abs(current.from - current.to)) - conf.labelBoxWidth;\n      });\n    } else {\n      msgModel = buildMessageModel(msg, actors);\n      msg.msgModel = msgModel;\n      if (msgModel.startx && msgModel.stopx && stack.length > 0) {\n        stack.forEach((stk) => {\n          current = stk;\n          if (msgModel.startx === msgModel.stopx) {\n            let from = actors[msg.from];\n            let to = actors[msg.to];\n            current.from = Math.min(\n              from.x - msgModel.width / 2,\n              from.x - from.width / 2,\n              current.from\n            );\n            current.to = Math.max(to.x + msgModel.width / 2, to.x + from.width / 2, current.to);\n            current.width =\n              Math.max(current.width, Math.abs(current.to - current.from)) - conf.labelBoxWidth;\n          } else {\n            current.from = Math.min(msgModel.startx, current.from);\n            current.to = Math.max(msgModel.stopx, current.to);\n            current.width = Math.max(current.width, msgModel.width) - conf.labelBoxWidth;\n          }\n        });\n      }\n    }\n  });\n  bounds.activations = [];\n  log.debug('Loop type widths:', loops);\n  return loops;\n};\n\nexport default {\n  bounds,\n  drawActors,\n  drawActorsPopup,\n  setConf,\n  draw,\n};\n","const getStyles = (options) =>\n  `.actor {\n    stroke: ${options.actorBorder};\n    fill: ${options.actorBkg};\n  }\n\n  text.actor > tspan {\n    fill: ${options.actorTextColor};\n    stroke: none;\n  }\n\n  .actor-line {\n    stroke: ${options.actorLineColor};\n  }\n\n  .messageLine0 {\n    stroke-width: 1.5;\n    stroke-dasharray: none;\n    stroke: ${options.signalColor};\n  }\n\n  .messageLine1 {\n    stroke-width: 1.5;\n    stroke-dasharray: 2, 2;\n    stroke: ${options.signalColor};\n  }\n\n  #arrowhead path {\n    fill: ${options.signalColor};\n    stroke: ${options.signalColor};\n  }\n\n  .sequenceNumber {\n    fill: ${options.sequenceNumberColor};\n  }\n\n  #sequencenumber {\n    fill: ${options.signalColor};\n  }\n\n  #crosshead path {\n    fill: ${options.signalColor};\n    stroke: ${options.signalColor};\n  }\n\n  .messageText {\n    fill: ${options.signalTextColor};\n    stroke: ${options.signalTextColor};\n  }\n\n  .labelBox {\n    stroke: ${options.labelBoxBorderColor};\n    fill: ${options.labelBoxBkgColor};\n  }\n\n  .labelText, .labelText > tspan {\n    fill: ${options.labelTextColor};\n    stroke: none;\n  }\n\n  .loopText, .loopText > tspan {\n    fill: ${options.loopTextColor};\n    stroke: none;\n  }\n\n  .loopLine {\n    stroke-width: 2px;\n    stroke-dasharray: 2, 2;\n    stroke: ${options.labelBoxBorderColor};\n    fill: ${options.labelBoxBorderColor};\n  }\n\n  .note {\n    //stroke: #decc93;\n    stroke: ${options.noteBorderColor};\n    fill: ${options.noteBkgColor};\n  }\n\n  .noteText, .noteText > tspan {\n    fill: ${options.noteTextColor};\n    stroke: none;\n  }\n\n  .activation0 {\n    fill: ${options.activationBkgColor};\n    stroke: ${options.activationBorderColor};\n  }\n\n  .activation1 {\n    fill: ${options.activationBkgColor};\n    stroke: ${options.activationBorderColor};\n  }\n\n  .activation2 {\n    fill: ${options.activationBkgColor};\n    stroke: ${options.activationBorderColor};\n  }\n\n  .actorPopupMenu {\n    position: absolute;\n  }\n\n  .actorPopupMenuPanel {\n    position: absolute;\n    fill: ${options.actorBkg};\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n    filter: drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4));\n}\n  .actor-man line {\n    stroke: ${options.actorBorder};\n    fill: ${options.actorBkg};\n  }\n  .actor-man circle, line {\n    stroke: ${options.actorBorder};\n    fill: ${options.actorBkg};\n    stroke-width: 2px;\n  }\n`;\n\nexport default getStyles;\n","import common from '../common/common';\nimport { addFunction } from '../../interactionDb';\nimport { sanitizeUrl } from '@braintree/sanitize-url';\n\nexport const drawRect = function (elem, rectData) {\n  const rectElem = elem.append('rect');\n  rectElem.attr('x', rectData.x);\n  rectElem.attr('y', rectData.y);\n  rectElem.attr('fill', rectData.fill);\n  rectElem.attr('stroke', rectData.stroke);\n  rectElem.attr('width', rectData.width);\n  rectElem.attr('height', rectData.height);\n  rectElem.attr('rx', rectData.rx);\n  rectElem.attr('ry', rectData.ry);\n\n  if (typeof rectData.class !== 'undefined') {\n    rectElem.attr('class', rectData.class);\n  }\n\n  return rectElem;\n};\n\n// const sanitizeUrl = function (s) {\n//   return s\n//     .replace(/&/g, '&amp;')\n//     .replace(/</g, '&lt;')\n//     .replace(/javascript:/g, '');\n// };\n\nconst addPopupInteraction = (id, actorCnt) => {\n  addFunction(() => {\n    const arr = document.querySelectorAll(id);\n    // This will be the case when running in sandboxed mode\n    if (arr.length === 0) return;\n    arr[0].addEventListener('mouseover', function () {\n      popupMenuUpFunc('actor' + actorCnt + '_popup');\n    });\n    arr[0].addEventListener('mouseout', function () {\n      popupMenuDownFunc('actor' + actorCnt + '_popup');\n    });\n  });\n};\nexport const drawPopup = function (elem, actor, minMenuWidth, textAttrs, forceMenus) {\n  if (actor.links === undefined || actor.links === null || Object.keys(actor.links).length === 0) {\n    return { height: 0, width: 0 };\n  }\n\n  const links = actor.links;\n  const actorCnt = actor.actorCnt;\n  const rectData = actor.rectData;\n\n  var displayValue = 'none';\n  if (forceMenus) {\n    displayValue = 'block !important';\n  }\n\n  const g = elem.append('g');\n  g.attr('id', 'actor' + actorCnt + '_popup');\n  g.attr('class', 'actorPopupMenu');\n  g.attr('display', displayValue);\n  addPopupInteraction('#actor' + actorCnt + '_popup', actorCnt);\n  var actorClass = '';\n  if (typeof rectData.class !== 'undefined') {\n    actorClass = ' ' + rectData.class;\n  }\n\n  let menuWidth = rectData.width > minMenuWidth ? rectData.width : minMenuWidth;\n\n  const rectElem = g.append('rect');\n  rectElem.attr('class', 'actorPopupMenuPanel' + actorClass);\n  rectElem.attr('x', rectData.x);\n  rectElem.attr('y', rectData.height);\n  rectElem.attr('fill', rectData.fill);\n  rectElem.attr('stroke', rectData.stroke);\n  rectElem.attr('width', menuWidth);\n  rectElem.attr('height', rectData.height);\n  rectElem.attr('rx', rectData.rx);\n  rectElem.attr('ry', rectData.ry);\n  if (links != null) {\n    var linkY = 20;\n    for (let key in links) {\n      var linkElem = g.append('a');\n      var sanitizedLink = sanitizeUrl(links[key]);\n      linkElem.attr('xlink:href', sanitizedLink);\n      linkElem.attr('target', '_blank');\n\n      _drawMenuItemTextCandidateFunc(textAttrs)(\n        key,\n        linkElem,\n        rectData.x + 10,\n        rectData.height + linkY,\n        menuWidth,\n        20,\n        { class: 'actor' },\n        textAttrs\n      );\n\n      linkY += 30;\n    }\n  }\n\n  rectElem.attr('height', linkY);\n\n  return { height: rectData.height + linkY, width: menuWidth };\n};\n\nexport const drawImage = function (elem, x, y, link) {\n  const imageElem = elem.append('image');\n  imageElem.attr('x', x);\n  imageElem.attr('y', y);\n  var sanitizedLink = sanitizeUrl(link);\n  imageElem.attr('xlink:href', sanitizedLink);\n};\n\nexport const drawEmbeddedImage = function (elem, x, y, link) {\n  const imageElem = elem.append('use');\n  imageElem.attr('x', x);\n  imageElem.attr('y', y);\n  var sanitizedLink = sanitizeUrl(link);\n  imageElem.attr('xlink:href', '#' + sanitizedLink);\n};\n\nexport const popupMenu = function (popid) {\n  return (\n    \"var pu = document.getElementById('\" +\n    popid +\n    \"'); if (pu != null) { pu.style.display = 'block'; }\"\n  );\n};\n\nexport const popdownMenu = function (popid) {\n  return (\n    \"var pu = document.getElementById('\" +\n    popid +\n    \"'); if (pu != null) { pu.style.display = 'none'; }\"\n  );\n};\n\nconst popupMenuUpFunc = function (popupId) {\n  var pu = document.getElementById(popupId);\n  if (pu != null) {\n    pu.style.display = 'block';\n  }\n};\n\nconst popupMenuDownFunc = function (popupId) {\n  var pu = document.getElementById(popupId);\n  if (pu != null) {\n    pu.style.display = 'none';\n  }\n};\nexport const drawText = function (elem, textData) {\n  let prevTextHeight = 0,\n    textHeight = 0;\n  const lines = textData.text.split(common.lineBreakRegex);\n\n  let textElems = [];\n  let dy = 0;\n  let yfunc = () => textData.y;\n  if (\n    typeof textData.valign !== 'undefined' &&\n    typeof textData.textMargin !== 'undefined' &&\n    textData.textMargin > 0\n  ) {\n    switch (textData.valign) {\n      case 'top':\n      case 'start':\n        yfunc = () => Math.round(textData.y + textData.textMargin);\n        break;\n      case 'middle':\n      case 'center':\n        yfunc = () =>\n          Math.round(textData.y + (prevTextHeight + textHeight + textData.textMargin) / 2);\n        break;\n      case 'bottom':\n      case 'end':\n        yfunc = () =>\n          Math.round(\n            textData.y +\n              (prevTextHeight + textHeight + 2 * textData.textMargin) -\n              textData.textMargin\n          );\n        break;\n    }\n  }\n  if (\n    typeof textData.anchor !== 'undefined' &&\n    typeof textData.textMargin !== 'undefined' &&\n    typeof textData.width !== 'undefined'\n  ) {\n    switch (textData.anchor) {\n      case 'left':\n      case 'start':\n        textData.x = Math.round(textData.x + textData.textMargin);\n        textData.anchor = 'start';\n        textData.dominantBaseline = 'text-after-edge';\n        textData.alignmentBaseline = 'middle';\n        break;\n      case 'middle':\n      case 'center':\n        textData.x = Math.round(textData.x + textData.width / 2);\n        textData.anchor = 'middle';\n        textData.dominantBaseline = 'middle';\n        textData.alignmentBaseline = 'middle';\n        break;\n      case 'right':\n      case 'end':\n        textData.x = Math.round(textData.x + textData.width - textData.textMargin);\n        textData.anchor = 'end';\n        textData.dominantBaseline = 'text-before-edge';\n        textData.alignmentBaseline = 'middle';\n        break;\n    }\n  }\n  for (let i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    if (\n      typeof textData.textMargin !== 'undefined' &&\n      textData.textMargin === 0 &&\n      typeof textData.fontSize !== 'undefined'\n    ) {\n      dy = i * textData.fontSize;\n    }\n\n    const textElem = elem.append('text');\n    textElem.attr('x', textData.x);\n    textElem.attr('y', yfunc());\n    if (typeof textData.anchor !== 'undefined') {\n      textElem\n        .attr('text-anchor', textData.anchor)\n        .attr('dominant-baseline', textData.dominantBaseline)\n        .attr('alignment-baseline', textData.alignmentBaseline);\n    }\n    if (typeof textData.fontFamily !== 'undefined') {\n      textElem.style('font-family', textData.fontFamily);\n    }\n    if (typeof textData.fontSize !== 'undefined') {\n      textElem.style('font-size', textData.fontSize);\n    }\n    if (typeof textData.fontWeight !== 'undefined') {\n      textElem.style('font-weight', textData.fontWeight);\n    }\n    if (typeof textData.fill !== 'undefined') {\n      textElem.attr('fill', textData.fill);\n    }\n    if (typeof textData.class !== 'undefined') {\n      textElem.attr('class', textData.class);\n    }\n    if (typeof textData.dy !== 'undefined') {\n      textElem.attr('dy', textData.dy);\n    } else if (dy !== 0) {\n      textElem.attr('dy', dy);\n    }\n\n    if (textData.tspan) {\n      const span = textElem.append('tspan');\n      span.attr('x', textData.x);\n      if (typeof textData.fill !== 'undefined') {\n        span.attr('fill', textData.fill);\n      }\n      span.text(line);\n    } else {\n      textElem.text(line);\n    }\n    if (\n      typeof textData.valign !== 'undefined' &&\n      typeof textData.textMargin !== 'undefined' &&\n      textData.textMargin > 0\n    ) {\n      textHeight += (textElem._groups || textElem)[0][0].getBBox().height;\n      prevTextHeight = textHeight;\n    }\n\n    textElems.push(textElem);\n  }\n\n  return textElems;\n};\n\nexport const drawLabel = function (elem, txtObject) {\n  /**\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} cut\n   * @returns {any}\n   */\n  function genPoints(x, y, width, height, cut) {\n    return (\n      x +\n      ',' +\n      y +\n      ' ' +\n      (x + width) +\n      ',' +\n      y +\n      ' ' +\n      (x + width) +\n      ',' +\n      (y + height - cut) +\n      ' ' +\n      (x + width - cut * 1.2) +\n      ',' +\n      (y + height) +\n      ' ' +\n      x +\n      ',' +\n      (y + height)\n    );\n  }\n  const polygon = elem.append('polygon');\n  polygon.attr('points', genPoints(txtObject.x, txtObject.y, txtObject.width, txtObject.height, 7));\n  polygon.attr('class', 'labelBox');\n\n  txtObject.y = txtObject.y + txtObject.height / 2;\n\n  drawText(elem, txtObject);\n  return polygon;\n};\n\nlet actorCnt = -1;\n\nexport const fixLifeLineHeights = (diagram, bounds) => {\n  if (!diagram.selectAll) return;\n  diagram\n    .selectAll('.actor-line')\n    .attr('class', '200')\n    .attr('y2', bounds - 55);\n};\n\n/**\n * Draws an actor in the diagram with the attached line\n *\n * @param {any} elem - The diagram we'll draw to.\n * @param {any} actor - The actor to draw.\n * @param {any} conf - DrawText implementation discriminator object\n */\nconst drawActorTypeParticipant = function (elem, actor, conf) {\n  const center = actor.x + actor.width / 2;\n\n  const boxpluslineGroup = elem.append('g');\n  var g = boxpluslineGroup;\n\n  if (actor.y === 0) {\n    actorCnt++;\n    g.append('line')\n      .attr('id', 'actor' + actorCnt)\n      .attr('x1', center)\n      .attr('y1', 5)\n      .attr('x2', center)\n      .attr('y2', 2000)\n      .attr('class', 'actor-line')\n      .attr('stroke-width', '0.5px')\n      .attr('stroke', '#999');\n\n    g = boxpluslineGroup.append('g');\n    actor.actorCnt = actorCnt;\n\n    if (actor.links != null) {\n      g.attr('id', 'root-' + actorCnt);\n      addPopupInteraction('#root-' + actorCnt, actorCnt);\n    }\n  }\n\n  const rect = getNoteRect();\n  var cssclass = 'actor';\n  if (actor.properties != null && actor.properties['class']) {\n    cssclass = actor.properties['class'];\n  } else {\n    rect.fill = '#eaeaea';\n  }\n  rect.x = actor.x;\n  rect.y = actor.y;\n  rect.width = actor.width;\n  rect.height = actor.height;\n  rect.class = cssclass;\n  rect.rx = 3;\n  rect.ry = 3;\n  const rectElem = drawRect(g, rect);\n  actor.rectData = rect;\n\n  if (actor.properties != null && actor.properties['icon']) {\n    const iconSrc = actor.properties['icon'].trim();\n    if (iconSrc.charAt(0) === '@') {\n      drawEmbeddedImage(g, rect.x + rect.width - 20, rect.y + 10, iconSrc.substr(1));\n    } else {\n      drawImage(g, rect.x + rect.width - 20, rect.y + 10, iconSrc);\n    }\n  }\n\n  _drawTextCandidateFunc(conf)(\n    actor.description,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: 'actor' },\n    conf\n  );\n\n  let height = actor.height;\n  if (rectElem.node) {\n    const bounds = rectElem.node().getBBox();\n    actor.height = bounds.height;\n    height = bounds.height;\n  }\n\n  return height;\n};\n\nconst drawActorTypeActor = function (elem, actor, conf) {\n  const center = actor.x + actor.width / 2;\n\n  if (actor.y === 0) {\n    actorCnt++;\n    elem\n      .append('line')\n      .attr('id', 'actor' + actorCnt)\n      .attr('x1', center)\n      .attr('y1', 80)\n      .attr('x2', center)\n      .attr('y2', 2000)\n      .attr('class', 'actor-line')\n      .attr('stroke-width', '0.5px')\n      .attr('stroke', '#999');\n  }\n  const actElem = elem.append('g');\n  actElem.attr('class', 'actor-man');\n\n  const rect = getNoteRect();\n  rect.x = actor.x;\n  rect.y = actor.y;\n  rect.fill = '#eaeaea';\n  rect.width = actor.width;\n  rect.height = actor.height;\n  rect.class = 'actor';\n  rect.rx = 3;\n  rect.ry = 3;\n  // drawRect(actElem, rect);\n\n  actElem\n    .append('line')\n    .attr('id', 'actor-man-torso' + actorCnt)\n    .attr('x1', center)\n    .attr('y1', actor.y + 25)\n    .attr('x2', center)\n    .attr('y2', actor.y + 45);\n\n  actElem\n    .append('line')\n    .attr('id', 'actor-man-arms' + actorCnt)\n    .attr('x1', center - 18)\n    .attr('y1', actor.y + 33)\n    .attr('x2', center + 18)\n    .attr('y2', actor.y + 33);\n  actElem\n    .append('line')\n    .attr('x1', center - 18)\n    .attr('y1', actor.y + 60)\n    .attr('x2', center)\n    .attr('y2', actor.y + 45);\n  actElem\n    .append('line')\n    .attr('x1', center)\n    .attr('y1', actor.y + 45)\n    .attr('x2', center + 16)\n    .attr('y2', actor.y + 60);\n\n  const circle = actElem.append('circle');\n  circle.attr('cx', actor.x + actor.width / 2);\n  circle.attr('cy', actor.y + 10);\n  circle.attr('r', 15);\n  circle.attr('width', actor.width);\n  circle.attr('height', actor.height);\n\n  const bounds = actElem.node().getBBox();\n  actor.height = bounds.height;\n\n  _drawTextCandidateFunc(conf)(\n    actor.description,\n    actElem,\n    rect.x,\n    rect.y + 35,\n    rect.width,\n    rect.height,\n    { class: 'actor' },\n    conf\n  );\n\n  return actor.height;\n};\n\nexport const drawActor = function (elem, actor, conf) {\n  switch (actor.type) {\n    case 'actor':\n      return drawActorTypeActor(elem, actor, conf);\n    case 'participant':\n      return drawActorTypeParticipant(elem, actor, conf);\n  }\n};\n\nexport const anchorElement = function (elem) {\n  return elem.append('g');\n};\n/**\n * Draws an activation in the diagram\n *\n * @param {any} elem - Element to append activation rect.\n * @param {any} bounds - Activation box bounds.\n * @param {any} verticalPos - Precise y cooridnate of bottom activation box edge.\n * @param {any} conf - Sequence diagram config object.\n * @param {any} actorActivations - Number of activations on the actor.\n */\nexport const drawActivation = function (elem, bounds, verticalPos, conf, actorActivations) {\n  const rect = getNoteRect();\n  const g = bounds.anchored;\n  rect.x = bounds.startx;\n  rect.y = bounds.starty;\n  rect.class = 'activation' + (actorActivations % 3); // Will evaluate to 0, 1 or 2\n  rect.width = bounds.stopx - bounds.startx;\n  rect.height = verticalPos - bounds.starty;\n  drawRect(g, rect);\n};\n\n/**\n * Draws a loop in the diagram\n *\n * @param {any} elem - Elemenet to append the loop to.\n * @param {any} loopModel - LoopModel of the given loop.\n * @param {any} labelText - Text within the loop.\n * @param {any} conf - Diagrom configuration\n * @returns {any}\n */\nexport const drawLoop = function (elem, loopModel, labelText, conf) {\n  const {\n    boxMargin,\n    boxTextMargin,\n    labelBoxHeight,\n    labelBoxWidth,\n    messageFontFamily: fontFamily,\n    messageFontSize: fontSize,\n    messageFontWeight: fontWeight,\n  } = conf;\n  const g = elem.append('g');\n  const drawLoopLine = function (startx, starty, stopx, stopy) {\n    return g\n      .append('line')\n      .attr('x1', startx)\n      .attr('y1', starty)\n      .attr('x2', stopx)\n      .attr('y2', stopy)\n      .attr('class', 'loopLine');\n  };\n  drawLoopLine(loopModel.startx, loopModel.starty, loopModel.stopx, loopModel.starty);\n  drawLoopLine(loopModel.stopx, loopModel.starty, loopModel.stopx, loopModel.stopy);\n  drawLoopLine(loopModel.startx, loopModel.stopy, loopModel.stopx, loopModel.stopy);\n  drawLoopLine(loopModel.startx, loopModel.starty, loopModel.startx, loopModel.stopy);\n  if (typeof loopModel.sections !== 'undefined') {\n    loopModel.sections.forEach(function (item) {\n      drawLoopLine(loopModel.startx, item.y, loopModel.stopx, item.y).style(\n        'stroke-dasharray',\n        '3, 3'\n      );\n    });\n  }\n\n  let txt = getTextObj();\n  txt.text = labelText;\n  txt.x = loopModel.startx;\n  txt.y = loopModel.starty;\n  txt.fontFamily = fontFamily;\n  txt.fontSize = fontSize;\n  txt.fontWeight = fontWeight;\n  txt.anchor = 'middle';\n  txt.valign = 'middle';\n  txt.tspan = false;\n  txt.width = labelBoxWidth || 50;\n  txt.height = labelBoxHeight || 20;\n  txt.textMargin = boxTextMargin;\n  txt.class = 'labelText';\n\n  drawLabel(g, txt);\n  txt = getTextObj();\n  txt.text = loopModel.title;\n  txt.x = loopModel.startx + labelBoxWidth / 2 + (loopModel.stopx - loopModel.startx) / 2;\n  txt.y = loopModel.starty + boxMargin + boxTextMargin;\n  txt.anchor = 'middle';\n  txt.valign = 'middle';\n  txt.textMargin = boxTextMargin;\n  txt.class = 'loopText';\n  txt.fontFamily = fontFamily;\n  txt.fontSize = fontSize;\n  txt.fontWeight = fontWeight;\n  txt.wrap = true;\n\n  let textElem = drawText(g, txt);\n\n  if (typeof loopModel.sectionTitles !== 'undefined') {\n    loopModel.sectionTitles.forEach(function (item, idx) {\n      if (item.message) {\n        txt.text = item.message;\n        txt.x = loopModel.startx + (loopModel.stopx - loopModel.startx) / 2;\n        txt.y = loopModel.sections[idx].y + boxMargin + boxTextMargin;\n        txt.class = 'loopText';\n        txt.anchor = 'middle';\n        txt.valign = 'middle';\n        txt.tspan = false;\n        txt.fontFamily = fontFamily;\n        txt.fontSize = fontSize;\n        txt.fontWeight = fontWeight;\n        txt.wrap = loopModel.wrap;\n        textElem = drawText(g, txt);\n        let sectionHeight = Math.round(\n          textElem\n            .map((te) => (te._groups || te)[0][0].getBBox().height)\n            .reduce((acc, curr) => acc + curr)\n        );\n        loopModel.sections[idx].height += sectionHeight - (boxMargin + boxTextMargin);\n      }\n    });\n  }\n\n  loopModel.height = Math.round(loopModel.stopy - loopModel.starty);\n  return g;\n};\n\n/**\n * Draws a background rectangle\n *\n * @param {any} elem Diagram (reference for bounds)\n * @param {any} bounds Shape of the rectangle\n */\nexport const drawBackgroundRect = function (elem, bounds) {\n  const rectElem = drawRect(elem, {\n    x: bounds.startx,\n    y: bounds.starty,\n    width: bounds.stopx - bounds.startx,\n    height: bounds.stopy - bounds.starty,\n    fill: bounds.fill,\n    class: 'rect',\n  });\n  rectElem.lower();\n};\n\nexport const insertDatabaseIcon = function (elem) {\n  elem\n    .append('defs')\n    .append('symbol')\n    .attr('id', 'database')\n    .attr('fill-rule', 'evenodd')\n    .attr('clip-rule', 'evenodd')\n    .append('path')\n    .attr('transform', 'scale(.5)')\n    .attr(\n      'd',\n      'M12.258.001l.256.004.255.005.253.008.251.01.249.012.247.015.246.016.242.019.241.02.239.023.236.024.233.027.231.028.229.031.225.032.223.034.22.036.217.038.214.04.211.041.208.043.205.045.201.046.198.048.194.05.191.051.187.053.183.054.18.056.175.057.172.059.168.06.163.061.16.063.155.064.15.066.074.033.073.033.071.034.07.034.069.035.068.035.067.035.066.035.064.036.064.036.062.036.06.036.06.037.058.037.058.037.055.038.055.038.053.038.052.038.051.039.05.039.048.039.047.039.045.04.044.04.043.04.041.04.04.041.039.041.037.041.036.041.034.041.033.042.032.042.03.042.029.042.027.042.026.043.024.043.023.043.021.043.02.043.018.044.017.043.015.044.013.044.012.044.011.045.009.044.007.045.006.045.004.045.002.045.001.045v17l-.001.045-.002.045-.004.045-.006.045-.007.045-.009.044-.011.045-.012.044-.013.044-.015.044-.017.043-.018.044-.02.043-.021.043-.023.043-.024.043-.026.043-.027.042-.029.042-.03.042-.032.042-.033.042-.034.041-.036.041-.037.041-.039.041-.04.041-.041.04-.043.04-.044.04-.045.04-.047.039-.048.039-.05.039-.051.039-.052.038-.053.038-.055.038-.055.038-.058.037-.058.037-.06.037-.06.036-.062.036-.064.036-.064.036-.066.035-.067.035-.068.035-.069.035-.07.034-.071.034-.073.033-.074.033-.15.066-.155.064-.16.063-.163.061-.168.06-.172.059-.175.057-.18.056-.183.054-.187.053-.191.051-.194.05-.198.048-.201.046-.205.045-.208.043-.211.041-.214.04-.217.038-.22.036-.223.034-.225.032-.229.031-.231.028-.233.027-.236.024-.239.023-.241.02-.242.019-.246.016-.247.015-.249.012-.251.01-.253.008-.255.005-.256.004-.258.001-.258-.001-.256-.004-.255-.005-.253-.008-.251-.01-.249-.012-.247-.015-.245-.016-.243-.019-.241-.02-.238-.023-.236-.024-.234-.027-.231-.028-.228-.031-.226-.032-.223-.034-.22-.036-.217-.038-.214-.04-.211-.041-.208-.043-.204-.045-.201-.046-.198-.048-.195-.05-.19-.051-.187-.053-.184-.054-.179-.056-.176-.057-.172-.059-.167-.06-.164-.061-.159-.063-.155-.064-.151-.066-.074-.033-.072-.033-.072-.034-.07-.034-.069-.035-.068-.035-.067-.035-.066-.035-.064-.036-.063-.036-.062-.036-.061-.036-.06-.037-.058-.037-.057-.037-.056-.038-.055-.038-.053-.038-.052-.038-.051-.039-.049-.039-.049-.039-.046-.039-.046-.04-.044-.04-.043-.04-.041-.04-.04-.041-.039-.041-.037-.041-.036-.041-.034-.041-.033-.042-.032-.042-.03-.042-.029-.042-.027-.042-.026-.043-.024-.043-.023-.043-.021-.043-.02-.043-.018-.044-.017-.043-.015-.044-.013-.044-.012-.044-.011-.045-.009-.044-.007-.045-.006-.045-.004-.045-.002-.045-.001-.045v-17l.001-.045.002-.045.004-.045.006-.045.007-.045.009-.044.011-.045.012-.044.013-.044.015-.044.017-.043.018-.044.02-.043.021-.043.023-.043.024-.043.026-.043.027-.042.029-.042.03-.042.032-.042.033-.042.034-.041.036-.041.037-.041.039-.041.04-.041.041-.04.043-.04.044-.04.046-.04.046-.039.049-.039.049-.039.051-.039.052-.038.053-.038.055-.038.056-.038.057-.037.058-.037.06-.037.061-.036.062-.036.063-.036.064-.036.066-.035.067-.035.068-.035.069-.035.07-.034.072-.034.072-.033.074-.033.151-.066.155-.064.159-.063.164-.061.167-.06.172-.059.176-.057.179-.056.184-.054.187-.053.19-.051.195-.05.198-.048.201-.046.204-.045.208-.043.211-.041.214-.04.217-.038.22-.036.223-.034.226-.032.228-.031.231-.028.234-.027.236-.024.238-.023.241-.02.243-.019.245-.016.247-.015.249-.012.251-.01.253-.008.255-.005.256-.004.258-.001.258.001zm-9.258 20.499v.01l.001.021.003.021.004.022.005.021.006.022.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.023.018.024.019.024.021.024.022.025.023.024.024.025.052.049.056.05.061.051.066.051.07.051.075.051.079.052.084.052.088.052.092.052.097.052.102.051.105.052.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.048.144.049.147.047.152.047.155.047.16.045.163.045.167.043.171.043.176.041.178.041.183.039.187.039.19.037.194.035.197.035.202.033.204.031.209.03.212.029.216.027.219.025.222.024.226.021.23.02.233.018.236.016.24.015.243.012.246.01.249.008.253.005.256.004.259.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.021.224-.024.22-.026.216-.027.212-.028.21-.031.205-.031.202-.034.198-.034.194-.036.191-.037.187-.039.183-.04.179-.04.175-.042.172-.043.168-.044.163-.045.16-.046.155-.046.152-.047.148-.048.143-.049.139-.049.136-.05.131-.05.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.053.083-.051.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.05.023-.024.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.023.01-.022.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.127l-.077.055-.08.053-.083.054-.085.053-.087.052-.09.052-.093.051-.095.05-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.045-.118.044-.12.043-.122.042-.124.042-.126.041-.128.04-.13.04-.132.038-.134.038-.135.037-.138.037-.139.035-.142.035-.143.034-.144.033-.147.032-.148.031-.15.03-.151.03-.153.029-.154.027-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.01-.179.008-.179.008-.181.006-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.006-.179-.008-.179-.008-.178-.01-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.027-.153-.029-.151-.03-.15-.03-.148-.031-.146-.032-.145-.033-.143-.034-.141-.035-.14-.035-.137-.037-.136-.037-.134-.038-.132-.038-.13-.04-.128-.04-.126-.041-.124-.042-.122-.042-.12-.044-.117-.043-.116-.045-.113-.045-.112-.046-.109-.047-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.05-.093-.052-.09-.051-.087-.052-.085-.053-.083-.054-.08-.054-.077-.054v4.127zm0-5.654v.011l.001.021.003.021.004.021.005.022.006.022.007.022.009.022.01.022.011.023.012.023.013.023.015.024.016.023.017.024.018.024.019.024.021.024.022.024.023.025.024.024.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.052.11.051.114.051.119.052.123.05.127.051.131.05.135.049.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.044.171.042.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.022.23.02.233.018.236.016.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.012.241-.015.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.048.139-.05.136-.049.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.051.051-.049.023-.025.023-.024.021-.025.02-.024.019-.024.018-.024.017-.024.015-.023.014-.023.013-.024.012-.022.01-.023.01-.023.008-.022.006-.022.006-.022.004-.021.004-.022.001-.021.001-.021v-4.139l-.077.054-.08.054-.083.054-.085.052-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.044-.118.044-.12.044-.122.042-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.035-.143.033-.144.033-.147.033-.148.031-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.009-.179.009-.179.007-.181.007-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.007-.179-.007-.179-.009-.178-.009-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.031-.146-.033-.145-.033-.143-.033-.141-.035-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.04-.126-.041-.124-.042-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.051-.093-.051-.09-.051-.087-.053-.085-.052-.083-.054-.08-.054-.077-.054v4.139zm0-5.666v.011l.001.02.003.022.004.021.005.022.006.021.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.024.018.023.019.024.021.025.022.024.023.024.024.025.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.051.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.043.171.043.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.021.23.02.233.018.236.017.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.013.241-.014.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.049.139-.049.136-.049.131-.051.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.049.023-.025.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.022.01-.023.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.153l-.077.054-.08.054-.083.053-.085.053-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.048-.105.048-.106.048-.109.046-.111.046-.114.046-.115.044-.118.044-.12.043-.122.043-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.034-.143.034-.144.033-.147.032-.148.032-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.024-.161.024-.162.023-.163.023-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.01-.178.01-.179.009-.179.007-.181.006-.182.006-.182.004-.184.003-.184.001-.185.001-.185-.001-.184-.001-.184-.003-.182-.004-.182-.006-.181-.006-.179-.007-.179-.009-.178-.01-.176-.01-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.023-.162-.023-.161-.024-.159-.024-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.032-.146-.032-.145-.033-.143-.034-.141-.034-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.041-.126-.041-.124-.041-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.048-.105-.048-.102-.048-.1-.05-.097-.049-.095-.051-.093-.051-.09-.052-.087-.052-.085-.053-.083-.053-.08-.054-.077-.054v4.153zm8.74-8.179l-.257.004-.254.005-.25.008-.247.011-.244.012-.241.014-.237.016-.233.018-.231.021-.226.022-.224.023-.22.026-.216.027-.212.028-.21.031-.205.032-.202.033-.198.034-.194.036-.191.038-.187.038-.183.04-.179.041-.175.042-.172.043-.168.043-.163.045-.16.046-.155.046-.152.048-.148.048-.143.048-.139.049-.136.05-.131.05-.126.051-.123.051-.118.051-.114.052-.11.052-.106.052-.101.052-.096.052-.092.052-.088.052-.083.052-.079.052-.074.051-.07.052-.065.051-.06.05-.056.05-.051.05-.023.025-.023.024-.021.024-.02.025-.019.024-.018.024-.017.023-.015.024-.014.023-.013.023-.012.023-.01.023-.01.022-.008.022-.006.023-.006.021-.004.022-.004.021-.001.021-.001.021.001.021.001.021.004.021.004.022.006.021.006.023.008.022.01.022.01.023.012.023.013.023.014.023.015.024.017.023.018.024.019.024.02.025.021.024.023.024.023.025.051.05.056.05.06.05.065.051.07.052.074.051.079.052.083.052.088.052.092.052.096.052.101.052.106.052.11.052.114.052.118.051.123.051.126.051.131.05.136.05.139.049.143.048.148.048.152.048.155.046.16.046.163.045.168.043.172.043.175.042.179.041.183.04.187.038.191.038.194.036.198.034.202.033.205.032.21.031.212.028.216.027.22.026.224.023.226.022.231.021.233.018.237.016.241.014.244.012.247.011.25.008.254.005.257.004.26.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.022.224-.023.22-.026.216-.027.212-.028.21-.031.205-.032.202-.033.198-.034.194-.036.191-.038.187-.038.183-.04.179-.041.175-.042.172-.043.168-.043.163-.045.16-.046.155-.046.152-.048.148-.048.143-.048.139-.049.136-.05.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.05.051-.05.023-.025.023-.024.021-.024.02-.025.019-.024.018-.024.017-.023.015-.024.014-.023.013-.023.012-.023.01-.023.01-.022.008-.022.006-.023.006-.021.004-.022.004-.021.001-.021.001-.021-.001-.021-.001-.021-.004-.021-.004-.022-.006-.021-.006-.023-.008-.022-.01-.022-.01-.023-.012-.023-.013-.023-.014-.023-.015-.024-.017-.023-.018-.024-.019-.024-.02-.025-.021-.024-.023-.024-.023-.025-.051-.05-.056-.05-.06-.05-.065-.051-.07-.052-.074-.051-.079-.052-.083-.052-.088-.052-.092-.052-.096-.052-.101-.052-.106-.052-.11-.052-.114-.052-.118-.051-.123-.051-.126-.051-.131-.05-.136-.05-.139-.049-.143-.048-.148-.048-.152-.048-.155-.046-.16-.046-.163-.045-.168-.043-.172-.043-.175-.042-.179-.041-.183-.04-.187-.038-.191-.038-.194-.036-.198-.034-.202-.033-.205-.032-.21-.031-.212-.028-.216-.027-.22-.026-.224-.023-.226-.022-.231-.021-.233-.018-.237-.016-.241-.014-.244-.012-.247-.011-.25-.008-.254-.005-.257-.004-.26-.001-.26.001z'\n    );\n};\n\nexport const insertComputerIcon = function (elem) {\n  elem\n    .append('defs')\n    .append('symbol')\n    .attr('id', 'computer')\n    .attr('width', '24')\n    .attr('height', '24')\n    .append('path')\n    .attr('transform', 'scale(.5)')\n    .attr(\n      'd',\n      'M2 2v13h20v-13h-20zm18 11h-16v-9h16v9zm-10.228 6l.466-1h3.524l.467 1h-4.457zm14.228 3h-24l2-6h2.104l-1.33 4h18.45l-1.297-4h2.073l2 6zm-5-10h-14v-7h14v7z'\n    );\n};\n\nexport const insertClockIcon = function (elem) {\n  elem\n    .append('defs')\n    .append('symbol')\n    .attr('id', 'clock')\n    .attr('width', '24')\n    .attr('height', '24')\n    .append('path')\n    .attr('transform', 'scale(.5)')\n    .attr(\n      'd',\n      'M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.848 12.459c.202.038.202.333.001.372-1.907.361-6.045 1.111-6.547 1.111-.719 0-1.301-.582-1.301-1.301 0-.512.77-5.447 1.125-7.445.034-.192.312-.181.343.014l.985 6.238 5.394 1.011z'\n    );\n};\n\n/**\n * Setup arrow head and define the marker. The result is appended to the svg.\n *\n * @param elem\n */\nexport const insertArrowHead = function (elem) {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'arrowhead')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 12)\n    .attr('markerHeight', 12)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z'); // this is actual shape for arrowhead\n};\n/**\n * Setup arrow head and define the marker. The result is appended to the svg.\n *\n * @param {any} elem\n */\nexport const insertArrowFilledHead = function (elem) {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'filled-head')\n    .attr('refX', 18)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L14,7 L9,1 Z');\n};\n/**\n * Setup node number. The result is appended to the svg.\n *\n * @param {any} elem\n */\nexport const insertSequenceNumber = function (elem) {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'sequencenumber')\n    .attr('refX', 15)\n    .attr('refY', 15)\n    .attr('markerWidth', 60)\n    .attr('markerHeight', 40)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('cx', 15)\n    .attr('cy', 15)\n    .attr('r', 6);\n  // .style(\"fill\", '#f00');\n};\n/**\n * Setup arrow head and define the marker. The result is appended to the svg.\n *\n * @param {any} elem\n */\nexport const insertArrowCrossHead = function (elem) {\n  const defs = elem.append('defs');\n  const marker = defs\n    .append('marker')\n    .attr('id', 'crosshead')\n    .attr('markerWidth', 15)\n    .attr('markerHeight', 8)\n    .attr('orient', 'auto')\n    .attr('refX', 16)\n    .attr('refY', 4);\n\n  // The arrow\n  marker\n    .append('path')\n    .attr('fill', 'black')\n    .attr('stroke', '#000000')\n    .style('stroke-dasharray', '0, 0')\n    .attr('stroke-width', '1px')\n    .attr('d', 'M 9,2 V 6 L16,4 Z');\n\n  // The cross\n  marker\n    .append('path')\n    .attr('fill', 'none')\n    .attr('stroke', '#000000')\n    .style('stroke-dasharray', '0, 0')\n    .attr('stroke-width', '1px')\n    .attr('d', 'M 0,1 L 6,7 M 6,1 L 0,7');\n  // this is actual shape for arrowhead\n};\n\nexport const getTextObj = function () {\n  return {\n    x: 0,\n    y: 0,\n    fill: undefined,\n    anchor: undefined,\n    style: '#666',\n    width: undefined,\n    height: undefined,\n    textMargin: 0,\n    rx: 0,\n    ry: 0,\n    tspan: true,\n    valign: undefined,\n  };\n};\n\nexport const getNoteRect = function () {\n  return {\n    x: 0,\n    y: 0,\n    fill: '#EDF2AE',\n    stroke: '#666',\n    width: 100,\n    anchor: 'start',\n    height: 100,\n    rx: 0,\n    ry: 0,\n  };\n};\n\nconst _drawTextCandidateFunc = (function () {\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   */\n  function byText(content, g, x, y, width, height, textAttrs) {\n    const text = g\n      .append('text')\n      .attr('x', x + width / 2)\n      .attr('y', y + height / 2 + 5)\n      .style('text-anchor', 'middle')\n      .text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byTspan(content, g, x, y, width, height, textAttrs, conf) {\n    const { actorFontSize, actorFontFamily, actorFontWeight } = conf;\n\n    const lines = content.split(common.lineBreakRegex);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * actorFontSize - (actorFontSize * (lines.length - 1)) / 2;\n      const text = g\n        .append('text')\n        .attr('x', x + width / 2)\n        .attr('y', y)\n        .style('text-anchor', 'middle')\n        .style('font-size', actorFontSize)\n        .style('font-weight', actorFontWeight)\n        .style('font-family', actorFontFamily);\n      text\n        .append('tspan')\n        .attr('x', x + width / 2)\n        .attr('dy', dy)\n        .text(lines[i]);\n\n      text\n        .attr('y', y + height / 2.0)\n        .attr('dominant-baseline', 'central')\n        .attr('alignment-baseline', 'central');\n\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byFo(content, g, x, y, width, height, textAttrs, conf) {\n    const s = g.append('switch');\n    const f = s\n      .append('foreignObject')\n      .attr('x', x)\n      .attr('y', y)\n      .attr('width', width)\n      .attr('height', height);\n\n    const text = f\n      .append('xhtml:div')\n      .style('display', 'table')\n      .style('height', '100%')\n      .style('width', '100%');\n\n    text\n      .append('div')\n      .style('display', 'table-cell')\n      .style('text-align', 'center')\n      .style('vertical-align', 'middle')\n      .text(content);\n\n    byTspan(content, s, x, y, width, height, textAttrs, conf);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} toText\n   * @param {any} fromTextAttrsDict\n   */\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (fromTextAttrsDict.hasOwnProperty(key)) { // eslint-disable-line\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n\n  return function (conf) {\n    return conf.textPlacement === 'fo' ? byFo : conf.textPlacement === 'old' ? byText : byTspan;\n  };\n})();\n\nconst _drawMenuItemTextCandidateFunc = (function () {\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   */\n  function byText(content, g, x, y, width, height, textAttrs) {\n    const text = g\n      .append('text')\n      .attr('x', x)\n      .attr('y', y)\n      .style('text-anchor', 'start')\n      .text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byTspan(content, g, x, y, width, height, textAttrs, conf) {\n    const { actorFontSize, actorFontFamily, actorFontWeight } = conf;\n\n    const lines = content.split(common.lineBreakRegex);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * actorFontSize - (actorFontSize * (lines.length - 1)) / 2;\n      const text = g\n        .append('text')\n        .attr('x', x)\n        .attr('y', y)\n        .style('text-anchor', 'start')\n        .style('font-size', actorFontSize)\n        .style('font-weight', actorFontWeight)\n        .style('font-family', actorFontFamily);\n      text.append('tspan').attr('x', x).attr('dy', dy).text(lines[i]);\n\n      text\n        .attr('y', y + height / 2.0)\n        .attr('dominant-baseline', 'central')\n        .attr('alignment-baseline', 'central');\n\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byFo(content, g, x, y, width, height, textAttrs, conf) {\n    const s = g.append('switch');\n    const f = s\n      .append('foreignObject')\n      .attr('x', x)\n      .attr('y', y)\n      .attr('width', width)\n      .attr('height', height);\n\n    const text = f\n      .append('xhtml:div')\n      .style('display', 'table')\n      .style('height', '100%')\n      .style('width', '100%');\n\n    text\n      .append('div')\n      .style('display', 'table-cell')\n      .style('text-align', 'center')\n      .style('vertical-align', 'middle')\n      .text(content);\n\n    byTspan(content, s, x, y, width, height, textAttrs, conf);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} toText\n   * @param {any} fromTextAttrsDict\n   */\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (fromTextAttrsDict.hasOwnProperty(key)) { // eslint-disable-line\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n\n  return function (conf) {\n    return conf.textPlacement === 'fo' ? byFo : conf.textPlacement === 'old' ? byText : byTspan;\n  };\n})();\n\nexport default {\n  drawRect,\n  drawText,\n  drawLabel,\n  drawActor,\n  drawPopup,\n  drawImage,\n  drawEmbeddedImage,\n  anchorElement,\n  drawActivation,\n  drawLoop,\n  drawBackgroundRect,\n  insertArrowHead,\n  insertArrowFilledHead,\n  insertSequenceNumber,\n  insertArrowCrossHead,\n  insertDatabaseIcon,\n  insertComputerIcon,\n  insertClockIcon,\n  getTextObj,\n  getNoteRect,\n  popupMenu,\n  popdownMenu,\n  fixLifeLineHeights,\n  sanitizeUrl,\n};\n","const idCache = {};\n\nexport const set = (key, val) => {\n  idCache[key] = val;\n};\n\nexport const get = (k) => idCache[k];\nexport const keys = () => Object.keys(idCache);\nexport const size = () => keys().length;\n\nexport default {\n  get,\n  set,\n  keys,\n  size,\n};\n","import { line, curveBasis } from 'd3';\nimport idCache from './id-cache.js';\nimport stateDb from './stateDb';\nimport utils from '../../utils';\nimport common from '../common/common';\nimport { getConfig } from '../../config';\nimport { log } from '../../logger';\n\n/**\n * Draws a start state as a black circle\n *\n * @param {any} g\n */\nexport const drawStartState = (g) =>\n  g\n    .append('circle')\n    // .style('stroke', 'black')\n    // .style('fill', 'black')\n    .attr('class', 'start-state')\n    .attr('r', getConfig().state.sizeUnit)\n    .attr('cx', getConfig().state.padding + getConfig().state.sizeUnit)\n    .attr('cy', getConfig().state.padding + getConfig().state.sizeUnit);\n\n/**\n * Draws a start state as a black circle\n *\n * @param {any} g\n */\nexport const drawDivider = (g) =>\n  g\n    .append('line')\n    .style('stroke', 'grey')\n    .style('stroke-dasharray', '3')\n    .attr('x1', getConfig().state.textHeight)\n    .attr('class', 'divider')\n    .attr('x2', getConfig().state.textHeight * 2)\n    .attr('y1', 0)\n    .attr('y2', 0);\n\n/**\n * Draws a an end state as a black circle\n *\n * @param {any} g\n * @param {any} stateDef\n */\nexport const drawSimpleState = (g, stateDef) => {\n  const state = g\n    .append('text')\n    .attr('x', 2 * getConfig().state.padding)\n    .attr('y', getConfig().state.textHeight + 2 * getConfig().state.padding)\n    .attr('font-size', getConfig().state.fontSize)\n    .attr('class', 'state-title')\n    .text(stateDef.id);\n\n  const classBox = state.node().getBBox();\n  g.insert('rect', ':first-child')\n    .attr('x', getConfig().state.padding)\n    .attr('y', getConfig().state.padding)\n    .attr('width', classBox.width + 2 * getConfig().state.padding)\n    .attr('height', classBox.height + 2 * getConfig().state.padding)\n    .attr('rx', getConfig().state.radius);\n\n  return state;\n};\n\n/**\n * Draws a state with descriptions\n *\n * @param {any} g\n * @param {any} stateDef\n * @returns\n */\nexport const drawDescrState = (g, stateDef) => {\n  const addTspan = function (textEl, txt, isFirst) {\n    const tSpan = textEl\n      .append('tspan')\n      .attr('x', 2 * getConfig().state.padding)\n      .text(txt);\n    if (!isFirst) {\n      tSpan.attr('dy', getConfig().state.textHeight);\n    }\n  };\n  const title = g\n    .append('text')\n    .attr('x', 2 * getConfig().state.padding)\n    .attr('y', getConfig().state.textHeight + 1.3 * getConfig().state.padding)\n    .attr('font-size', getConfig().state.fontSize)\n    .attr('class', 'state-title')\n    .text(stateDef.descriptions[0]);\n\n  const titleBox = title.node().getBBox();\n  const titleHeight = titleBox.height;\n\n  const description = g\n    .append('text') // text label for the x axis\n    .attr('x', getConfig().state.padding)\n    .attr(\n      'y',\n      titleHeight +\n        getConfig().state.padding * 0.4 +\n        getConfig().state.dividerMargin +\n        getConfig().state.textHeight\n    )\n    .attr('class', 'state-description');\n\n  let isFirst = true;\n  let isSecond = true;\n  stateDef.descriptions.forEach(function (descr) {\n    if (!isFirst) {\n      addTspan(description, descr, isSecond);\n      isSecond = false;\n    }\n    isFirst = false;\n  });\n\n  const descrLine = g\n    .append('line') // text label for the x axis\n    .attr('x1', getConfig().state.padding)\n    .attr('y1', getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2)\n    .attr('y2', getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2)\n    .attr('class', 'descr-divider');\n  const descrBox = description.node().getBBox();\n  const width = Math.max(descrBox.width, titleBox.width);\n\n  descrLine.attr('x2', width + 3 * getConfig().state.padding);\n  // const classBox = title.node().getBBox();\n\n  g.insert('rect', ':first-child')\n    .attr('x', getConfig().state.padding)\n    .attr('y', getConfig().state.padding)\n    .attr('width', width + 2 * getConfig().state.padding)\n    .attr('height', descrBox.height + titleHeight + 2 * getConfig().state.padding)\n    .attr('rx', getConfig().state.radius);\n\n  return g;\n};\n\n/** Adds the creates a box around the existing content and adds a panel for the id on top of the content. */\n/**\n * Function that creates an title row and a frame around a substate for a composit state diagram.\n * The function returns a new d3 svg object with updated width and height properties;\n *\n * @param {any} g The d3 svg object for the substate to framed\n * @param {any} stateDef The info about the\n * @param {any} altBkg\n */\nexport const addTitleAndBox = (g, stateDef, altBkg) => {\n  const pad = getConfig().state.padding;\n  const dblPad = 2 * getConfig().state.padding;\n  const orgBox = g.node().getBBox();\n  const orgWidth = orgBox.width;\n  const orgX = orgBox.x;\n\n  const title = g\n    .append('text')\n    .attr('x', 0)\n    .attr('y', getConfig().state.titleShift)\n    .attr('font-size', getConfig().state.fontSize)\n    .attr('class', 'state-title')\n    .text(stateDef.id);\n\n  const titleBox = title.node().getBBox();\n  const titleWidth = titleBox.width + dblPad;\n  let width = Math.max(titleWidth, orgWidth); // + dblPad;\n  if (width === orgWidth) {\n    width = width + dblPad;\n  }\n  let startX;\n  // const lineY = 1 - getConfig().state.textHeight;\n  // const descrLine = g\n  //   .append('line') // text label for the x axis\n  //   .attr('x1', 0)\n  //   .attr('y1', lineY)\n  //   .attr('y2', lineY)\n  //   .attr('class', 'descr-divider');\n\n  const graphBox = g.node().getBBox();\n  // descrLine.attr('x2', graphBox.width + getConfig().state.padding);\n\n  if (stateDef.doc) {\n    // cnsole.warn(\n    //   stateDef.id,\n    //   'orgX: ',\n    //   orgX,\n    //   'width: ',\n    //   width,\n    //   'titleWidth: ',\n    //   titleWidth,\n    //   'orgWidth: ',\n    //   orgWidth,\n    //   'width',\n    //   width\n    // );\n  }\n\n  startX = orgX - pad;\n  if (titleWidth > orgWidth) {\n    startX = (orgWidth - width) / 2 + pad;\n  }\n  if (Math.abs(orgX - graphBox.x) < pad) {\n    if (titleWidth > orgWidth) {\n      startX = orgX - (titleWidth - orgWidth) / 2;\n    }\n  }\n\n  const lineY = 1 - getConfig().state.textHeight;\n  // White color\n  g.insert('rect', ':first-child')\n    .attr('x', startX)\n    .attr('y', lineY)\n    .attr('class', altBkg ? 'alt-composit' : 'composit')\n    .attr('width', width)\n    .attr(\n      'height',\n      graphBox.height + getConfig().state.textHeight + getConfig().state.titleShift + 1\n    )\n    .attr('rx', '0');\n\n  title.attr('x', startX + pad);\n  if (titleWidth <= orgWidth) title.attr('x', orgX + (width - dblPad) / 2 - titleWidth / 2 + pad);\n\n  // Title background\n  g.insert('rect', ':first-child')\n    .attr('x', startX)\n    .attr(\n      'y',\n      getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n    )\n    .attr('width', width)\n    // Just needs to be higher then the descr line, will be clipped by the white color box\n    .attr('height', getConfig().state.textHeight * 3)\n    .attr('rx', getConfig().state.radius);\n\n  // Full background\n  g.insert('rect', ':first-child')\n    .attr('x', startX)\n    .attr(\n      'y',\n      getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n    )\n    .attr('width', width)\n    .attr('height', graphBox.height + 3 + 2 * getConfig().state.textHeight)\n    .attr('rx', getConfig().state.radius);\n\n  return g;\n};\n\nconst drawEndState = (g) => {\n  g.append('circle')\n    // .style('stroke', 'black')\n    // .style('fill', 'white')\n    .attr('class', 'end-state-outer')\n    .attr('r', getConfig().state.sizeUnit + getConfig().state.miniPadding)\n    .attr(\n      'cx',\n      getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n    )\n    .attr(\n      'cy',\n      getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n    );\n\n  return (\n    g\n      .append('circle')\n      // .style('stroke', 'black')\n      // .style('fill', 'black')\n      .attr('class', 'end-state-inner')\n      .attr('r', getConfig().state.sizeUnit)\n      .attr('cx', getConfig().state.padding + getConfig().state.sizeUnit + 2)\n      .attr('cy', getConfig().state.padding + getConfig().state.sizeUnit + 2)\n  );\n};\nconst drawForkJoinState = (g, stateDef) => {\n  let width = getConfig().state.forkWidth;\n  let height = getConfig().state.forkHeight;\n\n  if (stateDef.parentId) {\n    let tmp = width;\n    width = height;\n    height = tmp;\n  }\n  return g\n    .append('rect')\n    .style('stroke', 'black')\n    .style('fill', 'black')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('x', getConfig().state.padding)\n    .attr('y', getConfig().state.padding);\n};\n\nexport const drawText = function (elem, textData) {\n  // Remove and ignore br:s\n  const nText = textData.text.replace(common.lineBreakRegex, ' ');\n\n  const textElem = elem.append('text');\n  textElem.attr('x', textData.x);\n  textElem.attr('y', textData.y);\n  textElem.style('text-anchor', textData.anchor);\n  textElem.attr('fill', textData.fill);\n  if (typeof textData.class !== 'undefined') {\n    textElem.attr('class', textData.class);\n  }\n\n  const span = textElem.append('tspan');\n  span.attr('x', textData.x + textData.textMargin * 2);\n  span.attr('fill', textData.fill);\n  span.text(nText);\n\n  return textElem;\n};\n\nconst _drawLongText = (_text, x, y, g) => {\n  let textHeight = 0;\n\n  const textElem = g.append('text');\n  textElem.style('text-anchor', 'start');\n  textElem.attr('class', 'noteText');\n\n  let text = _text.replace(/\\r\\n/g, '<br/>');\n  text = text.replace(/\\n/g, '<br/>');\n  const lines = text.split(common.lineBreakRegex);\n\n  let tHeight = 1.25 * getConfig().state.noteMargin;\n  for (const line of lines) {\n    const txt = line.trim();\n\n    if (txt.length > 0) {\n      const span = textElem.append('tspan');\n      span.text(txt);\n      if (tHeight === 0) {\n        const textBounds = span.node().getBBox();\n        tHeight += textBounds.height;\n      }\n      textHeight += tHeight;\n      span.attr('x', x + getConfig().state.noteMargin);\n      span.attr('y', y + textHeight + 1.25 * getConfig().state.noteMargin);\n    }\n  }\n  return { textWidth: textElem.node().getBBox().width, textHeight };\n};\n\n/**\n * Draws a note to the diagram\n *\n * @param text - The text of the given note.\n * @param g - The element the note is attached to.\n */\n\nexport const drawNote = (text, g) => {\n  g.attr('class', 'state-note');\n  const note = g.append('rect').attr('x', 0).attr('y', getConfig().state.padding);\n  const rectElem = g.append('g');\n\n  const { textWidth, textHeight } = _drawLongText(text, 0, 0, rectElem);\n  note.attr('height', textHeight + 2 * getConfig().state.noteMargin);\n  note.attr('width', textWidth + getConfig().state.noteMargin * 2);\n\n  return note;\n};\n\n/**\n * Starting point for drawing a state. The function finds out the specifics about the state and\n * renders with approprtiate function.\n *\n * @param {any} elem\n * @param {any} stateDef\n */\n\nexport const drawState = function (elem, stateDef) {\n  const id = stateDef.id;\n  const stateInfo = {\n    id: id,\n    label: stateDef.id,\n    width: 0,\n    height: 0,\n  };\n\n  const g = elem.append('g').attr('id', id).attr('class', 'stateGroup');\n\n  if (stateDef.type === 'start') drawStartState(g);\n  if (stateDef.type === 'end') drawEndState(g);\n  if (stateDef.type === 'fork' || stateDef.type === 'join') drawForkJoinState(g, stateDef);\n  if (stateDef.type === 'note') drawNote(stateDef.note.text, g);\n  if (stateDef.type === 'divider') drawDivider(g);\n  if (stateDef.type === 'default' && stateDef.descriptions.length === 0)\n    drawSimpleState(g, stateDef);\n  if (stateDef.type === 'default' && stateDef.descriptions.length > 0) drawDescrState(g, stateDef);\n\n  const stateBox = g.node().getBBox();\n  stateInfo.width = stateBox.width + 2 * getConfig().state.padding;\n  stateInfo.height = stateBox.height + 2 * getConfig().state.padding;\n\n  idCache.set(id, stateInfo);\n  // stateCnt++;\n  return stateInfo;\n};\n\nlet edgeCount = 0;\nexport const drawEdge = function (elem, path, relation) {\n  const getRelationType = function (type) {\n    switch (type) {\n      case stateDb.relationType.AGGREGATION:\n        return 'aggregation';\n      case stateDb.relationType.EXTENSION:\n        return 'extension';\n      case stateDb.relationType.COMPOSITION:\n        return 'composition';\n      case stateDb.relationType.DEPENDENCY:\n        return 'dependency';\n    }\n  };\n\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n\n  // The data for our line\n  const lineData = path.points;\n\n  // This is the accessor function we talked about above\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    })\n    .curve(curveBasis);\n\n  const svgPath = elem\n    .append('path')\n    .attr('d', lineFunction(lineData))\n    .attr('id', 'edge' + edgeCount)\n    .attr('class', 'transition');\n  let url = '';\n  if (getConfig().state.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n\n  svgPath.attr(\n    'marker-end',\n    'url(' + url + '#' + getRelationType(stateDb.relationType.DEPENDENCY) + 'End' + ')'\n  );\n\n  if (typeof relation.title !== 'undefined') {\n    const label = elem.append('g').attr('class', 'stateLabel');\n\n    const { x, y } = utils.calcLabelPosition(path.points);\n\n    const rows = common.getRows(relation.title);\n\n    let titleHeight = 0;\n    const titleRows = [];\n    let maxWidth = 0;\n    let minX = 0;\n\n    for (let i = 0; i <= rows.length; i++) {\n      const title = label\n        .append('text')\n        .attr('text-anchor', 'middle')\n        .text(rows[i])\n        .attr('x', x)\n        .attr('y', y + titleHeight);\n\n      const boundstmp = title.node().getBBox();\n      maxWidth = Math.max(maxWidth, boundstmp.width);\n      minX = Math.min(minX, boundstmp.x);\n\n      log.info(boundstmp.x, x, y + titleHeight);\n\n      if (titleHeight === 0) {\n        const titleBox = title.node().getBBox();\n        titleHeight = titleBox.height;\n        log.info('Title height', titleHeight, y);\n      }\n      titleRows.push(title);\n    }\n\n    let boxHeight = titleHeight * rows.length;\n    if (rows.length > 1) {\n      const heightAdj = (rows.length - 1) * titleHeight * 0.5;\n\n      titleRows.forEach((title, i) => title.attr('y', y + i * titleHeight - heightAdj));\n      boxHeight = titleHeight * rows.length;\n    }\n\n    const bounds = label.node().getBBox();\n\n    label\n      .insert('rect', ':first-child')\n      .attr('class', 'box')\n      .attr('x', x - maxWidth / 2 - getConfig().state.padding / 2)\n      .attr('y', y - boxHeight / 2 - getConfig().state.padding / 2 - 3.5)\n      .attr('width', maxWidth + getConfig().state.padding)\n      .attr('height', boxHeight + getConfig().state.padding);\n\n    log.info(bounds);\n\n    //label.attr('transform', '0 -' + (bounds.y / 2));\n\n    // Debug points\n    // path.points.forEach(point => {\n    //   g.append('circle')\n    //     .style('stroke', 'red')\n    //     .style('fill', 'red')\n    //     .attr('r', 1)\n    //     .attr('cx', point.x)\n    //     .attr('cy', point.y);\n    // });\n    // g.append('circle')\n    //   .style('stroke', 'blue')\n    //   .style('fill', 'blue')\n    //   .attr('r', 1)\n    //   .attr('cx', x)\n    //   .attr('cy', y);\n  }\n\n  edgeCount++;\n};\n","import { log } from '../../logger';\nimport { generateId } from '../../utils';\nimport mermaidAPI from '../../mermaidAPI';\nimport common from '../common/common';\nimport * as configApi from '../../config';\nimport {\n  setTitle,\n  getTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n} from '../../commonDb';\n\nconst sanitizeText = (txt) => common.sanitizeText(txt, configApi.getConfig());\n\nconst clone = (o) => JSON.parse(JSON.stringify(o));\nlet rootDoc = [];\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\nconst setRootDoc = (o) => {\n  log.info('Setting root doc', o);\n  // rootDoc = { id: 'root', doc: o };\n  rootDoc = o;\n};\n\nconst getRootDoc = () => rootDoc;\n\nconst docTranslator = (parent, node, first) => {\n  if (node.stmt === 'relation') {\n    docTranslator(parent, node.state1, true);\n    docTranslator(parent, node.state2, false);\n  } else {\n    if (node.stmt === 'state') {\n      if (node.id === '[*]') {\n        node.id = first ? parent.id + '_start' : parent.id + '_end';\n        node.start = first;\n      }\n    }\n\n    if (node.doc) {\n      const doc = [];\n      // Check for concurrency\n      let i = 0;\n      let currentDoc = [];\n      for (i = 0; i < node.doc.length; i++) {\n        if (node.doc[i].type === 'divider') {\n          // debugger;\n          const newNode = clone(node.doc[i]);\n          newNode.doc = clone(currentDoc);\n          doc.push(newNode);\n          currentDoc = [];\n        } else {\n          currentDoc.push(node.doc[i]);\n        }\n      }\n\n      // If any divider was encountered\n      if (doc.length > 0 && currentDoc.length > 0) {\n        const newNode = {\n          stmt: 'state',\n          id: generateId(),\n          type: 'divider',\n          doc: clone(currentDoc),\n        };\n        doc.push(clone(newNode));\n        node.doc = doc;\n      }\n\n      node.doc.forEach((docNode) => docTranslator(node, docNode, true));\n    }\n  }\n};\nconst getRootDocV2 = () => {\n  docTranslator({ id: 'root' }, { id: 'root', doc: rootDoc }, true);\n  return { id: 'root', doc: rootDoc };\n  // Here\n};\n\nconst extract = (_doc) => {\n  // const res = { states: [], relations: [] };\n  let doc;\n  if (_doc.doc) {\n    doc = _doc.doc;\n  } else {\n    doc = _doc;\n  }\n  // let doc = root.doc;\n  // if (!doc) {\n  //   doc = root;\n  // }\n  log.info(doc);\n  clear();\n\n  log.info('Extract', doc);\n\n  doc.forEach((item) => {\n    if (item.stmt === 'state') {\n      addState(item.id, item.type, item.doc, item.description, item.note);\n    }\n    if (item.stmt === 'relation') {\n      addRelation(item.state1.id, item.state2.id, item.description);\n    }\n  });\n};\n\nconst newDoc = () => {\n  return {\n    relations: [],\n    states: {},\n    documents: {},\n  };\n};\n\nlet documents = {\n  root: newDoc(),\n};\n\nlet currentDocument = documents.root;\n\nlet startCnt = 0;\nlet endCnt = 0; // eslint-disable-line\n// let stateCnt = 0;\n\nlet title = 'State diagram';\nlet description = '';\n\n/**\n * Function called by parser when a node definition has been found.\n *\n * @param {any} id\n * @param {any} type\n * @param {any} doc\n * @param {any} descr\n * @param {any} note\n */\nexport const addState = function (id, type, doc, descr, note) {\n  if (typeof currentDocument.states[id] === 'undefined') {\n    currentDocument.states[id] = {\n      id: id,\n      descriptions: [],\n      type,\n      doc,\n      note,\n    };\n  } else {\n    if (!currentDocument.states[id].doc) {\n      currentDocument.states[id].doc = doc;\n    }\n    if (!currentDocument.states[id].type) {\n      currentDocument.states[id].type = type;\n    }\n  }\n  if (descr) {\n    log.info('Adding state ', id, descr);\n    if (typeof descr === 'string') addDescription(id, descr.trim());\n\n    if (typeof descr === 'object') {\n      descr.forEach((des) => addDescription(id, des.trim()));\n    }\n  }\n\n  if (note) {\n    currentDocument.states[id].note = note;\n    currentDocument.states[id].note.text = common.sanitizeText(\n      currentDocument.states[id].note.text,\n      configApi.getConfig()\n    );\n  }\n};\n\nexport const clear = function () {\n  documents = {\n    root: newDoc(),\n  };\n  currentDocument = documents.root;\n\n  currentDocument = documents.root;\n\n  startCnt = 0;\n  endCnt = 0; // eslint-disable-line\n  classes = [];\n  commonClear();\n};\n\nexport const getState = function (id) {\n  return currentDocument.states[id];\n};\n\nexport const getStates = function () {\n  return currentDocument.states;\n};\nexport const logDocuments = function () {\n  log.info('Documents = ', documents);\n};\nexport const getRelations = function () {\n  return currentDocument.relations;\n};\n\nexport const addRelation = function (_id1, _id2, title) {\n  let id1 = _id1;\n  let id2 = _id2;\n  let type1 = 'default';\n  let type2 = 'default';\n  if (_id1 === '[*]') {\n    startCnt++;\n    id1 = 'start' + startCnt;\n    type1 = 'start';\n  }\n  if (_id2 === '[*]') {\n    endCnt++;\n    id2 = 'end' + startCnt;\n    type2 = 'end';\n  }\n  addState(id1, type1);\n  addState(id2, type2);\n  currentDocument.relations.push({\n    id1,\n    id2,\n    title: common.sanitizeText(title, configApi.getConfig()),\n  });\n};\n\nconst addDescription = function (id, _descr) {\n  const theState = currentDocument.states[id];\n  let descr = _descr;\n  if (descr[0] === ':') {\n    descr = descr.substr(1).trim();\n  }\n  theState.descriptions.push(common.sanitizeText(descr, configApi.getConfig()));\n};\n\nexport const cleanupLabel = function (label) {\n  if (label.substring(0, 1) === ':') {\n    return label.substr(2).trim();\n  } else {\n    return label.trim();\n  }\n};\n\nexport const lineType = {\n  LINE: 0,\n  DOTTED_LINE: 1,\n};\n\nlet dividerCnt = 0;\nconst getDividerId = () => {\n  dividerCnt++;\n  return 'divider-id-' + dividerCnt;\n};\n\nlet classes = [];\n\nconst getClasses = () => classes;\n\nlet direction = 'TB';\nconst getDirection = () => direction;\nconst setDirection = (dir) => {\n  direction = dir;\n};\n\nexport const relationType = {\n  AGGREGATION: 0,\n  EXTENSION: 1,\n  COMPOSITION: 2,\n  DEPENDENCY: 3,\n};\n\nconst trimColon = (str) => (str && str[0] === ':' ? str.substr(1).trim() : str.trim());\n\nexport default {\n  parseDirective,\n  getConfig: () => configApi.getConfig().state,\n  addState,\n  clear,\n  getState,\n  getStates,\n  getRelations,\n  getClasses,\n  getDirection,\n  addRelation,\n  getDividerId,\n  setDirection,\n  // addDescription,\n  cleanupLabel,\n  lineType,\n  relationType,\n  logDocuments,\n  getRootDoc,\n  setRootDoc,\n  getRootDocV2,\n  extract,\n  trimColon,\n  getTitle,\n  setTitle,\n  getAccDescription,\n  setAccDescription,\n};\n","import graphlib from 'graphlib';\nimport { select } from 'd3';\nimport stateDb from './stateDb';\nimport state from './parser/stateDiagram';\nimport { getConfig } from '../../config';\nimport { render } from '../../dagre-wrapper/index.js';\nimport { log } from '../../logger';\nimport { configureSvgSize } from '../../utils';\nimport common from '../common/common';\nimport addSVGAccessibilityFields from '../../accessibility';\n\nconst conf = {};\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n  for (let i = 0; i < keys.length; i++) {\n    conf[keys[i]] = cnf[keys[i]];\n  }\n};\n\nlet nodeDb = {};\n\n/**\n * Returns the all the styles from classDef statements in the graph definition.\n *\n * @param {any} text\n * @returns {object} ClassDef styles\n */\nexport const getClasses = function (text) {\n  log.trace('Extracting classes');\n  stateDb.clear();\n  const parser = state.parser;\n  parser.yy = stateDb;\n\n  // Parse the graph definition\n  parser.parse(text);\n  return stateDb.getClasses();\n};\n\nconst setupNode = (g, parent, node, altFlag) => {\n  // Add the node\n  if (node.id !== 'root') {\n    let shape = 'rect';\n    if (node.start === true) {\n      shape = 'start';\n    }\n    if (node.start === false) {\n      shape = 'end';\n    }\n    if (node.type !== 'default') {\n      shape = node.type;\n    }\n\n    if (!nodeDb[node.id]) {\n      nodeDb[node.id] = {\n        id: node.id,\n        shape,\n        description: common.sanitizeText(node.id, getConfig()),\n        classes: 'statediagram-state',\n      };\n    }\n\n    // Build of the array of description strings accordinging\n    if (node.description) {\n      if (Array.isArray(nodeDb[node.id].description)) {\n        // There already is an array of strings,add to it\n        nodeDb[node.id].shape = 'rectWithTitle';\n        nodeDb[node.id].description.push(node.description);\n      } else {\n        if (nodeDb[node.id].description.length > 0) {\n          // if there is a description already transformit to an array\n          nodeDb[node.id].shape = 'rectWithTitle';\n          if (nodeDb[node.id].description === node.id) {\n            // If the previous description was the is, remove it\n            nodeDb[node.id].description = [node.description];\n          } else {\n            nodeDb[node.id].description = [nodeDb[node.id].description, node.description];\n          }\n        } else {\n          nodeDb[node.id].shape = 'rect';\n          nodeDb[node.id].description = node.description;\n        }\n      }\n      nodeDb[node.id].description = common.sanitizeTextOrArray(\n        nodeDb[node.id].description,\n        getConfig()\n      );\n    }\n\n    //\n    if (nodeDb[node.id].description.length === 1 && nodeDb[node.id].shape === 'rectWithTitle') {\n      nodeDb[node.id].shape = 'rect';\n    }\n\n    // Save data for description and group so that for instance a statement without description overwrites\n    // one with description\n\n    // group\n    if (!nodeDb[node.id].type && node.doc) {\n      log.info('Setting cluster for ', node.id, getDir(node));\n      nodeDb[node.id].type = 'group';\n      nodeDb[node.id].dir = getDir(node);\n      nodeDb[node.id].shape = node.type === 'divider' ? 'divider' : 'roundedWithTitle';\n      nodeDb[node.id].classes =\n        nodeDb[node.id].classes +\n        ' ' +\n        (altFlag ? 'statediagram-cluster statediagram-cluster-alt' : 'statediagram-cluster');\n    }\n\n    const nodeData = {\n      labelStyle: '',\n      shape: nodeDb[node.id].shape,\n      labelText: nodeDb[node.id].description,\n      // typeof nodeDb[node.id].description === 'object'\n      //   ? nodeDb[node.id].description[0]\n      //   : nodeDb[node.id].description,\n      classes: nodeDb[node.id].classes, //classStr,\n      style: '', //styles.style,\n      id: node.id,\n      dir: nodeDb[node.id].dir,\n      domId: 'state-' + node.id + '-' + cnt,\n      type: nodeDb[node.id].type,\n      padding: 15, //getConfig().flowchart.padding\n    };\n\n    if (node.note) {\n      // Todo: set random id\n      const noteData = {\n        labelStyle: '',\n        shape: 'note',\n        labelText: node.note.text,\n        classes: 'statediagram-note', //classStr,\n        style: '', //styles.style,\n        id: node.id + '----note-' + cnt,\n        domId: 'state-' + node.id + '----note-' + cnt,\n        type: nodeDb[node.id].type,\n        padding: 15, //getConfig().flowchart.padding\n      };\n      const groupData = {\n        labelStyle: '',\n        shape: 'noteGroup',\n        labelText: node.note.text,\n        classes: nodeDb[node.id].classes, //classStr,\n        style: '', //styles.style,\n        id: node.id + '----parent',\n        domId: 'state-' + node.id + '----parent-' + cnt,\n        type: 'group',\n        padding: 0, //getConfig().flowchart.padding\n      };\n      cnt++;\n\n      g.setNode(node.id + '----parent', groupData);\n\n      g.setNode(noteData.id, noteData);\n      g.setNode(node.id, nodeData);\n\n      g.setParent(node.id, node.id + '----parent');\n      g.setParent(noteData.id, node.id + '----parent');\n\n      let from = node.id;\n      let to = noteData.id;\n\n      if (node.note.position === 'left of') {\n        from = noteData.id;\n        to = node.id;\n      }\n      g.setEdge(from, to, {\n        arrowhead: 'none',\n        arrowType: '',\n        style: 'fill:none',\n        labelStyle: '',\n        classes: 'transition note-edge',\n        arrowheadStyle: 'fill: #333',\n        labelpos: 'c',\n        labelType: 'text',\n        thickness: 'normal',\n      });\n    } else {\n      g.setNode(node.id, nodeData);\n    }\n  }\n\n  if (parent) {\n    if (parent.id !== 'root') {\n      log.trace('Setting node ', node.id, ' to be child of its parent ', parent.id);\n      g.setParent(node.id, parent.id);\n    }\n  }\n  if (node.doc) {\n    log.trace('Adding nodes children ');\n    setupDoc(g, node, node.doc, !altFlag);\n  }\n};\nlet cnt = 0;\nconst setupDoc = (g, parent, doc, altFlag) => {\n  // cnt = 0;\n  log.trace('items', doc);\n  doc.forEach((item) => {\n    if (item.stmt === 'state' || item.stmt === 'default') {\n      setupNode(g, parent, item, altFlag);\n    } else if (item.stmt === 'relation') {\n      setupNode(g, parent, item.state1, altFlag);\n      setupNode(g, parent, item.state2, altFlag);\n      const edgeData = {\n        id: 'edge' + cnt,\n        arrowhead: 'normal',\n        arrowTypeEnd: 'arrow_barb',\n        style: 'fill:none',\n        labelStyle: '',\n        label: common.sanitizeText(item.description, getConfig()),\n        arrowheadStyle: 'fill: #333',\n        labelpos: 'c',\n        labelType: 'text',\n        thickness: 'normal',\n        classes: 'transition',\n      };\n      let startId = item.state1.id;\n      let endId = item.state2.id;\n\n      g.setEdge(startId, endId, edgeData, cnt);\n      cnt++;\n    }\n  });\n};\nconst getDir = (nodes, defaultDir) => {\n  let dir = defaultDir || 'TB';\n  if (nodes.doc) {\n    for (let i = 0; i < nodes.doc.length; i++) {\n      const node = nodes.doc[i];\n      if (node.stmt === 'dir') {\n        dir = node.value;\n      }\n    }\n  }\n  return dir;\n};\n/**\n * Draws a flowchart in the tag with id: id based on the graph definition in text.\n *\n * @param {any} text\n * @param {any} id\n */\nexport const draw = function (text, id) {\n  log.info('Drawing state diagram (v2)', id);\n  stateDb.clear();\n  nodeDb = {};\n  const parser = state.parser;\n  parser.yy = stateDb;\n\n  // Parse the graph definition\n  parser.parse(text);\n\n  // Fetch the default direction, use TD if none was found\n  let dir = stateDb.getDirection();\n  if (typeof dir === 'undefined') {\n    dir = 'LR';\n  }\n\n  const conf = getConfig().state;\n  const nodeSpacing = conf.nodeSpacing || 50;\n  const rankSpacing = conf.rankSpacing || 50;\n\n  const securityLevel = getConfig().securityLevel;\n\n  log.info(stateDb.getRootDocV2());\n  stateDb.extract(stateDb.getRootDocV2());\n  log.info(stateDb.getRootDocV2());\n\n  // Create the input mermaid.graph\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true,\n  })\n    .setGraph({\n      rankdir: getDir(stateDb.getRootDocV2()),\n      nodesep: nodeSpacing,\n      ranksep: rankSpacing,\n      marginx: 8,\n      marginy: 8,\n    })\n    .setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n  setupNode(g, undefined, stateDb.getRootDocV2(), true);\n\n  // Set up an SVG group so that we can translate the final graph.\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n  const svg = root.select(`[id=\"${id}\"]`);\n\n  // Run the renderer. This is what draws the final graph.\n\n  const element = root.select('#' + id + ' g');\n  render(element, g, ['barb'], 'statediagram', id);\n\n  const padding = 8;\n\n  const bounds = svg.node().getBBox();\n\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n\n  // Zoom in a bit\n  svg.attr('class', 'statediagram');\n\n  const svgBounds = svg.node().getBBox();\n\n  configureSvgSize(svg, height, width * 1.75, conf.useMaxWidth);\n\n  // Ensure the viewBox includes the whole svgBounds area with extra space for padding\n  const vBox = `${svgBounds.x - padding} ${svgBounds.y - padding} ${width} ${height}`;\n  log.debug(`viewBox ${vBox}`);\n  svg.attr('viewBox', vBox);\n\n  // Add label rects for non html labels\n  // if (!evaluate(conf.htmlLabels) || true) {\n  const labels = document.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n  for (let k = 0; k < labels.length; k++) {\n    const label = labels[k];\n\n    // Get dimensions of label\n    const dim = label.getBBox();\n\n    const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n    rect.setAttribute('rx', 0);\n    rect.setAttribute('ry', 0);\n    rect.setAttribute('width', dim.width);\n    rect.setAttribute('height', dim.height);\n\n    label.insertBefore(rect, label.firstChild);\n    // }\n  }\n  addSVGAccessibilityFields(parser.yy, svg, id);\n};\n\nexport default {\n  setConf,\n  getClasses,\n  draw,\n};\n","import { select } from 'd3';\nimport dagre from 'dagre';\nimport graphlib from 'graphlib';\nimport { log } from '../../logger';\nimport stateDb from './stateDb';\nimport common from '../common/common';\nimport { parser } from './parser/stateDiagram';\n// import idCache from './id-cache';\nimport { drawState, addTitleAndBox, drawEdge } from './shapes';\nimport { getConfig } from '../../config';\nimport { configureSvgSize } from '../../utils';\nimport addSVGAccessibilityFields from '../../accessibility';\n\nparser.yy = stateDb;\n\n// TODO Move conf object to main conf in mermaidAPI\nlet conf;\n\nconst transformationLog = {};\n\nexport const setConf = function () {};\n\n/**\n * Setup arrow head and define the marker. The result is appended to the svg.\n *\n * @param {any} elem\n */\nconst insertMarkers = function (elem) {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'dependencyEnd')\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 19,7 L9,13 L14,7 L9,1 Z');\n};\n\n/**\n * Draws a flowchart in the tag with id: id based on the graph definition in text.\n *\n * @param {any} text\n * @param {any} id\n */\nexport const draw = function (text, id) {\n  conf = getConfig().state;\n  const securityLevel = getConfig().securityLevel;\n  // Handle root and ocument for when rendering in sanbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  parser.yy.clear();\n  parser.parse(text);\n  log.debug('Rendering diagram ' + text);\n\n  // Fetch the default direction, use TD if none was found\n  const diagram = root.select(`[id='${id}']`);\n  insertMarkers(diagram);\n\n  // Layout graph, Create a new directed graph\n  const graph = new graphlib.Graph({\n    multigraph: true,\n    compound: true,\n    // acyclicer: 'greedy',\n    rankdir: 'RL',\n    // ranksep: '20'\n  });\n\n  // Default to assigning a new object as a label for each new edge.\n  graph.setDefaultEdgeLabel(function () {\n    return {};\n  });\n\n  const rootDoc = stateDb.getRootDoc();\n  renderDoc(rootDoc, diagram, undefined, false, root, doc);\n\n  const padding = conf.padding;\n  const bounds = diagram.node().getBBox();\n\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n\n  // zoom in a bit\n  const svgWidth = width * 1.75;\n  configureSvgSize(diagram, height, svgWidth, conf.useMaxWidth);\n\n  diagram.attr(\n    'viewBox',\n    `${bounds.x - conf.padding}  ${bounds.y - conf.padding} ` + width + ' ' + height\n  );\n  addSVGAccessibilityFields(parser.yy, diagram, id);\n};\nconst getLabelWidth = (text) => {\n  return text ? text.length * conf.fontSizeFactor : 1;\n};\n\nconst renderDoc = (doc, diagram, parentId, altBkg, root, domDocument) => {\n  // Layout graph, Create a new directed graph\n  const graph = new graphlib.Graph({\n    compound: true,\n    multigraph: true,\n  });\n\n  let i;\n  let edgeFreeDoc = true;\n  for (i = 0; i < doc.length; i++) {\n    if (doc[i].stmt === 'relation') {\n      edgeFreeDoc = false;\n      break;\n    }\n  }\n\n  // Set an object for the graph label\n  if (parentId)\n    graph.setGraph({\n      rankdir: 'LR',\n      multigraph: true,\n      compound: true,\n      // acyclicer: 'greedy',\n      ranker: 'tight-tree',\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      isMultiGraph: true,\n      // ranksep: 5,\n      // nodesep: 1\n    });\n  else {\n    graph.setGraph({\n      rankdir: 'TB',\n      multigraph: true,\n      compound: true,\n      // isCompound: true,\n      // acyclicer: 'greedy',\n      // ranker: 'longest-path'\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      ranker: 'tight-tree',\n      // ranker: 'network-simplex'\n      isMultiGraph: true,\n    });\n  }\n\n  // Default to assigning a new object as a label for each new edge.\n  graph.setDefaultEdgeLabel(function () {\n    return {};\n  });\n\n  stateDb.extract(doc);\n  const states = stateDb.getStates();\n  const relations = stateDb.getRelations();\n\n  const keys = Object.keys(states);\n\n  let first = true;\n\n  for (let i = 0; i < keys.length; i++) {\n    const stateDef = states[keys[i]];\n\n    if (parentId) {\n      stateDef.parentId = parentId;\n    }\n\n    let node;\n    if (stateDef.doc) {\n      let sub = diagram.append('g').attr('id', stateDef.id).attr('class', 'stateGroup');\n      node = renderDoc(stateDef.doc, sub, stateDef.id, !altBkg, root, domDocument);\n\n      if (first) {\n        // first = false;\n        sub = addTitleAndBox(sub, stateDef, altBkg);\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height + conf.padding / 2;\n        transformationLog[stateDef.id] = { y: conf.compositTitleSize };\n      } else {\n        // sub = addIdAndBox(sub, stateDef);\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height;\n        // transformationLog[stateDef.id] = { y: conf.compositTitleSize };\n      }\n    } else {\n      node = drawState(diagram, stateDef, graph);\n    }\n\n    if (stateDef.note) {\n      // Draw note note\n      const noteDef = {\n        descriptions: [],\n        id: stateDef.id + '-note',\n        note: stateDef.note,\n        type: 'note',\n      };\n      const note = drawState(diagram, noteDef, graph);\n\n      // graph.setNode(node.id, node);\n      if (stateDef.note.position === 'left of') {\n        graph.setNode(node.id + '-note', note);\n        graph.setNode(node.id, node);\n      } else {\n        graph.setNode(node.id, node);\n        graph.setNode(node.id + '-note', note);\n      }\n      // graph.setNode(node.id);\n      graph.setParent(node.id, node.id + '-group');\n      graph.setParent(node.id + '-note', node.id + '-group');\n    } else {\n      // Add nodes to the graph. The first argument is the node id. The second is\n      // metadata about the node. In this case we're going to add labels to each of\n      // our nodes.\n      graph.setNode(node.id, node);\n    }\n  }\n\n  log.debug('Count=', graph.nodeCount(), graph);\n  let cnt = 0;\n  relations.forEach(function (relation) {\n    cnt++;\n    log.debug('Setting edge', relation);\n    graph.setEdge(\n      relation.id1,\n      relation.id2,\n      {\n        relation: relation,\n        width: getLabelWidth(relation.title),\n        height: conf.labelHeight * common.getRows(relation.title).length,\n        labelpos: 'c',\n      },\n      'id' + cnt\n    );\n  });\n\n  dagre.layout(graph);\n\n  log.debug('Graph after layout', graph.nodes());\n  const svgElem = diagram.node();\n\n  graph.nodes().forEach(function (v) {\n    if (typeof v !== 'undefined' && typeof graph.node(v) !== 'undefined') {\n      log.warn('Node ' + v + ': ' + JSON.stringify(graph.node(v)));\n      root\n        .select('#' + svgElem.id + ' #' + v)\n        .attr(\n          'transform',\n          'translate(' +\n            (graph.node(v).x - graph.node(v).width / 2) +\n            ',' +\n            (graph.node(v).y +\n              (transformationLog[v] ? transformationLog[v].y : 0) -\n              graph.node(v).height / 2) +\n            ' )'\n        );\n      root\n        .select('#' + svgElem.id + ' #' + v)\n        .attr('data-x-shift', graph.node(v).x - graph.node(v).width / 2);\n      const dividers = domDocument.querySelectorAll('#' + svgElem.id + ' #' + v + ' .divider');\n      dividers.forEach((divider) => {\n        const parent = divider.parentElement;\n        let pWidth = 0;\n        let pShift = 0;\n        if (parent) {\n          if (parent.parentElement) pWidth = parent.parentElement.getBBox().width;\n          pShift = parseInt(parent.getAttribute('data-x-shift'), 10);\n          if (Number.isNaN(pShift)) {\n            pShift = 0;\n          }\n        }\n        divider.setAttribute('x1', 0 - pShift + 8);\n        divider.setAttribute('x2', pWidth - pShift - 8);\n      });\n    } else {\n      log.debug('No Node ' + v + ': ' + JSON.stringify(graph.node(v)));\n    }\n  });\n\n  let stateBox = svgElem.getBBox();\n\n  graph.edges().forEach(function (e) {\n    if (typeof e !== 'undefined' && typeof graph.edge(e) !== 'undefined') {\n      log.debug('Edge ' + e.v + ' -> ' + e.w + ': ' + JSON.stringify(graph.edge(e)));\n      drawEdge(diagram, graph.edge(e), graph.edge(e).relation);\n    }\n  });\n\n  stateBox = svgElem.getBBox();\n\n  const stateInfo = {\n    id: parentId ? parentId : 'root',\n    label: parentId ? parentId : 'root',\n    width: 0,\n    height: 0,\n  };\n\n  stateInfo.width = stateBox.width + 2 * conf.padding;\n  stateInfo.height = stateBox.height + 2 * conf.padding;\n\n  log.debug('Doc rendered', stateInfo, graph);\n  return stateInfo;\n};\n\nexport default {\n  setConf,\n  draw,\n};\n","const getStyles = (options) =>\n  `\ndefs #statediagram-barbEnd {\n    fill: ${options.transitionColor};\n    stroke: ${options.transitionColor};\n  }\ng.stateGroup text {\n  fill: ${options.nodeBorder};\n  stroke: none;\n  font-size: 10px;\n}\ng.stateGroup text {\n  fill: ${options.textColor};\n  stroke: none;\n  font-size: 10px;\n\n}\ng.stateGroup .state-title {\n  font-weight: bolder;\n  fill: ${options.stateLabelColor};\n}\n\ng.stateGroup rect {\n  fill: ${options.mainBkg};\n  stroke: ${options.nodeBorder};\n}\n\ng.stateGroup line {\n  stroke: ${options.lineColor};\n  stroke-width: 1;\n}\n\n.transition {\n  stroke: ${options.transitionColor};\n  stroke-width: 1;\n  fill: none;\n}\n\n.stateGroup .composit {\n  fill: ${options.background};\n  border-bottom: 1px\n}\n\n.stateGroup .alt-composit {\n  fill: #e0e0e0;\n  border-bottom: 1px\n}\n\n.state-note {\n  stroke: ${options.noteBorderColor};\n  fill: ${options.noteBkgColor};\n\n  text {\n    fill: ${options.noteTextColor};\n    stroke: none;\n    font-size: 10px;\n  }\n}\n\n.stateLabel .box {\n  stroke: none;\n  stroke-width: 0;\n  fill: ${options.mainBkg};\n  opacity: 0.5;\n}\n\n.edgeLabel .label rect {\n  fill: ${options.labelBackgroundColor};\n  opacity: 0.5;\n}\n.edgeLabel .label text {\n  fill: ${options.transitionLabelColor || options.tertiaryTextColor};\n}\n.label div .edgeLabel {\n  color: ${options.transitionLabelColor || options.tertiaryTextColor};\n}\n\n.stateLabel text {\n  fill: ${options.stateLabelColor};\n  font-size: 10px;\n  font-weight: bold;\n}\n\n.node circle.state-start {\n  fill: ${options.specialStateColor};\n  stroke: ${options.specialStateColor};\n}\n\n.node .fork-join {\n  fill: ${options.specialStateColor};\n  stroke: ${options.specialStateColor};\n}\n\n.node circle.state-end {\n  fill: ${options.innerEndBackground};\n  stroke: ${options.background};\n  stroke-width: 1.5\n}\n.end-state-inner {\n  fill: ${options.compositeBackground || options.background};\n  // stroke: ${options.background};\n  stroke-width: 1.5\n}\n\n.node rect {\n  fill: ${options.stateBkg || options.mainBkg};\n  stroke: ${options.stateBorder || options.nodeBorder};\n  stroke-width: 1px;\n}\n.node polygon {\n  fill: ${options.mainBkg};\n  stroke: ${options.stateBorder || options.nodeBorder};;\n  stroke-width: 1px;\n}\n#statediagram-barbEnd {\n  fill: ${options.lineColor};\n}\n\n.statediagram-cluster rect {\n  fill: ${options.compositeTitleBackground};\n  stroke: ${options.stateBorder || options.nodeBorder};\n  stroke-width: 1px;\n}\n\n.cluster-label, .nodeLabel {\n  color: ${options.stateLabelColor};\n}\n\n.statediagram-cluster rect.outer {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-state .divider {\n  stroke: ${options.stateBorder || options.nodeBorder};\n}\n\n.statediagram-state .title-state {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-cluster.statediagram-cluster .inner {\n  fill: ${options.compositeBackground || options.background};\n}\n.statediagram-cluster.statediagram-cluster-alt .inner {\n  fill: ${options.altBackground ? options.altBackground : '#efefef'};\n}\n\n.statediagram-cluster .inner {\n  rx:0;\n  ry:0;\n}\n\n.statediagram-state rect.basic {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-state rect.divider {\n  stroke-dasharray: 10,10;\n  fill: ${options.altBackground ? options.altBackground : '#efefef'};\n}\n\n.note-edge {\n  stroke-dasharray: 5;\n}\n\n.statediagram-note rect {\n  fill: ${options.noteBkgColor};\n  stroke: ${options.noteBorderColor};\n  stroke-width: 1px;\n  rx: 0;\n  ry: 0;\n}\n.statediagram-note rect {\n  fill: ${options.noteBkgColor};\n  stroke: ${options.noteBorderColor};\n  stroke-width: 1px;\n  rx: 0;\n  ry: 0;\n}\n\n.statediagram-note text {\n  fill: ${options.noteTextColor};\n}\n\n.statediagram-note .nodeLabel {\n  color: ${options.noteTextColor};\n}\n.statediagram .edgeLabel {\n  color: red; // ${options.noteTextColor};\n}\n\n#dependencyStart, #dependencyEnd {\n  fill: ${options.lineColor};\n  stroke: ${options.lineColor};\n  stroke-width: 1;\n}\n`;\n\nexport default getStyles;\n","import mermaidAPI from '../../mermaidAPI';\nimport * as configApi from '../../config';\nimport common from '../common/common';\nimport {\n  setTitle,\n  getTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n} from '../../commonDb';\n\nconst sanitizeText = (txt) => common.sanitizeText(txt, configApi.getConfig());\n\nlet title = '';\nlet description = '';\nlet currentSection = '';\n\nconst sections = [];\nconst tasks = [];\nconst rawTasks = [];\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\nexport const clear = function () {\n  sections.length = 0;\n  tasks.length = 0;\n  currentSection = '';\n  title = '';\n  description = '';\n  rawTasks.length = 0;\n  commonClear();\n};\n\nexport const addSection = function (txt) {\n  currentSection = txt;\n  sections.push(txt);\n};\n\nexport const getSections = function () {\n  return sections;\n};\n\nexport const getTasks = function () {\n  let allItemsProcessed = compileTasks();\n  const maxDepth = 100;\n  let iterationCount = 0;\n  while (!allItemsProcessed && iterationCount < maxDepth) {\n    allItemsProcessed = compileTasks();\n    iterationCount++;\n  }\n\n  tasks.push(...rawTasks);\n\n  return tasks;\n};\n\nconst updateActors = function () {\n  const tempActors = [];\n  tasks.forEach((task) => {\n    if (task.people) {\n      tempActors.push(...task.people);\n    }\n  });\n\n  const unique = new Set(tempActors);\n  return [...unique].sort();\n};\n\nexport const addTask = function (descr, taskData) {\n  const pieces = taskData.substr(1).split(':');\n\n  let score = 0;\n  let peeps = [];\n  if (pieces.length === 1) {\n    score = Number(pieces[0]);\n    peeps = [];\n  } else {\n    score = Number(pieces[0]);\n    peeps = pieces[1].split(',');\n  }\n  const peopleList = peeps.map((s) => s.trim());\n\n  const rawTask = {\n    section: currentSection,\n    type: currentSection,\n    people: peopleList,\n    task: descr,\n    score,\n  };\n\n  rawTasks.push(rawTask);\n};\n\nexport const addTaskOrg = function (descr) {\n  const newTask = {\n    section: currentSection,\n    type: currentSection,\n    description: descr,\n    task: descr,\n    classes: [],\n  };\n  tasks.push(newTask);\n};\n\nconst compileTasks = function () {\n  const compileTask = function (pos) {\n    return rawTasks[pos].processed;\n  };\n\n  let allProcessed = true;\n  for (let i = 0; i < rawTasks.length; i++) {\n    compileTask(i);\n\n    allProcessed = allProcessed && rawTasks[i].processed;\n  }\n  return allProcessed;\n};\n\nconst getActors = function () {\n  return updateActors();\n};\n\nexport default {\n  parseDirective,\n  getConfig: () => configApi.getConfig().journey,\n  clear,\n  setTitle,\n  getTitle,\n  setAccDescription,\n  getAccDescription,\n  addSection,\n  getSections,\n  getTasks,\n  addTask,\n  addTaskOrg,\n  getActors,\n};\n","import { select } from 'd3';\nimport { parser } from './parser/journey';\nimport journeyDb from './journeyDb';\nimport svgDraw from './svgDraw';\nimport { getConfig } from '../../config';\nimport { configureSvgSize } from '../../utils';\nimport addSVGAccessibilityFields from '../../accessibility';\n\nparser.yy = journeyDb;\n\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n\n  keys.forEach(function (key) {\n    conf[key] = cnf[key];\n  });\n};\n\nconst actors = {};\n\n/** @param {any} diagram */\nfunction drawActorLegend(diagram) {\n  const conf = getConfig().journey;\n  // Draw the actors\n  let yPos = 60;\n  Object.keys(actors).forEach((person) => {\n    const colour = actors[person].color;\n\n    const circleData = {\n      cx: 20,\n      cy: yPos,\n      r: 7,\n      fill: colour,\n      stroke: '#000',\n      pos: actors[person].position,\n    };\n    svgDraw.drawCircle(diagram, circleData);\n\n    const labelData = {\n      x: 40,\n      y: yPos + 7,\n      fill: '#666',\n      text: person,\n      textMargin: conf.boxTextMargin | 5,\n    };\n    svgDraw.drawText(diagram, labelData);\n\n    yPos += 20;\n  });\n}\nconst conf = getConfig().journey;\nconst LEFT_MARGIN = getConfig().journey.leftMargin;\nexport const draw = function (text, id) {\n  const conf = getConfig().journey;\n  parser.yy.clear();\n  parser.parse(text + '\\n');\n\n  const securityLevel = getConfig().securityLevel;\n  // Handle root and ocument for when rendering in sanbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n  bounds.init();\n  const diagram = root.select('#' + id);\n  diagram.attr('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n\n  svgDraw.initGraphics(diagram);\n\n  const tasks = parser.yy.getTasks();\n  const title = parser.yy.getTitle();\n\n  const actorNames = parser.yy.getActors();\n  for (let member in actors) delete actors[member];\n  let actorPos = 0;\n  actorNames.forEach((actorName) => {\n    actors[actorName] = {\n      color: conf.actorColours[actorPos % conf.actorColours.length],\n      position: actorPos,\n    };\n    actorPos++;\n  });\n\n  drawActorLegend(diagram);\n  bounds.insert(0, 0, LEFT_MARGIN, Object.keys(actors).length * 50);\n  drawTasks(diagram, tasks, 0);\n\n  const box = bounds.getBounds();\n  if (title) {\n    diagram\n      .append('text')\n      .text(title)\n      .attr('x', LEFT_MARGIN)\n      .attr('font-size', '4ex')\n      .attr('font-weight', 'bold')\n      .attr('y', 25);\n  }\n\n  const height = box.stopy - box.starty + 2 * conf.diagramMarginY;\n  const width = LEFT_MARGIN + box.stopx + 2 * conf.diagramMarginX;\n\n  configureSvgSize(diagram, height, width, conf.useMaxWidth);\n\n  // Draw activity line\n  diagram\n    .append('line')\n    .attr('x1', LEFT_MARGIN)\n    .attr('y1', conf.height * 4) // One section head + one task + margins\n    .attr('x2', width - LEFT_MARGIN - 4) // Subtract stroke width so arrow point is retained\n    .attr('y2', conf.height * 4)\n    .attr('stroke-width', 4)\n    .attr('stroke', 'black')\n    .attr('marker-end', 'url(#arrowhead)');\n\n  const extraVertForTitle = title ? 70 : 0;\n  diagram.attr('viewBox', `${box.startx} -25 ${width} ${height + extraVertForTitle}`);\n  diagram.attr('preserveAspectRatio', 'xMinYMin meet');\n  diagram.attr('height', height + extraVertForTitle + 25);\n\n  addSVGAccessibilityFields(parser.yy, diagram, id);\n};\n\nexport const bounds = {\n  data: {\n    startx: undefined,\n    stopx: undefined,\n    starty: undefined,\n    stopy: undefined,\n  },\n  verticalPos: 0,\n\n  sequenceItems: [],\n  init: function () {\n    this.sequenceItems = [];\n    this.data = {\n      startx: undefined,\n      stopx: undefined,\n      starty: undefined,\n      stopy: undefined,\n    };\n    this.verticalPos = 0;\n  },\n  updateVal: function (obj, key, val, fun) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = val;\n    } else {\n      obj[key] = fun(val, obj[key]);\n    }\n  },\n  updateBounds: function (startx, starty, stopx, stopy) {\n    const conf = getConfig().journey;\n    const _self = this;\n    let cnt = 0;\n    /** @param {any} type */\n    function updateFn(type) {\n      return function updateItemBounds(item) {\n        cnt++;\n        // The loop sequenceItems is a stack so the biggest margins in the beginning of the sequenceItems\n        const n = _self.sequenceItems.length - cnt + 1;\n        _self.updateVal(item, 'starty', starty - n * conf.boxMargin, Math.min);\n        _self.updateVal(item, 'stopy', stopy + n * conf.boxMargin, Math.max);\n\n        _self.updateVal(bounds.data, 'startx', startx - n * conf.boxMargin, Math.min);\n        _self.updateVal(bounds.data, 'stopx', stopx + n * conf.boxMargin, Math.max);\n\n        if (!(type === 'activation')) {\n          _self.updateVal(item, 'startx', startx - n * conf.boxMargin, Math.min);\n          _self.updateVal(item, 'stopx', stopx + n * conf.boxMargin, Math.max);\n\n          _self.updateVal(bounds.data, 'starty', starty - n * conf.boxMargin, Math.min);\n          _self.updateVal(bounds.data, 'stopy', stopy + n * conf.boxMargin, Math.max);\n        }\n      };\n    }\n\n    this.sequenceItems.forEach(updateFn());\n  },\n  insert: function (startx, starty, stopx, stopy) {\n    const _startx = Math.min(startx, stopx);\n    const _stopx = Math.max(startx, stopx);\n    const _starty = Math.min(starty, stopy);\n    const _stopy = Math.max(starty, stopy);\n\n    this.updateVal(bounds.data, 'startx', _startx, Math.min);\n    this.updateVal(bounds.data, 'starty', _starty, Math.min);\n    this.updateVal(bounds.data, 'stopx', _stopx, Math.max);\n    this.updateVal(bounds.data, 'stopy', _stopy, Math.max);\n\n    this.updateBounds(_startx, _starty, _stopx, _stopy);\n  },\n  bumpVerticalPos: function (bump) {\n    this.verticalPos = this.verticalPos + bump;\n    this.data.stopy = this.verticalPos;\n  },\n  getVerticalPos: function () {\n    return this.verticalPos;\n  },\n  getBounds: function () {\n    return this.data;\n  },\n};\n\nconst fills = conf.sectionFills;\nconst textColours = conf.sectionColours;\n\nexport const drawTasks = function (diagram, tasks, verticalPos) {\n  const conf = getConfig().journey;\n  let lastSection = '';\n  const sectionVHeight = conf.height * 2 + conf.diagramMarginY;\n  const taskPos = verticalPos + sectionVHeight;\n\n  let sectionNumber = 0;\n  let fill = '#CCC';\n  let colour = 'black';\n  let num = 0;\n\n  // Draw the tasks\n  for (let i = 0; i < tasks.length; i++) {\n    let task = tasks[i];\n    if (lastSection !== task.section) {\n      fill = fills[sectionNumber % fills.length];\n      num = sectionNumber % fills.length;\n      colour = textColours[sectionNumber % textColours.length];\n\n      const section = {\n        x: i * conf.taskMargin + i * conf.width + LEFT_MARGIN,\n        y: 50,\n        text: task.section,\n        fill,\n        num,\n        colour,\n      };\n\n      svgDraw.drawSection(diagram, section, conf);\n      lastSection = task.section;\n      sectionNumber++;\n    }\n\n    // Collect the actors involved in the task\n    const taskActors = task.people.reduce((acc, actorName) => {\n      if (actors[actorName]) {\n        acc[actorName] = actors[actorName];\n      }\n\n      return acc;\n    }, {});\n\n    // Add some rendering data to the object\n    task.x = i * conf.taskMargin + i * conf.width + LEFT_MARGIN;\n    task.y = taskPos;\n    task.width = conf.diagramMarginX;\n    task.height = conf.diagramMarginY;\n    task.colour = colour;\n    task.fill = fill;\n    task.num = num;\n    task.actors = taskActors;\n\n    // Draw the box with the attached line\n    svgDraw.drawTask(diagram, task, conf);\n    bounds.insert(task.x, task.y, task.x + task.width + conf.taskMargin, 300 + 5 * 30); // stopy is the length of the descenders.\n  }\n};\n\nexport default {\n  setConf,\n  draw,\n};\n","const getStyles = (options) =>\n  `.label {\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n    color: ${options.textColor};\n  }\n  .mouth {\n    stroke: #666;\n  }\n\n  line {\n    stroke: ${options.textColor}\n  }\n\n  .legend {\n    fill: ${options.textColor};\n  }\n\n  .label text {\n    fill: #333;\n  }\n  .label {\n    color: ${options.textColor}\n  }\n\n  .face {\n    ${options.faceColor ? `fill: ${options.faceColor}` : 'fill: #FFF8DC'};\n    stroke: #999;\n  }\n\n  .node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n    stroke-width: 1px;\n  }\n\n  .node .label {\n    text-align: center;\n  }\n  .node.clickable {\n    cursor: pointer;\n  }\n\n  .arrowheadPath {\n    fill: ${options.arrowheadColor};\n  }\n\n  .edgePath .path {\n    stroke: ${options.lineColor};\n    stroke-width: 1.5px;\n  }\n\n  .flowchart-link {\n    stroke: ${options.lineColor};\n    fill: none;\n  }\n\n  .edgeLabel {\n    background-color: ${options.edgeLabelBackground};\n    rect {\n      opacity: 0.5;\n    }\n    text-align: center;\n  }\n\n  .cluster rect {\n  }\n\n  .cluster text {\n    fill: ${options.titleColor};\n  }\n\n  div.mermaidTooltip {\n    position: absolute;\n    text-align: center;\n    max-width: 200px;\n    padding: 2px;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n    font-size: 12px;\n    background: ${options.tertiaryColor};\n    border: 1px solid ${options.border2};\n    border-radius: 2px;\n    pointer-events: none;\n    z-index: 100;\n  }\n\n  .task-type-0, .section-type-0  {\n    ${options.fillType0 ? `fill: ${options.fillType0}` : ''};\n  }\n  .task-type-1, .section-type-1  {\n    ${options.fillType0 ? `fill: ${options.fillType1}` : ''};\n  }\n  .task-type-2, .section-type-2  {\n    ${options.fillType0 ? `fill: ${options.fillType2}` : ''};\n  }\n  .task-type-3, .section-type-3  {\n    ${options.fillType0 ? `fill: ${options.fillType3}` : ''};\n  }\n  .task-type-4, .section-type-4  {\n    ${options.fillType0 ? `fill: ${options.fillType4}` : ''};\n  }\n  .task-type-5, .section-type-5  {\n    ${options.fillType0 ? `fill: ${options.fillType5}` : ''};\n  }\n  .task-type-6, .section-type-6  {\n    ${options.fillType0 ? `fill: ${options.fillType6}` : ''};\n  }\n  .task-type-7, .section-type-7  {\n    ${options.fillType0 ? `fill: ${options.fillType7}` : ''};\n  }\n\n  .actor-0 {\n    ${options.actor0 ? `fill: ${options.actor0}` : ''};\n  }\n  .actor-1 {\n    ${options.actor1 ? `fill: ${options.actor1}` : ''};\n  }\n  .actor-2 {\n    ${options.actor2 ? `fill: ${options.actor2}` : ''};\n  }\n  .actor-3 {\n    ${options.actor3 ? `fill: ${options.actor3}` : ''};\n  }\n  .actor-4 {\n    ${options.actor4 ? `fill: ${options.actor4}` : ''};\n  }\n  .actor-5 {\n    ${options.actor5 ? `fill: ${options.actor5}` : ''};\n  }\n\n  }\n`;\n\nexport default getStyles;\n","import { arc as d3arc } from 'd3';\n\nexport const drawRect = function (elem, rectData) {\n  const rectElem = elem.append('rect');\n  rectElem.attr('x', rectData.x);\n  rectElem.attr('y', rectData.y);\n  rectElem.attr('fill', rectData.fill);\n  rectElem.attr('stroke', rectData.stroke);\n  rectElem.attr('width', rectData.width);\n  rectElem.attr('height', rectData.height);\n  rectElem.attr('rx', rectData.rx);\n  rectElem.attr('ry', rectData.ry);\n\n  if (typeof rectData.class !== 'undefined') {\n    rectElem.attr('class', rectData.class);\n  }\n\n  return rectElem;\n};\n\nexport const drawFace = function (element, faceData) {\n  const radius = 15;\n  const circleElement = element\n    .append('circle')\n    .attr('cx', faceData.cx)\n    .attr('cy', faceData.cy)\n    .attr('class', 'face')\n    .attr('r', radius)\n    .attr('stroke-width', 2)\n    .attr('overflow', 'visible');\n\n  const face = element.append('g');\n\n  //left eye\n  face\n    .append('circle')\n    .attr('cx', faceData.cx - radius / 3)\n    .attr('cy', faceData.cy - radius / 3)\n    .attr('r', 1.5)\n    .attr('stroke-width', 2)\n    .attr('fill', '#666')\n    .attr('stroke', '#666');\n\n  //right eye\n  face\n    .append('circle')\n    .attr('cx', faceData.cx + radius / 3)\n    .attr('cy', faceData.cy - radius / 3)\n    .attr('r', 1.5)\n    .attr('stroke-width', 2)\n    .attr('fill', '#666')\n    .attr('stroke', '#666');\n\n  /** @param {any} face */\n  function smile(face) {\n    const arc = d3arc()\n      .startAngle(Math.PI / 2)\n      .endAngle(3 * (Math.PI / 2))\n      .innerRadius(radius / 2)\n      .outerRadius(radius / 2.2);\n    //mouth\n    face\n      .append('path')\n      .attr('class', 'mouth')\n      .attr('d', arc)\n      .attr('transform', 'translate(' + faceData.cx + ',' + (faceData.cy + 2) + ')');\n  }\n\n  /** @param {any} face */\n  function sad(face) {\n    const arc = d3arc()\n      .startAngle((3 * Math.PI) / 2)\n      .endAngle(5 * (Math.PI / 2))\n      .innerRadius(radius / 2)\n      .outerRadius(radius / 2.2);\n    //mouth\n    face\n      .append('path')\n      .attr('class', 'mouth')\n      .attr('d', arc)\n      .attr('transform', 'translate(' + faceData.cx + ',' + (faceData.cy + 7) + ')');\n  }\n\n  /** @param {any} face */\n  function ambivalent(face) {\n    face\n      .append('line')\n      .attr('class', 'mouth')\n      .attr('stroke', 2)\n      .attr('x1', faceData.cx - 5)\n      .attr('y1', faceData.cy + 7)\n      .attr('x2', faceData.cx + 5)\n      .attr('y2', faceData.cy + 7)\n      .attr('class', 'mouth')\n      .attr('stroke-width', '1px')\n      .attr('stroke', '#666');\n  }\n\n  if (faceData.score > 3) {\n    smile(face);\n  } else if (faceData.score < 3) {\n    sad(face);\n  } else {\n    ambivalent(face);\n  }\n\n  return circleElement;\n};\n\nexport const drawCircle = function (element, circleData) {\n  const circleElement = element.append('circle');\n  circleElement.attr('cx', circleData.cx);\n  circleElement.attr('cy', circleData.cy);\n  circleElement.attr('class', 'actor-' + circleData.pos);\n  circleElement.attr('fill', circleData.fill);\n  circleElement.attr('stroke', circleData.stroke);\n  circleElement.attr('r', circleData.r);\n\n  if (typeof circleElement.class !== 'undefined') {\n    circleElement.attr('class', circleElement.class);\n  }\n\n  if (typeof circleData.title !== 'undefined') {\n    circleElement.append('title').text(circleData.title);\n  }\n\n  return circleElement;\n};\n\nexport const drawText = function (elem, textData) {\n  // Remove and ignore br:s\n  const nText = textData.text.replace(/<br\\s*\\/?>/gi, ' ');\n\n  const textElem = elem.append('text');\n  textElem.attr('x', textData.x);\n  textElem.attr('y', textData.y);\n  textElem.attr('class', 'legend');\n\n  textElem.style('text-anchor', textData.anchor);\n\n  if (typeof textData.class !== 'undefined') {\n    textElem.attr('class', textData.class);\n  }\n\n  const span = textElem.append('tspan');\n  span.attr('x', textData.x + textData.textMargin * 2);\n  span.text(nText);\n\n  return textElem;\n};\n\nexport const drawLabel = function (elem, txtObject) {\n  /**\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} cut\n   */\n  function genPoints(x, y, width, height, cut) {\n    return (\n      x +\n      ',' +\n      y +\n      ' ' +\n      (x + width) +\n      ',' +\n      y +\n      ' ' +\n      (x + width) +\n      ',' +\n      (y + height - cut) +\n      ' ' +\n      (x + width - cut * 1.2) +\n      ',' +\n      (y + height) +\n      ' ' +\n      x +\n      ',' +\n      (y + height)\n    );\n  }\n  const polygon = elem.append('polygon');\n  polygon.attr('points', genPoints(txtObject.x, txtObject.y, 50, 20, 7));\n  polygon.attr('class', 'labelBox');\n\n  txtObject.y = txtObject.y + txtObject.labelMargin;\n  txtObject.x = txtObject.x + 0.5 * txtObject.labelMargin;\n  drawText(elem, txtObject);\n};\n\nexport const drawSection = function (elem, section, conf) {\n  const g = elem.append('g');\n\n  const rect = getNoteRect();\n  rect.x = section.x;\n  rect.y = section.y;\n  rect.fill = section.fill;\n  rect.width = conf.width;\n  rect.height = conf.height;\n  rect.class = 'journey-section section-type-' + section.num;\n  rect.rx = 3;\n  rect.ry = 3;\n  drawRect(g, rect);\n\n  _drawTextCandidateFunc(conf)(\n    section.text,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: 'journey-section section-type-' + section.num },\n    conf,\n    section.colour\n  );\n};\n\nlet taskCount = -1;\n/**\n * Draws an actor in the diagram with the attaced line\n *\n * @param {any} elem The HTML element\n * @param {any} task The task to render\n * @param {any} conf The global configuration\n */\nexport const drawTask = function (elem, task, conf) {\n  const center = task.x + conf.width / 2;\n  const g = elem.append('g');\n  taskCount++;\n  const maxHeight = 300 + 5 * 30;\n  g.append('line')\n    .attr('id', 'task' + taskCount)\n    .attr('x1', center)\n    .attr('y1', task.y)\n    .attr('x2', center)\n    .attr('y2', maxHeight)\n    .attr('class', 'task-line')\n    .attr('stroke-width', '1px')\n    .attr('stroke-dasharray', '4 2')\n    .attr('stroke', '#666');\n\n  drawFace(g, {\n    cx: center,\n    cy: 300 + (5 - task.score) * 30,\n    score: task.score,\n  });\n\n  const rect = getNoteRect();\n  rect.x = task.x;\n  rect.y = task.y;\n  rect.fill = task.fill;\n  rect.width = conf.width;\n  rect.height = conf.height;\n  rect.class = 'task task-type-' + task.num;\n  rect.rx = 3;\n  rect.ry = 3;\n  drawRect(g, rect);\n\n  let xPos = task.x + 14;\n  task.people.forEach((person) => {\n    const colour = task.actors[person].color;\n\n    const circle = {\n      cx: xPos,\n      cy: task.y,\n      r: 7,\n      fill: colour,\n      stroke: '#000',\n      title: person,\n      pos: task.actors[person].position,\n    };\n\n    drawCircle(g, circle);\n    xPos += 10;\n  });\n\n  _drawTextCandidateFunc(conf)(\n    task.task,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: 'task' },\n    conf,\n    task.colour\n  );\n};\n\n/**\n * Draws a background rectangle\n *\n * @param {any} elem The html element\n * @param {any} bounds The bounds of the drawing\n */\nexport const drawBackgroundRect = function (elem, bounds) {\n  const rectElem = drawRect(elem, {\n    x: bounds.startx,\n    y: bounds.starty,\n    width: bounds.stopx - bounds.startx,\n    height: bounds.stopy - bounds.starty,\n    fill: bounds.fill,\n    class: 'rect',\n  });\n  rectElem.lower();\n};\n\nexport const getTextObj = function () {\n  return {\n    x: 0,\n    y: 0,\n    fill: undefined,\n    'text-anchor': 'start',\n    width: 100,\n    height: 100,\n    textMargin: 0,\n    rx: 0,\n    ry: 0,\n  };\n};\n\nexport const getNoteRect = function () {\n  return {\n    x: 0,\n    y: 0,\n    width: 100,\n    anchor: 'start',\n    height: 100,\n    rx: 0,\n    ry: 0,\n  };\n};\n\nconst _drawTextCandidateFunc = (function () {\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} colour\n   */\n  function byText(content, g, x, y, width, height, textAttrs, colour) {\n    const text = g\n      .append('text')\n      .attr('x', x + width / 2)\n      .attr('y', y + height / 2 + 5)\n      .style('font-color', colour)\n      .style('text-anchor', 'middle')\n      .text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   * @param {any} colour\n   */\n  function byTspan(content, g, x, y, width, height, textAttrs, conf, colour) {\n    const { taskFontSize, taskFontFamily } = conf;\n\n    const lines = content.split(/<br\\s*\\/?>/gi);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * taskFontSize - (taskFontSize * (lines.length - 1)) / 2;\n      const text = g\n        .append('text')\n        .attr('x', x + width / 2)\n        .attr('y', y)\n        .attr('fill', colour)\n        .style('text-anchor', 'middle')\n        .style('font-size', taskFontSize)\n        .style('font-family', taskFontFamily);\n      text\n        .append('tspan')\n        .attr('x', x + width / 2)\n        .attr('dy', dy)\n        .text(lines[i]);\n\n      text\n        .attr('y', y + height / 2.0)\n        .attr('dominant-baseline', 'central')\n        .attr('alignment-baseline', 'central');\n\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byFo(content, g, x, y, width, height, textAttrs, conf) {\n    const body = g.append('switch');\n    const f = body\n      .append('foreignObject')\n      .attr('x', x)\n      .attr('y', y)\n      .attr('width', width)\n      .attr('height', height)\n      .attr('position', 'fixed');\n\n    const text = f\n      .append('xhtml:div')\n      .style('display', 'table')\n      .style('height', '100%')\n      .style('width', '100%');\n\n    text\n      .append('div')\n      .attr('class', 'label')\n      .style('display', 'table-cell')\n      .style('text-align', 'center')\n      .style('vertical-align', 'middle')\n      .text(content);\n\n    byTspan(content, body, x, y, width, height, textAttrs, conf);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} toText\n   * @param {any} fromTextAttrsDict\n   */\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (key in fromTextAttrsDict) {\n        // eslint-disable-line\n        // noinspection JSUnfilteredForInLoop\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n\n  return function (conf) {\n    return conf.textPlacement === 'fo' ? byFo : conf.textPlacement === 'old' ? byText : byTspan;\n  };\n})();\n\nconst initGraphics = function (graphics) {\n  graphics\n    .append('defs')\n    .append('marker')\n    .attr('id', 'arrowhead')\n    .attr('refX', 5)\n    .attr('refY', 2)\n    .attr('markerWidth', 6)\n    .attr('markerHeight', 4)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0,0 V 4 L6,2 Z'); // this is actual shape for arrowhead\n};\n\nexport default {\n  drawRect,\n  drawCircle,\n  drawSection,\n  drawText,\n  drawLabel,\n  drawTask,\n  drawBackgroundRect,\n  getTextObj,\n  getNoteRect,\n  initGraphics,\n};\n","/** Created by knut on 14-12-11. */\nimport { select } from 'd3';\nimport { log } from './logger';\n\nconst conf = {};\n\n/**\n * Merges the value of `conf` with the passed `cnf`\n *\n * @param {object} cnf Config to merge\n */\nexport const setConf = function (cnf) {\n  const keys = Object.keys(cnf);\n\n  keys.forEach(function (key) {\n    conf[key] = cnf[key];\n  });\n};\n\n/**\n * Draws a an info picture in the tag with id: id based on the graph definition in text.\n *\n * @param {string} id The text for the error\n * @param {string} ver The version\n */\nexport const draw = (id, ver) => {\n  try {\n    log.debug('Renering svg for syntax error\\n');\n\n    const svg = select('#' + id);\n\n    const g = svg.append('g');\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm411.313,123.313c6.25-6.25 6.25-16.375 0-22.625s-16.375-6.25-22.625,0l-32,32-9.375,9.375-20.688-20.688c-12.484-12.5-32.766-12.5-45.25,0l-16,16c-1.261,1.261-2.304,2.648-3.31,4.051-21.739-8.561-45.324-13.426-70.065-13.426-105.867,0-192,86.133-192,192s86.133,192 192,192 192-86.133 192-192c0-24.741-4.864-48.327-13.426-70.065 1.402-1.007 2.79-2.049 4.051-3.31l16-16c12.5-12.492 12.5-32.758 0-45.25l-20.688-20.688 9.375-9.375 32.001-31.999zm-219.313,100.687c-52.938,0-96,43.063-96,96 0,8.836-7.164,16-16,16s-16-7.164-16-16c0-70.578 57.422-128 128-128 8.836,0 16,7.164 16,16s-7.164,16-16,16z'\n      );\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm459.02,148.98c-6.25-6.25-16.375-6.25-22.625,0s-6.25,16.375 0,22.625l16,16c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688 6.25-6.25 6.25-16.375 0-22.625l-16.001-16z'\n      );\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm340.395,75.605c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688 6.25-6.25 6.25-16.375 0-22.625l-16-16c-6.25-6.25-16.375-6.25-22.625,0s-6.25,16.375 0,22.625l15.999,16z'\n      );\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm400,64c8.844,0 16-7.164 16-16v-32c0-8.836-7.156-16-16-16-8.844,0-16,7.164-16,16v32c0,8.836 7.156,16 16,16z'\n      );\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm496,96.586h-32c-8.844,0-16,7.164-16,16 0,8.836 7.156,16 16,16h32c8.844,0 16-7.164 16-16 0-8.836-7.156-16-16-16z'\n      );\n\n    g.append('path')\n      .attr('class', 'error-icon')\n      .attr(\n        'd',\n        'm436.98,75.605c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688l32-32c6.25-6.25 6.25-16.375 0-22.625s-16.375-6.25-22.625,0l-32,32c-6.251,6.25-6.251,16.375-0.001,22.625z'\n      );\n\n    g.append('text') // text label for the x axis\n      .attr('class', 'error-text')\n      .attr('x', 1240)\n      .attr('y', 250)\n      .attr('font-size', '150px')\n      .style('text-anchor', 'middle')\n      .text('Syntax error in graph');\n    g.append('text') // text label for the x axis\n      .attr('class', 'error-text')\n      .attr('x', 1050)\n      .attr('y', 400)\n      .attr('font-size', '100px')\n      .style('text-anchor', 'middle')\n      .text('mermaid version ' + ver);\n\n    svg.attr('height', 100);\n    svg.attr('width', 400);\n    svg.attr('viewBox', '768 0 512 512');\n  } catch (e) {\n    log.error('Error while rendering info diagram');\n    log.error(e.message);\n  }\n};\n\nexport default {\n  setConf,\n  draw,\n};\n","let interactionFunctions = [];\nexport const addFunction = (func) => {\n  interactionFunctions.push(func);\n};\nexport const attachFunctions = () => {\n  interactionFunctions.forEach((f) => {\n    f();\n  });\n  interactionFunctions = [];\n};\n","import moment from 'moment-mini';\n\n/** @typedef {'debug' | 'info' | 'warn' | 'error' | 'fatal'} LogLevel A log level */\n\n/** @type {Object<LogLevel, number>} */\nexport const LEVELS = {\n  debug: 1,\n  info: 2,\n  warn: 3,\n  error: 4,\n  fatal: 5,\n};\n\nexport const log = {\n  debug: () => {},\n  info: () => {},\n  warn: () => {},\n  error: () => {},\n  fatal: () => {},\n};\n\n/**\n * Sets a log level\n *\n * @param {LogLevel} [level=\"fatal\"] The level to set the logging to. Default is `\"fatal\"`\n */\nexport const setLogLevel = function (level = 'fatal') {\n  if (isNaN(level)) {\n    level = level.toLowerCase();\n    if (LEVELS[level] !== undefined) {\n      level = LEVELS[level];\n    }\n  }\n  log.trace = () => {};\n  log.debug = () => {};\n  log.info = () => {};\n  log.warn = () => {};\n  log.error = () => {};\n  log.fatal = () => {};\n  if (level <= LEVELS.fatal) {\n    log.fatal = console.error\n      ? console.error.bind(console, format('FATAL'), 'color: orange')\n      : console.log.bind(console, '\\x1b[35m', format('FATAL'));\n  }\n  if (level <= LEVELS.error) {\n    log.error = console.error\n      ? console.error.bind(console, format('ERROR'), 'color: orange')\n      : console.log.bind(console, '\\x1b[31m', format('ERROR'));\n  }\n  if (level <= LEVELS.warn) {\n    log.warn = console.warn\n      ? console.warn.bind(console, format('WARN'), 'color: orange')\n      : console.log.bind(console, `\\x1b[33m`, format('WARN'));\n  }\n  if (level <= LEVELS.info) {\n    log.info = console.info // ? console.info.bind(console, '\\x1b[34m', format('INFO'), 'color: blue')\n      ? console.info.bind(console, format('INFO'), 'color: lightblue')\n      : console.log.bind(console, '\\x1b[34m', format('INFO'));\n  }\n  if (level <= LEVELS.debug) {\n    log.debug = console.debug\n      ? console.debug.bind(console, format('DEBUG'), 'color: lightgreen')\n      : console.log.bind(console, '\\x1b[32m', format('DEBUG'));\n  }\n};\n\n/**\n * Returns a format with the timestamp and the log level\n *\n * @param {LogLevel} level The level for the log format\n * @returns {string} The format with the timestamp and log level\n */\nconst format = (level) => {\n  const time = moment().format('ss.SSS');\n  return `%c${time} : ${level} : `;\n};\n","/**\n * Web page integration module for the mermaid framework. It uses the mermaidAPI for mermaid\n * functionality and to render the diagrams to svg code.\n */\nimport { log } from './logger';\nimport mermaidAPI from './mermaidAPI';\nimport utils from './utils';\n\n/**\n * ## init\n *\n * Function that goes through the document to find the chart definitions in there and render them.\n *\n * The function tags the processed attributes with the attribute data-processed and ignores found\n * elements with the attribute already set. This way the init function can be triggered several times.\n *\n * Optionally, `init` can accept in the second argument one of the following:\n *\n * - A DOM Node\n * - An array of DOM nodes (as would come from a jQuery selector)\n * - A W3C selector, a la `.mermaid`\n *\n * ```mermaid\n * graph LR;\n *  a(Find elements)-->b{Processed}\n *  b-->|Yes|c(Leave element)\n *  b-->|No |d(Transform)\n * ```\n *\n * Renders the mermaid diagrams\n */\nconst init = function () {\n  try {\n    initThrowsErrors(...arguments);\n  } catch (e) {\n    log.warn('Syntax Error rendering');\n    log.warn(e);\n    if (this.parseError) {\n      this.parseError(e);\n    }\n  }\n};\n\nconst initThrowsErrors = function () {\n  const conf = mermaidAPI.getConfig();\n  // console.log('Starting rendering diagrams (init) - mermaid.init', conf);\n  let nodes;\n  if (arguments.length >= 2) {\n    /*! sequence config was passed as #1 */\n    if (typeof arguments[0] !== 'undefined') {\n      mermaid.sequenceConfig = arguments[0];\n    }\n\n    nodes = arguments[1];\n  } else {\n    nodes = arguments[0];\n  }\n\n  // if last argument is a function this is the callback function\n  let callback;\n  if (typeof arguments[arguments.length - 1] === 'function') {\n    callback = arguments[arguments.length - 1];\n    log.debug('Callback function found');\n  } else {\n    if (typeof conf.mermaid !== 'undefined') {\n      if (typeof conf.mermaid.callback === 'function') {\n        callback = conf.mermaid.callback;\n        log.debug('Callback function found');\n      } else {\n        log.debug('No Callback function found');\n      }\n    }\n  }\n  nodes =\n    nodes === undefined\n      ? document.querySelectorAll('.mermaid')\n      : typeof nodes === 'string'\n      ? document.querySelectorAll(nodes)\n      : nodes instanceof window.Node\n      ? [nodes]\n      : nodes; // Last case  - sequence config was passed pick next\n\n  log.debug('Start On Load before: ' + mermaid.startOnLoad);\n  if (typeof mermaid.startOnLoad !== 'undefined') {\n    log.debug('Start On Load inner: ' + mermaid.startOnLoad);\n    mermaidAPI.updateSiteConfig({ startOnLoad: mermaid.startOnLoad });\n  }\n\n  if (typeof mermaid.ganttConfig !== 'undefined') {\n    mermaidAPI.updateSiteConfig({ gantt: mermaid.ganttConfig });\n  }\n\n  const idGeneratior = new utils.initIdGeneratior(conf.deterministicIds, conf.deterministicIDSeed);\n\n  let txt;\n\n  for (let i = 0; i < nodes.length; i++) {\n    // element is the current div with mermaid class\n    const element = nodes[i];\n\n    /*! Check if previously processed */\n    if (!element.getAttribute('data-processed')) {\n      element.setAttribute('data-processed', true);\n    } else {\n      continue;\n    }\n\n    const id = `mermaid-${idGeneratior.next()}`;\n\n    // Fetch the graph definition including tags\n    txt = element.innerHTML;\n\n    // transforms the html to pure text\n    txt = utils\n      .entityDecode(txt)\n      .trim()\n      .replace(/<br\\s*\\/?>/gi, '<br/>');\n\n    const init = utils.detectInit(txt);\n    if (init) {\n      log.debug('Detected early reinit: ', init);\n    }\n\n    mermaidAPI.render(\n      id,\n      txt,\n      (svgCode, bindFunctions) => {\n        element.innerHTML = svgCode;\n        if (typeof callback !== 'undefined') {\n          callback(id);\n        }\n        if (bindFunctions) bindFunctions(element);\n      },\n      element\n    );\n  }\n};\n\nconst initialize = function (config) {\n  // mermaidAPI.reset();\n  if (typeof config.mermaid !== 'undefined') {\n    if (typeof config.mermaid.startOnLoad !== 'undefined') {\n      mermaid.startOnLoad = config.mermaid.startOnLoad;\n    }\n    if (typeof config.mermaid.htmlLabels !== 'undefined') {\n      mermaid.htmlLabels =\n        config.mermaid.htmlLabels === 'false' || config.mermaid.htmlLabels === false ? false : true;\n    }\n  }\n  mermaidAPI.initialize(config);\n  // mermaidAPI.reset();\n};\n\n/**\n * ##contentLoaded Callback function that is called when page is loaded. This functions fetches\n * configuration for mermaid rendering and calls init for rendering the mermaid diagrams on the page.\n */\nconst contentLoaded = function () {\n  let config;\n\n  if (mermaid.startOnLoad) {\n    // No config found, do check API config\n    config = mermaidAPI.getConfig();\n    if (config.startOnLoad) {\n      mermaid.init();\n    }\n  } else {\n    if (typeof mermaid.startOnLoad === 'undefined') {\n      log.debug('In start, no config');\n      config = mermaidAPI.getConfig();\n      if (config.startOnLoad) {\n        mermaid.init();\n      }\n    }\n  }\n};\n\nif (typeof document !== 'undefined') {\n  /*!\n   * Wait for document loaded before starting the execution\n   */\n  window.addEventListener(\n    'load',\n    function () {\n      contentLoaded();\n    },\n    false\n  );\n}\n\nconst mermaid = {\n  startOnLoad: true,\n  htmlLabels: true,\n\n  mermaidAPI,\n  parse: mermaidAPI.parse,\n  render: mermaidAPI.render,\n\n  init,\n  initialize,\n\n  contentLoaded,\n};\n\nexport default mermaid;\n","/**\n * Edit this\n * Page[[N|Solid](img/GitHub-Mark-32px.png)](https://github.com/mermaid-js/mermaid/blob/develop/src/mermaidAPI.js)\n *\n * This is the API to be used when optionally handling the integration with the web page, instead of\n * using the default integration provided by mermaid.js.\n *\n * The core of this api is the [**render**](Setup.md?id=render) function which, given a graph\n * definition as text, renders the graph/diagram and returns an svg element for the graph.\n *\n * It is is then up to the user of the API to make use of the svg, either insert it somewhere in the\n * page or do something completely different.\n *\n * In addition to the render function, a number of behavioral configuration options are available.\n *\n * @name mermaidAPI\n */\nimport { select } from 'd3';\nimport { compile, serialize, stringify } from 'stylis';\nimport pkg from '../package.json';\nimport * as configApi from './config';\nimport classDb from './diagrams/class/classDb';\nimport classRenderer from './diagrams/class/classRenderer';\nimport classRendererV2 from './diagrams/class/classRenderer-v2';\nimport classParser from './diagrams/class/parser/classDiagram';\nimport erDb from './diagrams/er/erDb';\nimport erRenderer from './diagrams/er/erRenderer';\nimport erParser from './diagrams/er/parser/erDiagram';\nimport flowDb from './diagrams/flowchart/flowDb';\nimport flowRenderer from './diagrams/flowchart/flowRenderer';\nimport flowRendererV2 from './diagrams/flowchart/flowRenderer-v2';\nimport flowParser from './diagrams/flowchart/parser/flow';\nimport ganttDb from './diagrams/gantt/ganttDb';\nimport ganttRenderer from './diagrams/gantt/ganttRenderer';\nimport ganttParser from './diagrams/gantt/parser/gantt';\nimport gitGraphAst from './diagrams/git/gitGraphAst';\nimport gitGraphRenderer from './diagrams/git/gitGraphRenderer';\nimport gitGraphParser from './diagrams/git/parser/gitGraph';\nimport infoDb from './diagrams/info/infoDb';\nimport infoRenderer from './diagrams/info/infoRenderer';\nimport infoParser from './diagrams/info/parser/info';\nimport pieParser from './diagrams/pie/parser/pie';\nimport pieDb from './diagrams/pie/pieDb';\nimport pieRenderer from './diagrams/pie/pieRenderer';\nimport addSVGAccessibilityFields from './diagrams/pie/pieRenderer';\nimport requirementParser from './diagrams/requirement/parser/requirementDiagram';\nimport requirementDb from './diagrams/requirement/requirementDb';\nimport requirementRenderer from './diagrams/requirement/requirementRenderer';\nimport sequenceParser from './diagrams/sequence/parser/sequenceDiagram';\nimport sequenceDb from './diagrams/sequence/sequenceDb';\nimport sequenceRenderer from './diagrams/sequence/sequenceRenderer';\nimport stateParser from './diagrams/state/parser/stateDiagram';\nimport stateDb from './diagrams/state/stateDb';\nimport stateRenderer from './diagrams/state/stateRenderer';\nimport stateRendererV2 from './diagrams/state/stateRenderer-v2';\nimport journeyDb from './diagrams/user-journey/journeyDb';\nimport journeyRenderer from './diagrams/user-journey/journeyRenderer';\nimport journeyParser from './diagrams/user-journey/parser/journey';\nimport errorRenderer from './errorRenderer';\nimport { attachFunctions } from './interactionDb';\nimport { log, setLogLevel } from './logger';\nimport getStyles from './styles';\nimport theme from './themes';\nimport utils, { directiveSanitizer, assignWithDepth, sanitizeCss } from './utils';\nimport DOMPurify from 'dompurify';\n\n/**\n * @param text\n * @returns {any}\n */\nfunction parse(text) {\n  text = text + '\\n';\n  const cnf = configApi.getConfig();\n  const graphInit = utils.detectInit(text, cnf);\n  if (graphInit) {\n    reinitialize(graphInit);\n    log.info('reinit ', graphInit);\n  }\n  const graphType = utils.detectType(text, cnf);\n  let parser;\n\n  log.debug('Type ' + graphType);\n  switch (graphType) {\n    case 'gitGraph':\n      gitGraphAst.clear();\n      parser = gitGraphParser;\n      parser.parser.yy = gitGraphAst;\n      break;\n    case 'flowchart':\n      flowDb.clear();\n      parser = flowParser;\n      parser.parser.yy = flowDb;\n      break;\n    case 'flowchart-v2':\n      flowDb.clear();\n      parser = flowParser;\n      parser.parser.yy = flowDb;\n      break;\n    case 'sequence':\n      sequenceDb.clear();\n      parser = sequenceParser;\n      parser.parser.yy = sequenceDb;\n      break;\n    case 'gantt':\n      parser = ganttParser;\n      parser.parser.yy = ganttDb;\n      break;\n    case 'class':\n      parser = classParser;\n      parser.parser.yy = classDb;\n      break;\n    case 'classDiagram':\n      parser = classParser;\n      parser.parser.yy = classDb;\n      break;\n    case 'state':\n      parser = stateParser;\n      parser.parser.yy = stateDb;\n      break;\n    case 'stateDiagram':\n      parser = stateParser;\n      parser.parser.yy = stateDb;\n      break;\n    case 'info':\n      log.debug('info info info');\n      parser = infoParser;\n      parser.parser.yy = infoDb;\n      break;\n    case 'pie':\n      log.debug('pie');\n      parser = pieParser;\n      parser.parser.yy = pieDb;\n      break;\n    case 'er':\n      log.debug('er');\n      parser = erParser;\n      parser.parser.yy = erDb;\n      break;\n    case 'journey':\n      log.debug('Journey');\n      parser = journeyParser;\n      parser.parser.yy = journeyDb;\n      break;\n    case 'requirement':\n    case 'requirementDiagram':\n      log.debug('RequirementDiagram');\n      parser = requirementParser;\n      parser.parser.yy = requirementDb;\n      break;\n  }\n  parser.parser.yy.graphType = graphType;\n  parser.parser.yy.parseError = (str, hash) => {\n    const error = { str, hash };\n    throw error;\n  };\n\n  parser.parse(text);\n  return parser;\n}\n\nexport const encodeEntities = function (text) {\n  let txt = text;\n\n  txt = txt.replace(/style.*:\\S*#.*;/g, function (s) {\n    const innerTxt = s.substring(0, s.length - 1);\n    return innerTxt;\n  });\n  txt = txt.replace(/classDef.*:\\S*#.*;/g, function (s) {\n    const innerTxt = s.substring(0, s.length - 1);\n    return innerTxt;\n  });\n\n  txt = txt.replace(/#\\w+;/g, function (s) {\n    const innerTxt = s.substring(1, s.length - 1);\n\n    const isInt = /^\\+?\\d+$/.test(innerTxt);\n    if (isInt) {\n      return 'ﬂ°°' + innerTxt + '¶ß';\n    } else {\n      return 'ﬂ°' + innerTxt + '¶ß';\n    }\n  });\n\n  return txt;\n};\n\nexport const decodeEntities = function (text) {\n  let txt = text;\n\n  txt = txt.replace(/ﬂ°°/g, function () {\n    return '&#';\n  });\n  txt = txt.replace(/ﬂ°/g, function () {\n    return '&';\n  });\n  txt = txt.replace(/¶ß/g, function () {\n    return ';';\n  });\n\n  return txt;\n};\n/**\n * Function that renders an svg with a graph from a chart definition. Usage example below.\n *\n * ```javascript\n * mermaidAPI.initialize({\n *   startOnLoad: true,\n * });\n * $(function () {\n *   const graphDefinition = 'graph TB\\na-->b';\n *   const cb = function (svgGraph) {\n *     console.log(svgGraph);\n *   };\n *   mermaidAPI.render('id1', graphDefinition, cb);\n * });\n * ```\n *\n * @param {any} id The id of the element to be rendered\n * @param {any} _txt The graph definition\n * @param {any} cb Callback which is called after rendering is finished with the svg code as inparam.\n * @param {any} container Selector to element in which a div with the graph temporarily will be\n *   inserted. In one is provided a hidden div will be inserted in the body of the page instead. The\n *   element will be removed when rendering is completed.\n * @returns {any}\n */\nconst render = function (id, _txt, cb, container) {\n  configApi.reset();\n  let txt = _txt.replace(/\\r\\n?/g, '\\n'); // parser problems on CRLF ignore all CR and leave LF;;\n  const graphInit = utils.detectInit(txt);\n  if (graphInit) {\n    directiveSanitizer(graphInit);\n    configApi.addDirective(graphInit);\n  }\n  let cnf = configApi.getConfig();\n\n  log.debug(cnf);\n\n  // Check the maximum allowed text size\n  if (_txt.length > cnf.maxTextSize) {\n    txt = 'graph TB;a[Maximum text size in diagram exceeded];style a fill:#faa';\n  }\n\n  // let d3Iframe;\n  let root = select('body');\n\n  // In regular execurtion the container will be the div with a mermaid class\n  if (typeof container !== 'undefined') {\n    if (cnf.securityLevel === 'sandbox') {\n      // IF we are in sandboxed mode, we do everyting mermaid related\n      // in a sandboxed div\n      const iframe = select('body')\n        .append('iframe')\n        .attr('id', 'i' + id)\n        .attr('style', 'width: 100%; height: 100%;')\n        .attr('sandbox', '');\n      // const iframeBody = ;\n      root = select(iframe.nodes()[0].contentDocument.body);\n      root.node().style.margin = 0;\n    }\n\n    // A container was provided by the caller\n    container.innerHTML = '';\n\n    if (cnf.securityLevel === 'sandbox') {\n      // IF we are in sandboxed mode, we do everyting mermaid related\n      // in a sandboxed div\n      const iframe = select(container)\n        .append('iframe')\n        .attr('id', 'i' + id)\n        .attr('style', 'width: 100%; height: 100%;')\n        .attr('sandbox', '');\n      // const iframeBody = ;\n      root = select(iframe.nodes()[0].contentDocument.body);\n      root.node().style.margin = 0;\n    } else {\n      root = select(container);\n    }\n\n    root\n      .append('div')\n      .attr('id', 'd' + id)\n      .attr('style', 'font-family: ' + cnf.fontFamily)\n      .append('svg')\n      .attr('id', id)\n      .attr('width', '100%')\n      .attr('xmlns', 'http://www.w3.org/2000/svg')\n      .append('g');\n  } else {\n    // No container was provided\n    // If there is an existsing element with the id, we remove it\n    // this likley a previously rendered diagram\n    const existingSvg = document.getElementById(id);\n    if (existingSvg) {\n      existingSvg.remove();\n    }\n\n    // Remove previous tpm element if it exists\n    let element;\n    if (cnf.securityLevel !== 'sandbox') {\n      element = document.querySelector('#' + 'd' + id);\n    } else {\n      element = document.querySelector('#' + 'i' + id);\n    }\n    if (element) {\n      element.remove();\n    }\n\n    // if (cnf.securityLevel === 'sandbox') {\n    //   const iframe = select('body')\n    //     .append('iframe')\n    //     .attr('id', 'i' + id)\n    //     .attr('sandbox', '');\n    //   // const iframeBody = ;\n    //   root = select(iframe.nodes()[0].contentDocument.body);\n    // }\n\n    // Add the tmp div used for rendering with the id `d${id}`\n    // d+id it will contain a svg with the id \"id\"\n\n    if (cnf.securityLevel === 'sandbox') {\n      // IF we are in sandboxed mode, we do everyting mermaid related\n      // in a sandboxed div\n      const iframe = select('body')\n        .append('iframe')\n        .attr('id', 'i' + id)\n        .attr('style', 'width: 100%; height: 100%;')\n        .attr('sandbox', '');\n      // const iframeBody = ;\n      root = select(iframe.nodes()[0].contentDocument.body);\n      root.node().style.margin = 0;\n    } else {\n      root = select('body');\n    }\n\n    // This is the temporary div\n    root\n      .append('div')\n      .attr('id', 'd' + id)\n      // this is the seed of the svg to be rendered\n      .append('svg')\n      .attr('id', id)\n      .attr('width', '100%')\n      .attr('xmlns', 'http://www.w3.org/2000/svg')\n      .append('g');\n  }\n\n  txt = encodeEntities(txt);\n\n  // Get the tmp element containing the the svg\n  const element = root.select('#d' + id).node();\n  const graphType = utils.detectType(txt, cnf);\n\n  // insert inline style into svg\n  const svg = element.firstChild;\n  const firstChild = svg.firstChild;\n\n  let userStyles = '';\n  // user provided theme CSS\n  if (cnf.themeCSS !== undefined) {\n    userStyles += `\\n${cnf.themeCSS}`;\n  }\n  // user provided theme CSS\n  if (cnf.fontFamily !== undefined) {\n    userStyles += `\\n:root { --mermaid-font-family: ${cnf.fontFamily}}`;\n  }\n  // user provided theme CSS\n  if (cnf.altFontFamily !== undefined) {\n    userStyles += `\\n:root { --mermaid-alt-font-family: ${cnf.altFontFamily}}`;\n  }\n\n  // classDef\n  if (graphType === 'flowchart' || graphType === 'flowchart-v2' || graphType === 'graph') {\n    const classes = flowRenderer.getClasses(txt);\n    const htmlLabels = cnf.htmlLabels || cnf.flowchart.htmlLabels;\n    for (const className in classes) {\n      if (htmlLabels) {\n        userStyles += `\\n.${className} > * { ${classes[className].styles.join(\n          ' !important; '\n        )} !important; }`;\n        userStyles += `\\n.${className} span { ${classes[className].styles.join(\n          ' !important; '\n        )} !important; }`;\n      } else {\n        userStyles += `\\n.${className} path { ${classes[className].styles.join(\n          ' !important; '\n        )} !important; }`;\n        userStyles += `\\n.${className} rect { ${classes[className].styles.join(\n          ' !important; '\n        )} !important; }`;\n        userStyles += `\\n.${className} polygon { ${classes[className].styles.join(\n          ' !important; '\n        )} !important; }`;\n        userStyles += `\\n.${className} ellipse { ${classes[className].styles.join(\n          ' !important; '\n        )} !important; }`;\n        userStyles += `\\n.${className} circle { ${classes[className].styles.join(\n          ' !important; '\n        )} !important; }`;\n        if (classes[className].textStyles) {\n          userStyles += `\\n.${className} tspan { ${classes[className].textStyles.join(\n            ' !important; '\n          )} !important; }`;\n        }\n      }\n    }\n  }\n\n  // log.warn(cnf.themeVariables);\n\n  const stylis = (selector, styles) => serialize(compile(`${selector}{${styles}}`), stringify);\n  const rules = stylis(`#${id}`, getStyles(graphType, userStyles, cnf.themeVariables));\n\n  const style1 = document.createElement('style');\n  style1.innerHTML = `#${id} ` + rules;\n  svg.insertBefore(style1, firstChild);\n\n  // Verify that the generated svgs are ok before removing this\n\n  // const style2 = document.createElement('style');\n  // const cs = window.getComputedStyle(svg);\n  // style2.innerHTML = `#d${id} * {\n  //   color: ${cs.color};\n  //   // font: ${cs.font};\n  //   // font-family: Arial;\n  //   // font-size: 24px;\n  // }`;\n  // svg.insertBefore(style2, firstChild);\n\n  try {\n    switch (graphType) {\n      case 'gitGraph':\n        // cnf.flowchart.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n        //gitGraphRenderer.setConf(cnf.git);\n        gitGraphRenderer.draw(txt, id, false);\n        break;\n      case 'flowchart':\n        cnf.flowchart.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n        flowRenderer.setConf(cnf.flowchart);\n        flowRenderer.draw(txt, id, false);\n        break;\n      case 'flowchart-v2':\n        cnf.flowchart.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n        flowRendererV2.setConf(cnf.flowchart);\n        flowRendererV2.draw(txt, id, false);\n        break;\n      case 'sequence':\n        cnf.sequence.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n        if (cnf.sequenceDiagram) {\n          // backwards compatibility\n          sequenceRenderer.setConf(Object.assign(cnf.sequence, cnf.sequenceDiagram));\n          console.error(\n            '`mermaid config.sequenceDiagram` has been renamed to `config.sequence`. Please update your mermaid config.'\n          );\n        } else {\n          sequenceRenderer.setConf(cnf.sequence);\n        }\n        sequenceRenderer.draw(txt, id);\n        break;\n      case 'gantt':\n        cnf.gantt.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n        ganttRenderer.setConf(cnf.gantt);\n        ganttRenderer.draw(txt, id);\n        break;\n      case 'class':\n        cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n        classRenderer.setConf(cnf.class);\n        classRenderer.draw(txt, id);\n        break;\n      case 'classDiagram':\n        cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n        classRendererV2.setConf(cnf.class);\n        classRendererV2.draw(txt, id);\n        break;\n      case 'state':\n        cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n        stateRenderer.setConf(cnf.state);\n        stateRenderer.draw(txt, id);\n        break;\n      case 'stateDiagram':\n        cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n        stateRendererV2.setConf(cnf.state);\n        stateRendererV2.draw(txt, id);\n        break;\n      case 'info':\n        cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n        infoRenderer.setConf(cnf.class);\n        infoRenderer.draw(txt, id, pkg.version);\n        break;\n      case 'pie':\n        //cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n        //pieRenderer.setConf(cnf.pie);\n        pieRenderer.draw(txt, id, pkg.version);\n        break;\n      case 'er':\n        erRenderer.setConf(cnf.er);\n        erRenderer.draw(txt, id, pkg.version);\n        break;\n      case 'journey':\n        journeyRenderer.setConf(cnf.journey);\n        journeyRenderer.draw(txt, id, pkg.version);\n        break;\n      case 'requirement':\n        requirementRenderer.setConf(cnf.requirement);\n        requirementRenderer.draw(txt, id, pkg.version);\n        break;\n    }\n  } catch (e) {\n    // errorRenderer.setConf(cnf.class);\n    errorRenderer.draw(id, pkg.version);\n    throw e;\n  }\n\n  root\n    .select(`[id=\"${id}\"]`)\n    .selectAll('foreignobject > *')\n    .attr('xmlns', 'http://www.w3.org/1999/xhtml');\n\n  // Fix for when the base tag is used\n  let svgCode = root.select('#d' + id).node().innerHTML;\n\n  log.debug('cnf.arrowMarkerAbsolute', cnf.arrowMarkerAbsolute);\n  if (\n    (!cnf.arrowMarkerAbsolute || cnf.arrowMarkerAbsolute === 'false') &&\n    cnf.arrowMarkerAbsolute !== 'sandbox'\n  ) {\n    svgCode = svgCode.replace(/marker-end=\"url\\(.*?#/g, 'marker-end=\"url(#', 'g');\n  }\n\n  svgCode = decodeEntities(svgCode);\n\n  // Fix for when the br tag is used\n  svgCode = svgCode.replace(/<br>/g, '<br/>');\n\n  if (cnf.securityLevel === 'sandbox') {\n    let svgEl = root.select('#d' + id + ' svg').node();\n    let width = '100%';\n    let height = '100%';\n    if (svgEl) {\n      // width = svgEl.viewBox.baseVal.width + 'px';\n      height = svgEl.viewBox.baseVal.height + 'px';\n    }\n    svgCode = `<iframe style=\"width:${width};height:${height};border:0;margin:0;\" src=\"data:text/html;base64,${btoa(\n      '<body style=\"margin:0\">' + svgCode + '</body>'\n    )}\" sandbox=\"allow-top-navigation-by-user-activation allow-popups\">\n  The “iframe” tag is not supported by your browser.\n</iframe>`;\n  } else {\n    if (cnf.securityLevel !== 'loose') {\n      svgCode = DOMPurify.sanitize(svgCode, {\n        ADD_TAGS: ['foreignobject'],\n        ADD_ATTR: ['dominant-baseline'],\n      });\n    }\n  }\n\n  if (typeof cb !== 'undefined') {\n    switch (graphType) {\n      case 'flowchart':\n      case 'flowchart-v2':\n        cb(svgCode, flowDb.bindFunctions);\n        break;\n      case 'gantt':\n        cb(svgCode, ganttDb.bindFunctions);\n        break;\n      case 'class':\n      case 'classDiagram':\n        cb(svgCode, classDb.bindFunctions);\n        break;\n      default:\n        cb(svgCode);\n    }\n  } else {\n    log.debug('CB = undefined!');\n  }\n  attachFunctions();\n\n  const tmpElementSelector = cnf.securityLevel === 'sandbox' ? '#i' + id : '#d' + id;\n  const node = select(tmpElementSelector).node();\n  if (node !== null && typeof node.remove === 'function') {\n    select(tmpElementSelector).node().remove();\n  }\n\n  return svgCode;\n};\n\nlet currentDirective = {};\n\nconst parseDirective = function (p, statement, context, type) {\n  try {\n    if (statement !== undefined) {\n      statement = statement.trim();\n      switch (context) {\n        case 'open_directive':\n          currentDirective = {};\n          break;\n        case 'type_directive':\n          currentDirective.type = statement.toLowerCase();\n          break;\n        case 'arg_directive':\n          currentDirective.args = JSON.parse(statement);\n          break;\n        case 'close_directive':\n          handleDirective(p, currentDirective, type);\n          currentDirective = null;\n          break;\n      }\n    }\n  } catch (error) {\n    log.error(\n      `Error while rendering sequenceDiagram directive: ${statement} jison context: ${context}`\n    );\n    log.error(error.message);\n  }\n};\n\nconst handleDirective = function (p, directive, type) {\n  log.debug(`Directive type=${directive.type} with args:`, directive.args);\n  switch (directive.type) {\n    case 'init':\n    case 'initialize': {\n      ['config'].forEach((prop) => {\n        if (typeof directive.args[prop] !== 'undefined') {\n          if (type === 'flowchart-v2') {\n            type = 'flowchart';\n          }\n          directive.args[type] = directive.args[prop];\n          delete directive.args[prop];\n        }\n      });\n      log.debug('sanitize in handleDirective', directive.args);\n      directiveSanitizer(directive.args);\n      log.debug('sanitize in handleDirective (done)', directive.args);\n      reinitialize(directive.args);\n      configApi.addDirective(directive.args);\n      break;\n    }\n    case 'wrap':\n    case 'nowrap':\n      if (p && p['setWrap']) {\n        p.setWrap(directive.type === 'wrap');\n      }\n      break;\n    case 'themeCss':\n      log.warn('themeCss encountered');\n      break;\n    default:\n      log.warn(\n        `Unhandled directive: source: '%%{${directive.type}: ${JSON.stringify(\n          directive.args ? directive.args : {}\n        )}}%%`,\n        directive\n      );\n      break;\n  }\n};\n\n/** @param {any} conf */\nfunction updateRendererConfigs(conf) {\n  // Todo remove, all diagrams should get config on demoand from the config object, no need for this\n\n  // gitGraphRenderer.setConf(conf.git); // Todo Remove all  of these\n  flowRenderer.setConf(conf.flowchart);\n  flowRendererV2.setConf(conf.flowchart);\n  if (typeof conf['sequenceDiagram'] !== 'undefined') {\n    sequenceRenderer.setConf(assignWithDepth(conf.sequence, conf['sequenceDiagram']));\n  }\n  sequenceRenderer.setConf(conf.sequence);\n  ganttRenderer.setConf(conf.gantt);\n  classRenderer.setConf(conf.class);\n  stateRenderer.setConf(conf.state);\n  stateRendererV2.setConf(conf.state);\n  infoRenderer.setConf(conf.class);\n  // pieRenderer.setConf(conf.class);\n  erRenderer.setConf(conf.er);\n  journeyRenderer.setConf(conf.journey);\n  requirementRenderer.setConf(conf.requirement);\n  errorRenderer.setConf(conf.class);\n}\n\n/** To be removed */\nfunction reinitialize() {\n  // `mermaidAPI.reinitialize: v${pkg.version}`,\n  //   JSON.stringify(options),\n  //   options.themeVariables.primaryColor;\n  // // if (options.theme && theme[options.theme]) {\n  // //   options.themeVariables = theme[options.theme].getThemeVariables(options.themeVariables);\n  // // }\n  // // Set default options\n  // const config =\n  //   typeof options === 'object' ? configApi.setConfig(options) : configApi.getSiteConfig();\n  // updateRendererConfigs(config);\n  // setLogLevel(config.logLevel);\n  // log.debug('mermaidAPI.reinitialize: ', config);\n}\n\n/** @param {any} options */\nfunction initialize(options) {\n  // console.warn(`mermaidAPI.initialize: v${pkg.version} `, options);\n\n  // Handle legacy location of font-family configuration\n  if (options && options.fontFamily) {\n    if (!options.themeVariables) {\n      options.themeVariables = { fontFamily: options.fontFamily };\n    } else {\n      if (!options.themeVariables.fontFamily) {\n        options.themeVariables = { fontFamily: options.fontFamily };\n      }\n    }\n  }\n  // Set default options\n  configApi.saveConfigFromInitilize(options);\n\n  if (options && options.theme && theme[options.theme]) {\n    // Todo merge with user options\n    options.themeVariables = theme[options.theme].getThemeVariables(options.themeVariables);\n  } else {\n    if (options) options.themeVariables = theme.default.getThemeVariables(options.themeVariables);\n  }\n\n  const config =\n    typeof options === 'object' ? configApi.setSiteConfig(options) : configApi.getSiteConfig();\n\n  updateRendererConfigs(config);\n  setLogLevel(config.logLevel);\n  // log.debug('mermaidAPI.initialize: ', config);\n}\n\nconst mermaidAPI = Object.freeze({\n  render,\n  parse,\n  parseDirective,\n  initialize,\n  reinitialize,\n  getConfig: configApi.getConfig,\n  setConfig: configApi.setConfig,\n  getSiteConfig: configApi.getSiteConfig,\n  updateSiteConfig: configApi.updateSiteConfig,\n  reset: () => {\n    // console.warn('reset');\n    configApi.reset();\n    // const siteConfig = configApi.getSiteConfig();\n    // updateRendererConfigs(siteConfig);\n  },\n  globalReset: () => {\n    configApi.reset(configApi.defaultConfig);\n    updateRendererConfigs(configApi.getConfig());\n  },\n  defaultConfig: configApi.defaultConfig,\n});\n\nsetLogLevel(configApi.getConfig().logLevel);\nconfigApi.reset(configApi.getConfig());\n\nexport default mermaidAPI;\n/**\n * ## mermaidAPI configuration defaults\n *\n * ```html\n * <script>\n *   var config = {\n *     theme: 'default',\n *     logLevel: 'fatal',\n *     securityLevel: 'strict',\n *     startOnLoad: true,\n *     arrowMarkerAbsolute: false,\n *\n *     er: {\n *       diagramPadding: 20,\n *       layoutDirection: 'TB',\n *       minEntityWidth: 100,\n *       minEntityHeight: 75,\n *       entityPadding: 15,\n *       stroke: 'gray',\n *       fill: 'honeydew',\n *       fontSize: 12,\n *       useMaxWidth: true,\n *     },\n *     flowchart: {\n *       diagramPadding: 8,\n *       htmlLabels: true,\n *       curve: 'basis',\n *     },\n *     sequence: {\n *       diagramMarginX: 50,\n *       diagramMarginY: 10,\n *       actorMargin: 50,\n *       width: 150,\n *       height: 65,\n *       boxMargin: 10,\n *       boxTextMargin: 5,\n *       noteMargin: 10,\n *       messageMargin: 35,\n *       messageAlign: 'center',\n *       mirrorActors: true,\n *       bottomMarginAdj: 1,\n *       useMaxWidth: true,\n *       rightAngles: false,\n *       showSequenceNumbers: false,\n *     },\n *     gantt: {\n *       titleTopMargin: 25,\n *       barHeight: 20,\n *       barGap: 4,\n *       topPadding: 50,\n *       leftPadding: 75,\n *       gridLineStartPadding: 35,\n *       fontSize: 11,\n *       fontFamily: '\"Open Sans\", sans-serif',\n *       numberSectionStyles: 4,\n *       axisFormat: '%Y-%m-%d',\n *       topAxis: false,\n *     },\n *   };\n *   mermaid.initialize(config);\n * </script>\n * ```\n */\n","import classDiagram from './diagrams/class/styles';\nimport er from './diagrams/er/styles';\nimport flowchart from './diagrams/flowchart/styles';\nimport gantt from './diagrams/gantt/styles';\nimport gitGraph from './diagrams/git/styles';\nimport info from './diagrams/info/styles';\nimport pie from './diagrams/pie/styles';\nimport requirement from './diagrams/requirement/styles';\nimport sequence from './diagrams/sequence/styles';\nimport stateDiagram from './diagrams/state/styles';\nimport journey from './diagrams/user-journey/styles';\n\nconst themes = {\n  flowchart,\n  'flowchart-v2': flowchart,\n  sequence,\n  gantt,\n  classDiagram,\n  'classDiagram-v2': classDiagram,\n  class: classDiagram,\n  stateDiagram,\n  state: stateDiagram,\n  gitGraph,\n  info,\n  pie,\n  er,\n  journey,\n  requirement,\n};\n\nexport const calcThemeVariables = (theme, userOverRides) => theme.calcColors(userOverRides);\n\nconst getStyles = (type, userStyles, options) => {\n  //console.warn('options in styles: ', options);\n  return ` {\n    font-family: ${options.fontFamily};\n    font-size: ${options.fontSize};\n    fill: ${options.textColor}\n  }\n\n  /* Classes common for multiple diagrams */\n\n  .error-icon {\n    fill: ${options.errorBkgColor};\n  }\n  .error-text {\n    fill: ${options.errorTextColor};\n    stroke: ${options.errorTextColor};\n  }\n\n  .edge-thickness-normal {\n    stroke-width: 2px;\n  }\n  .edge-thickness-thick {\n    stroke-width: 3.5px\n  }\n  .edge-pattern-solid {\n    stroke-dasharray: 0;\n  }\n\n  .edge-pattern-dashed{\n    stroke-dasharray: 3;\n  }\n  .edge-pattern-dotted {\n    stroke-dasharray: 2;\n  }\n\n  .marker {\n    fill: ${options.lineColor};\n    stroke: ${options.lineColor};\n  }\n  .marker.cross {\n    stroke: ${options.lineColor};\n  }\n\n  svg {\n    font-family: ${options.fontFamily};\n    font-size: ${options.fontSize};\n  }\n\n  ${themes[type](options)}\n\n  ${userStyles}\n`;\n};\n\nexport default getStyles;\n","import { getThemeVariables as baseThemeVariables } from './theme-base';\nimport { getThemeVariables as darkThemeVariables } from './theme-dark';\nimport { getThemeVariables as defaultThemeVariables } from './theme-default';\nimport { getThemeVariables as forestThemeVariables } from './theme-forest';\nimport { getThemeVariables as neutralThemeVariables } from './theme-neutral';\n\nexport default {\n  base: {\n    getThemeVariables: baseThemeVariables,\n  },\n  dark: {\n    getThemeVariables: darkThemeVariables,\n  },\n  default: {\n    getThemeVariables: defaultThemeVariables,\n  },\n  forest: {\n    getThemeVariables: forestThemeVariables,\n  },\n  neutral: {\n    getThemeVariables: neutralThemeVariables,\n  },\n};\n","import { darken, lighten, adjust, invert } from 'khroma';\nimport { mkBorder } from './theme-helpers';\nclass Theme {\n  constructor() {\n    /** # Base variables */\n    /**\n     * - Background - used to know what the background color is of the diagram. This is used for\n     *   deducing colors for istance line color. Defaulr value is #f4f4f4.\n     */\n    this.background = '#f4f4f4';\n    this.darkMode = false;\n\n    // this.background = '#0c0c0c';\n    // this.darkMode = true;\n    this.primaryColor = '#fff4dd';\n    // this.background = '#0c0c0c';\n    // this.primaryColor = '#1f1f00';\n\n    this.noteBkgColor = '#fff5ad';\n    this.noteTextColor = '#333';\n\n    // dark\n\n    // this.primaryColor = '#034694';\n    // this.primaryColor = '#f2ee7e';\n    // this.primaryColor = '#9f33be';\n    // this.primaryColor = '#f0fff0';\n    // this.primaryColor = '#fa255e';\n    // this.primaryColor = '#ECECFF';\n\n    // this.secondaryColor = '#c39ea0';\n    // this.tertiaryColor = '#f8e5e5';\n\n    // this.secondaryColor = '#dfdfde';\n    // this.tertiaryColor = '#CCCCFF';\n\n    this.fontFamily = '\"trebuchet ms\", verdana, arial, sans-serif';\n    this.fontSize = '16px';\n    // this.updateColors();\n  }\n  updateColors() {\n    // The || is to make sure that if the variable has been defiend by a user override that value is to be used\n\n    /* Main */\n    this.primaryTextColor = this.primaryTextColor || (this.darkMode ? '#eee' : '#333'); // invert(this.primaryColor);\n    this.secondaryColor = this.secondaryColor || adjust(this.primaryColor, { h: -120 });\n    this.tertiaryColor = this.tertiaryColor || adjust(this.primaryColor, { h: 180, l: 5 });\n\n    this.primaryBorderColor = this.primaryBorderColor || mkBorder(this.primaryColor, this.darkMode);\n    this.secondaryBorderColor =\n      this.secondaryBorderColor || mkBorder(this.secondaryColor, this.darkMode);\n    this.tertiaryBorderColor =\n      this.tertiaryBorderColor || mkBorder(this.tertiaryColor, this.darkMode);\n    this.noteBorderColor = this.noteBorderColor || mkBorder(this.noteBkgColor, this.darkMode);\n    this.noteBkgColor = this.noteBkgColor || '#fff5ad';\n    this.noteTextColor = this.noteTextColor || '#333';\n\n    this.secondaryTextColor = this.secondaryTextColor || invert(this.secondaryColor);\n    this.tertiaryTextColor = this.tertiaryTextColor || invert(this.tertiaryColor);\n    this.lineColor = this.lineColor || invert(this.background);\n    this.textColor = this.textColor || this.primaryTextColor;\n\n    /* Flowchart variables */\n    this.nodeBkg = this.nodeBkg || this.primaryColor;\n    this.mainBkg = this.mainBkg || this.primaryColor;\n    this.nodeBorder = this.nodeBorder || this.primaryBorderColor;\n    this.clusterBkg = this.clusterBkg || this.tertiaryColor;\n    this.clusterBorder = this.clusterBorder || this.tertiaryBorderColor;\n    this.defaultLinkColor = this.defaultLinkColor || this.lineColor;\n    this.titleColor = this.titleColor || this.tertiaryTextColor;\n    this.edgeLabelBackground =\n      this.edgeLabelBackground ||\n      (this.darkMode ? darken(this.secondaryColor, 30) : this.secondaryColor);\n    this.nodeTextColor = this.nodeTextColor || this.primaryTextColor;\n    /* Sequence Diagram variables */\n\n    // this.actorBorder = lighten(this.border1, 0.5);\n    this.actorBorder = this.actorBorder || this.primaryBorderColor;\n    this.actorBkg = this.actorBkg || this.mainBkg;\n    this.actorTextColor = this.actorTextColor || this.primaryTextColor;\n    this.actorLineColor = this.actorLineColor || 'grey';\n    this.labelBoxBkgColor = this.labelBoxBkgColor || this.actorBkg;\n    this.signalColor = this.signalColor || this.textColor;\n    this.signalTextColor = this.signalTextColor || this.textColor;\n    this.labelBoxBorderColor = this.labelBoxBorderColor || this.actorBorder;\n    this.labelTextColor = this.labelTextColor || this.actorTextColor;\n    this.loopTextColor = this.loopTextColor || this.actorTextColor;\n    this.activationBorderColor = this.activationBorderColor || darken(this.secondaryColor, 10);\n    this.activationBkgColor = this.activationBkgColor || this.secondaryColor;\n    this.sequenceNumberColor = this.sequenceNumberColor || invert(this.lineColor);\n\n    /* Gantt chart variables */\n\n    this.sectionBkgColor = this.sectionBkgColor || this.tertiaryColor;\n    this.altSectionBkgColor = this.altSectionBkgColor || 'white';\n    this.sectionBkgColor = this.sectionBkgColor || this.secondaryColor;\n    this.sectionBkgColor2 = this.sectionBkgColor2 || this.primaryColor;\n    this.excludeBkgColor = this.excludeBkgColor || '#eeeeee';\n    this.taskBorderColor = this.taskBorderColor || this.primaryBorderColor;\n    this.taskBkgColor = this.taskBkgColor || this.primaryColor;\n    this.activeTaskBorderColor = this.activeTaskBorderColor || this.primaryColor;\n    this.activeTaskBkgColor = this.activeTaskBkgColor || lighten(this.primaryColor, 23);\n    this.gridColor = this.gridColor || 'lightgrey';\n    this.doneTaskBkgColor = this.doneTaskBkgColor || 'lightgrey';\n    this.doneTaskBorderColor = this.doneTaskBorderColor || 'grey';\n    this.critBorderColor = this.critBorderColor || '#ff8888';\n    this.critBkgColor = this.critBkgColor || 'red';\n    this.todayLineColor = this.todayLineColor || 'red';\n    this.taskTextColor = this.taskTextColor || this.textColor;\n    this.taskTextOutsideColor = this.taskTextOutsideColor || this.textColor;\n    this.taskTextLightColor = this.taskTextLightColor || this.textColor;\n    this.taskTextColor = this.taskTextColor || this.primaryTextColor;\n    this.taskTextDarkColor = this.taskTextDarkColor || this.textColor;\n    this.taskTextClickableColor = this.taskTextClickableColor || '#003163';\n\n    /* state colors */\n    this.transitionColor = this.transitionColor || this.lineColor;\n    this.transitionLabelColor = this.transitionLabelColor || this.textColor;\n    /* The color of the text tables of the tstates*/\n    this.stateLabelColor = this.stateLabelColor || this.stateBkg || this.primaryTextColor;\n\n    this.stateBkg = this.stateBkg || this.mainBkg;\n    this.labelBackgroundColor = this.labelBackgroundColor || this.stateBkg;\n    this.compositeBackground = this.compositeBackground || this.background || this.tertiaryColor;\n    this.altBackground = this.altBackground || this.tertiaryColor;\n    this.compositeTitleBackground = this.compositeTitleBackground || this.mainBkg;\n    this.compositeBorder = this.compositeBorder || this.nodeBorder;\n    this.innerEndBackground = this.nodeBorder;\n    this.errorBkgColor = this.errorBkgColor || this.tertiaryColor;\n    this.errorTextColor = this.errorTextColor || this.tertiaryTextColor;\n    this.transitionColor = this.transitionColor || this.lineColor;\n    this.specialStateColor = this.lineColor;\n\n    /* class */\n    this.classText = this.classText || this.textColor;\n\n    /* user-journey */\n    this.fillType0 = this.fillType0 || this.primaryColor;\n    this.fillType1 = this.fillType1 || this.secondaryColor;\n    this.fillType2 = this.fillType2 || adjust(this.primaryColor, { h: 64 });\n    this.fillType3 = this.fillType3 || adjust(this.secondaryColor, { h: 64 });\n    this.fillType4 = this.fillType4 || adjust(this.primaryColor, { h: -64 });\n    this.fillType5 = this.fillType5 || adjust(this.secondaryColor, { h: -64 });\n    this.fillType6 = this.fillType6 || adjust(this.primaryColor, { h: 128 });\n    this.fillType7 = this.fillType7 || adjust(this.secondaryColor, { h: 128 });\n\n    /* pie */\n    this.pie1 = this.pie1 || this.primaryColor;\n    this.pie2 = this.pie2 || this.secondaryColor;\n    this.pie3 = this.pie3 || this.tertiaryColor;\n    this.pie4 = this.pie4 || adjust(this.primaryColor, { l: -10 });\n    this.pie5 = this.pie5 || adjust(this.secondaryColor, { l: -10 });\n    this.pie6 = this.pie6 || adjust(this.tertiaryColor, { l: -10 });\n    this.pie7 = this.pie7 || adjust(this.primaryColor, { h: +60, l: -10 });\n    this.pie8 = this.pie8 || adjust(this.primaryColor, { h: -60, l: -10 });\n    this.pie9 = this.pie9 || adjust(this.primaryColor, { h: 120, l: 0 });\n    this.pie10 = this.pie10 || adjust(this.primaryColor, { h: +60, l: -20 });\n    this.pie11 = this.pie11 || adjust(this.primaryColor, { h: -60, l: -20 });\n    this.pie12 = this.pie12 || adjust(this.primaryColor, { h: 120, l: -10 });\n    this.pieTitleTextSize = this.pieTitleTextSize || '25px';\n    this.pieTitleTextColor = this.pieTitleTextColor || this.taskTextDarkColor;\n    this.pieSectionTextSize = this.pieSectionTextSize || '17px';\n    this.pieSectionTextColor = this.pieSectionTextColor || this.textColor;\n    this.pieLegendTextSize = this.pieLegendTextSize || '17px';\n    this.pieLegendTextColor = this.pieLegendTextColor || this.taskTextDarkColor;\n    this.pieStrokeColor = this.pieStrokeColor || 'black';\n    this.pieStrokeWidth = this.pieStrokeWidth || '2px';\n    this.pieOpacity = this.pieOpacity || '0.7';\n\n    /* requirement-diagram */\n    this.requirementBackground = this.requirementBackground || this.primaryColor;\n    this.requirementBorderColor = this.requirementBorderColor || this.primaryBorderColor;\n    this.requirementBorderSize = this.requirementBorderSize || this.primaryBorderColor;\n    this.requirementTextColor = this.requirementTextColor || this.primaryTextColor;\n    this.relationColor = this.relationColor || this.lineColor;\n    this.relationLabelBackground =\n      this.relationLabelBackground ||\n      (this.darkMode ? darken(this.secondaryColor, 30) : this.secondaryColor);\n    this.relationLabelColor = this.relationLabelColor || this.actorTextColor;\n\n    /* git */\n    this.git0 = this.git0 || this.primaryColor;\n    this.git1 = this.git1 || this.secondaryColor;\n    this.git2 = this.git2 || this.tertiaryColor;\n    this.git3 = this.git3 || adjust(this.primaryColor, { h: -30 });\n    this.git4 = this.git4 || adjust(this.primaryColor, { h: -60 });\n    this.git5 = this.git5 || adjust(this.primaryColor, { h: -90 });\n    this.git6 = this.git6 || adjust(this.primaryColor, { h: +60 });\n    this.git7 = this.git7 || adjust(this.primaryColor, { h: +120 });\n    if (this.darkMode) {\n      this.git0 = lighten(this.git0, 25);\n      this.git1 = lighten(this.git1, 25);\n      this.git2 = lighten(this.git2, 25);\n      this.git3 = lighten(this.git3, 25);\n      this.git4 = lighten(this.git4, 25);\n      this.git5 = lighten(this.git5, 25);\n      this.git6 = lighten(this.git6, 25);\n      this.git7 = lighten(this.git7, 25);\n    } else {\n      this.git0 = darken(this.git0, 25);\n      this.git1 = darken(this.git1, 25);\n      this.git2 = darken(this.git2, 25);\n      this.git3 = darken(this.git3, 25);\n      this.git4 = darken(this.git4, 25);\n      this.git5 = darken(this.git5, 25);\n      this.git6 = darken(this.git6, 25);\n      this.git7 = darken(this.git7, 25);\n    }\n    this.gitInv0 = this.gitInv0 || invert(this.git0);\n    this.gitInv1 = this.gitInv1 || invert(this.git1);\n    this.gitInv2 = this.gitInv2 || invert(this.git2);\n    this.gitInv3 = this.gitInv3 || invert(this.git3);\n    this.gitInv4 = this.gitInv4 || invert(this.git4);\n    this.gitInv5 = this.gitInv5 || invert(this.git5);\n    this.gitInv6 = this.gitInv6 || invert(this.git6);\n    this.gitInv7 = this.gitInv7 || invert(this.git7);\n    this.branchLabelColor =\n      this.branchLabelColor || (this.darkMode ? 'black' : this.labelTextColor);\n    this.gitBranchLabel0 = this.gitBranchLabel0 || this.branchLabelColor;\n    this.gitBranchLabel1 = this.gitBranchLabel1 || this.branchLabelColor;\n    this.gitBranchLabel2 = this.gitBranchLabel2 || this.branchLabelColor;\n    this.gitBranchLabel3 = this.gitBranchLabel3 || this.branchLabelColor;\n    this.gitBranchLabel4 = this.gitBranchLabel4 || this.branchLabelColor;\n    this.gitBranchLabel5 = this.gitBranchLabel5 || this.branchLabelColor;\n    this.gitBranchLabel6 = this.gitBranchLabel6 || this.branchLabelColor;\n    this.gitBranchLabel7 = this.gitBranchLabel7 || this.branchLabelColor;\n\n    this.tagLabelColor = this.tagLabelColor || this.primaryTextColor;\n    this.tagLabelBackground = this.tagLabelBackground || this.primaryColor;\n    this.tagLabelBorder = this.tagBorder || this.primaryBorderColor;\n    this.commitLabelColor = this.commitLabelColor || this.secondaryTextColor;\n    this.commitLabelBackground = this.commitLabelBackground || this.secondaryColor;\n  }\n  calculate(overrides) {\n    if (typeof overrides !== 'object') {\n      // Calculate colors form base colors\n      this.updateColors();\n      return;\n    }\n\n    const keys = Object.keys(overrides);\n\n    // Copy values from overrides, this is mainly for base colors\n    keys.forEach((k) => {\n      this[k] = overrides[k];\n    });\n\n    // Calculate colors form base colors\n    this.updateColors();\n    // Copy values from overrides again in case of an override of derived value\n    keys.forEach((k) => {\n      this[k] = overrides[k];\n    });\n  }\n}\n\nexport const getThemeVariables = (userOverrides) => {\n  const theme = new Theme();\n  theme.calculate(userOverrides);\n  return theme;\n};\n","import { invert, lighten, darken, rgba, adjust } from 'khroma';\nimport { mkBorder } from './theme-helpers';\nclass Theme {\n  constructor() {\n    this.background = '#333';\n    this.primaryColor = '#1f2020';\n    this.secondaryColor = lighten(this.primaryColor, 16);\n\n    this.tertiaryColor = adjust(this.primaryColor, { h: -160 });\n    this.primaryBorderColor = invert(this.background);\n    this.secondaryBorderColor = mkBorder(this.secondaryColor, this.darkMode);\n    this.tertiaryBorderColor = mkBorder(this.tertiaryColor, this.darkMode);\n    this.primaryTextColor = invert(this.primaryColor);\n    this.secondaryTextColor = invert(this.secondaryColor);\n    this.tertiaryTextColor = invert(this.tertiaryColor);\n    this.lineColor = invert(this.background);\n    this.textColor = invert(this.background);\n\n    this.mainBkg = '#1f2020';\n    this.secondBkg = 'calculated';\n    this.mainContrastColor = 'lightgrey';\n    this.darkTextColor = lighten(invert('#323D47'), 10);\n    this.lineColor = 'calculated';\n    this.border1 = '#81B1DB';\n    this.border2 = rgba(255, 255, 255, 0.25);\n    this.arrowheadColor = 'calculated';\n    this.fontFamily = '\"trebuchet ms\", verdana, arial, sans-serif';\n    this.fontSize = '16px';\n    this.labelBackground = '#181818';\n    this.textColor = '#ccc';\n    /* Flowchart variables */\n\n    this.nodeBkg = 'calculated';\n    this.nodeBorder = 'calculated';\n    this.clusterBkg = 'calculated';\n    this.clusterBorder = 'calculated';\n    this.defaultLinkColor = 'calculated';\n    this.titleColor = '#F9FFFE';\n    this.edgeLabelBackground = 'calculated';\n\n    /* Sequence Diagram variables */\n\n    this.actorBorder = 'calculated';\n    this.actorBkg = 'calculated';\n    this.actorTextColor = 'calculated';\n    this.actorLineColor = 'calculated';\n    this.signalColor = 'calculated';\n    this.signalTextColor = 'calculated';\n    this.labelBoxBkgColor = 'calculated';\n    this.labelBoxBorderColor = 'calculated';\n    this.labelTextColor = 'calculated';\n    this.loopTextColor = 'calculated';\n    this.noteBorderColor = 'calculated';\n    this.noteBkgColor = '#fff5ad';\n    this.noteTextColor = 'calculated';\n    this.activationBorderColor = 'calculated';\n    this.activationBkgColor = 'calculated';\n    this.sequenceNumberColor = 'black';\n\n    /* Gantt chart variables */\n\n    this.sectionBkgColor = darken('#EAE8D9', 30);\n    this.altSectionBkgColor = 'calculated';\n    this.sectionBkgColor2 = '#EAE8D9';\n    this.taskBorderColor = rgba(255, 255, 255, 70);\n    this.taskBkgColor = 'calculated';\n    this.taskTextColor = 'calculated';\n    this.taskTextLightColor = 'calculated';\n    this.taskTextOutsideColor = 'calculated';\n    this.taskTextClickableColor = '#003163';\n    this.activeTaskBorderColor = rgba(255, 255, 255, 50);\n    this.activeTaskBkgColor = '#81B1DB';\n    this.gridColor = 'calculated';\n    this.doneTaskBkgColor = 'calculated';\n    this.doneTaskBorderColor = 'grey';\n    this.critBorderColor = '#E83737';\n    this.critBkgColor = '#E83737';\n    this.taskTextDarkColor = 'calculated';\n    this.todayLineColor = '#DB5757';\n\n    /* state colors */\n    this.labelColor = 'calculated';\n\n    this.errorBkgColor = '#a44141';\n    this.errorTextColor = '#ddd';\n  }\n  updateColors() {\n    this.secondBkg = lighten(this.mainBkg, 16);\n    this.lineColor = this.mainContrastColor;\n    this.arrowheadColor = this.mainContrastColor;\n    /* Flowchart variables */\n\n    this.nodeBkg = this.mainBkg;\n    this.nodeBorder = this.border1;\n    this.clusterBkg = this.secondBkg;\n    this.clusterBorder = this.border2;\n    this.defaultLinkColor = this.lineColor;\n    this.edgeLabelBackground = lighten(this.labelBackground, 25);\n\n    /* Sequence Diagram variables */\n\n    this.actorBorder = this.border1;\n    this.actorBkg = this.mainBkg;\n    this.actorTextColor = this.mainContrastColor;\n    this.actorLineColor = this.mainContrastColor;\n    this.signalColor = this.mainContrastColor;\n    this.signalTextColor = this.mainContrastColor;\n    this.labelBoxBkgColor = this.actorBkg;\n    this.labelBoxBorderColor = this.actorBorder;\n    this.labelTextColor = this.mainContrastColor;\n    this.loopTextColor = this.mainContrastColor;\n    this.noteBorderColor = this.secondaryBorderColor;\n    this.noteBkgColor = this.secondBkg;\n    this.noteTextColor = this.secondaryTextColor;\n    this.activationBorderColor = this.border1;\n    this.activationBkgColor = this.secondBkg;\n\n    /* Gantt chart variables */\n\n    this.altSectionBkgColor = this.background;\n    this.taskBkgColor = lighten(this.mainBkg, 23);\n    this.taskTextColor = this.darkTextColor;\n    this.taskTextLightColor = this.mainContrastColor;\n    this.taskTextOutsideColor = this.taskTextLightColor;\n    this.gridColor = this.mainContrastColor;\n    this.doneTaskBkgColor = this.mainContrastColor;\n    this.taskTextDarkColor = this.darkTextColor;\n\n    /* state colors */\n    this.transitionColor = this.transitionColor || this.lineColor;\n    this.transitionLabelColor = this.transitionLabelColor || this.textColor;\n    this.stateLabelColor = this.stateLabelColor || this.stateBkg || this.primaryTextColor;\n    this.stateBkg = this.stateBkg || this.mainBkg;\n    this.labelBackgroundColor = this.labelBackgroundColor || this.stateBkg;\n    this.compositeBackground = this.compositeBackground || this.background || this.tertiaryColor;\n    this.altBackground = this.altBackground || '#555';\n    this.compositeTitleBackground = this.compositeTitleBackground || this.mainBkg;\n    this.compositeBorder = this.compositeBorder || this.nodeBorder;\n    this.innerEndBackground = this.primaryBorderColor;\n    this.specialStateColor = '#f4f4f4'; // this.lineColor;\n\n    this.errorBkgColor = this.errorBkgColor || this.tertiaryColor;\n    this.errorTextColor = this.errorTextColor || this.tertiaryTextColor;\n\n    this.fillType0 = this.primaryColor;\n    this.fillType1 = this.secondaryColor;\n    this.fillType2 = adjust(this.primaryColor, { h: 64 });\n    this.fillType3 = adjust(this.secondaryColor, { h: 64 });\n    this.fillType4 = adjust(this.primaryColor, { h: -64 });\n    this.fillType5 = adjust(this.secondaryColor, { h: -64 });\n    this.fillType6 = adjust(this.primaryColor, { h: 128 });\n    this.fillType7 = adjust(this.secondaryColor, { h: 128 });\n\n    /* pie */\n    this.pie1 = this.pie1 || '#0b0000';\n    this.pie2 = this.pie2 || '#4d1037';\n    this.pie3 = this.pie3 || '#3f5258';\n    this.pie4 = this.pie4 || '#4f2f1b';\n    this.pie5 = this.pie5 || '#6e0a0a';\n    this.pie6 = this.pie6 || '#3b0048';\n    this.pie7 = this.pie7 || '#995a01';\n    this.pie8 = this.pie8 || '#154706';\n    this.pie9 = this.pie9 || '#161722';\n    this.pie10 = this.pie10 || '#00296f';\n    this.pie11 = this.pie11 || '#01629c';\n    this.pie12 = this.pie12 || '#010029';\n    this.pieTitleTextSize = this.pieTitleTextSize || '25px';\n    this.pieTitleTextColor = this.pieTitleTextColor || this.taskTextDarkColor;\n    this.pieSectionTextSize = this.pieSectionTextSize || '17px';\n    this.pieSectionTextColor = this.pieSectionTextColor || this.textColor;\n    this.pieLegendTextSize = this.pieLegendTextSize || '17px';\n    this.pieLegendTextColor = this.pieLegendTextColor || this.taskTextDarkColor;\n    this.pieStrokeColor = this.pieStrokeColor || 'black';\n    this.pieStrokeWidth = this.pieStrokeWidth || '2px';\n    this.pieOpacity = this.pieOpacity || '0.7';\n\n    /* class */\n    this.classText = this.primaryTextColor;\n\n    /* requirement-diagram */\n    this.requirementBackground = this.requirementBackground || this.primaryColor;\n    this.requirementBorderColor = this.requirementBorderColor || this.primaryBorderColor;\n    this.requirementBorderSize = this.requirementBorderSize || this.primaryBorderColor;\n    this.requirementTextColor = this.requirementTextColor || this.primaryTextColor;\n    this.relationColor = this.relationColor || this.lineColor;\n    this.relationLabelBackground =\n      this.relationLabelBackground ||\n      (this.darkMode ? darken(this.secondaryColor, 30) : this.secondaryColor);\n    this.relationLabelColor = this.relationLabelColor || this.actorTextColor;\n\n    /* git */\n    this.git0 = lighten(this.secondaryColor, 20);\n    this.git1 = lighten(this.pie2 || this.secondaryColor, 20);\n    this.git2 = lighten(this.pie3 || this.tertiaryColor, 20);\n    this.git3 = lighten(this.pie4 || adjust(this.primaryColor, { h: -30 }), 20);\n    this.git4 = lighten(this.pie5 || adjust(this.primaryColor, { h: -60 }), 20);\n    this.git5 = lighten(this.pie6 || adjust(this.primaryColor, { h: -90 }), 10);\n    this.git6 = lighten(this.pie7 || adjust(this.primaryColor, { h: +60 }), 10);\n    this.git7 = lighten(this.pie8 || adjust(this.primaryColor, { h: +120 }), 20);\n    this.gitInv0 = this.gitInv0 || invert(this.git0);\n    this.gitInv1 = this.gitInv1 || invert(this.git1);\n    this.gitInv2 = this.gitInv2 || invert(this.git2);\n    this.gitInv3 = this.gitInv3 || invert(this.git3);\n    this.gitInv4 = this.gitInv4 || invert(this.git4);\n    this.gitInv5 = this.gitInv5 || invert(this.git5);\n    this.gitInv6 = this.gitInv6 || invert(this.git6);\n    this.gitInv7 = this.gitInv7 || invert(this.git7);\n\n    this.tagLabelColor = this.tagLabelColor || this.primaryTextColor;\n    this.tagLabelBackground = this.tagLabelBackground || this.primaryColor;\n    this.tagLabelBorder = this.tagBorder || this.primaryBorderColor;\n    this.commitLabelColor = this.commitLabelColor || this.secondaryTextColor;\n    this.commitLabelBackground = this.commitLabelBackground || this.secondaryColor;\n  }\n  calculate(overrides) {\n    if (typeof overrides !== 'object') {\n      // Calculate colors form base colors\n      this.updateColors();\n      return;\n    }\n\n    const keys = Object.keys(overrides);\n\n    // Copy values from overrides, this is mainly for base colors\n    keys.forEach((k) => {\n      this[k] = overrides[k];\n    });\n\n    // Calculate colors form base colors\n    this.updateColors();\n    // Copy values from overrides again in case of an override of derived value\n    keys.forEach((k) => {\n      this[k] = overrides[k];\n    });\n  }\n}\n\nexport const getThemeVariables = (userOverrides) => {\n  const theme = new Theme();\n  theme.calculate(userOverrides);\n  return theme;\n};\n","import { invert, lighten, rgba, adjust, darken } from 'khroma';\nimport { mkBorder } from './theme-helpers';\n\nclass Theme {\n  constructor() {\n    /* Base variables */\n    this.background = '#f4f4f4';\n    this.primaryColor = '#ECECFF';\n\n    this.secondaryColor = adjust(this.primaryColor, { h: 120 });\n    this.secondaryColor = '#ffffde';\n    this.tertiaryColor = adjust(this.primaryColor, { h: -160 });\n    this.primaryBorderColor = mkBorder(this.primaryColor, this.darkMode);\n    this.secondaryBorderColor = mkBorder(this.secondaryColor, this.darkMode);\n    this.tertiaryBorderColor = mkBorder(this.tertiaryColor, this.darkMode);\n    // this.noteBorderColor = mkBorder(this.noteBkgColor, this.darkMode);\n\n    this.primaryTextColor = invert(this.primaryColor);\n    this.secondaryTextColor = invert(this.secondaryColor);\n    this.tertiaryTextColor = invert(this.tertiaryColor);\n    this.lineColor = invert(this.background);\n    this.textColor = invert(this.background);\n\n    this.background = 'white';\n    this.mainBkg = '#ECECFF';\n    this.secondBkg = '#ffffde';\n    this.lineColor = '#333333';\n    this.border1 = '#9370DB';\n    this.border2 = '#aaaa33';\n    this.arrowheadColor = '#333333';\n    this.fontFamily = '\"trebuchet ms\", verdana, arial, sans-serif';\n    this.fontSize = '16px';\n    this.labelBackground = '#e8e8e8';\n    this.textColor = '#333';\n\n    /* Flowchart variables */\n\n    this.nodeBkg = 'calculated';\n    this.nodeBorder = 'calculated';\n    this.clusterBkg = 'calculated';\n    this.clusterBorder = 'calculated';\n    this.defaultLinkColor = 'calculated';\n    this.titleColor = 'calculated';\n    this.edgeLabelBackground = 'calculated';\n\n    /* Sequence Diagram variables */\n\n    this.actorBorder = 'calculated';\n    this.actorBkg = 'calculated';\n    this.actorTextColor = 'black';\n    this.actorLineColor = 'grey';\n    this.signalColor = 'calculated';\n    this.signalTextColor = 'calculated';\n    this.labelBoxBkgColor = 'calculated';\n    this.labelBoxBorderColor = 'calculated';\n    this.labelTextColor = 'calculated';\n    this.loopTextColor = 'calculated';\n    this.noteBorderColor = 'calculated';\n    this.noteBkgColor = '#fff5ad';\n    this.noteTextColor = 'calculated';\n    this.activationBorderColor = '#666';\n    this.activationBkgColor = '#f4f4f4';\n    this.sequenceNumberColor = 'white';\n\n    /* Gantt chart variables */\n\n    this.sectionBkgColor = 'calculated';\n    this.altSectionBkgColor = 'calculated';\n    this.sectionBkgColor2 = 'calculated';\n    this.excludeBkgColor = '#eeeeee';\n    this.taskBorderColor = 'calculated';\n    this.taskBkgColor = 'calculated';\n    this.taskTextLightColor = 'calculated';\n    this.taskTextColor = this.taskTextLightColor;\n    this.taskTextDarkColor = 'calculated';\n    this.taskTextOutsideColor = this.taskTextDarkColor;\n    this.taskTextClickableColor = 'calculated';\n    this.activeTaskBorderColor = 'calculated';\n    this.activeTaskBkgColor = 'calculated';\n    this.gridColor = 'calculated';\n    this.doneTaskBkgColor = 'calculated';\n    this.doneTaskBorderColor = 'calculated';\n    this.critBorderColor = 'calculated';\n    this.critBkgColor = 'calculated';\n    this.todayLineColor = 'calculated';\n\n    this.sectionBkgColor = rgba(102, 102, 255, 0.49);\n    this.altSectionBkgColor = 'white';\n    this.sectionBkgColor2 = '#fff400';\n    this.taskBorderColor = '#534fbc';\n    this.taskBkgColor = '#8a90dd';\n    this.taskTextLightColor = 'white';\n    this.taskTextColor = 'calculated';\n    this.taskTextDarkColor = 'black';\n    this.taskTextOutsideColor = 'calculated';\n    this.taskTextClickableColor = '#003163';\n    this.activeTaskBorderColor = '#534fbc';\n    this.activeTaskBkgColor = '#bfc7ff';\n    this.gridColor = 'lightgrey';\n    this.doneTaskBkgColor = 'lightgrey';\n    this.doneTaskBorderColor = 'grey';\n    this.critBorderColor = '#ff8888';\n    this.critBkgColor = 'red';\n    this.todayLineColor = 'red';\n\n    /* state colors */\n    this.labelColor = 'black';\n    this.errorBkgColor = '#552222';\n    this.errorTextColor = '#552222';\n    this.updateColors();\n  }\n  updateColors() {\n    /* Flowchart variables */\n\n    this.nodeBkg = this.mainBkg;\n    this.nodeBorder = this.border1; // border 1\n    this.clusterBkg = this.secondBkg;\n    this.clusterBorder = this.border2;\n    this.defaultLinkColor = this.lineColor;\n    this.titleColor = this.textColor;\n    this.edgeLabelBackground = this.labelBackground;\n\n    /* Sequence Diagram variables */\n\n    // this.actorBorder = lighten(this.border1, 0.5);\n    this.actorBorder = lighten(this.border1, 23);\n    this.actorBkg = this.mainBkg;\n    this.labelBoxBkgColor = this.actorBkg;\n    this.signalColor = this.textColor;\n    this.signalTextColor = this.textColor;\n    this.labelBoxBorderColor = this.actorBorder;\n    this.labelTextColor = this.actorTextColor;\n    this.loopTextColor = this.actorTextColor;\n    this.noteBorderColor = this.border2;\n    this.noteTextColor = this.actorTextColor;\n\n    /* Gantt chart variables */\n\n    this.taskTextColor = this.taskTextLightColor;\n    this.taskTextOutsideColor = this.taskTextDarkColor;\n\n    /* state colors */\n    this.transitionColor = this.transitionColor || this.lineColor;\n    this.transitionLabelColor = this.transitionLabelColor || this.textColor;\n    this.stateLabelColor = this.stateLabelColor || this.stateBkg || this.primaryTextColor;\n\n    this.stateBkg = this.stateBkg || this.mainBkg;\n    this.labelBackgroundColor = this.labelBackgroundColor || this.stateBkg;\n    this.compositeBackground = this.compositeBackground || this.background || this.tertiaryColor;\n    this.altBackground = this.altBackground || '#f0f0f0';\n    this.compositeTitleBackground = this.compositeTitleBackground || this.mainBkg;\n    this.compositeBorder = this.compositeBorder || this.nodeBorder;\n    this.innerEndBackground = this.nodeBorder;\n    this.specialStateColor = this.lineColor;\n\n    this.errorBkgColor = this.errorBkgColor || this.tertiaryColor;\n    this.errorTextColor = this.errorTextColor || this.tertiaryTextColor;\n    this.transitionColor = this.transitionColor || this.lineColor;\n    /* class */\n    this.classText = this.primaryTextColor;\n    /* journey */\n    this.fillType0 = this.primaryColor;\n    this.fillType1 = this.secondaryColor;\n    this.fillType2 = adjust(this.primaryColor, { h: 64 });\n    this.fillType3 = adjust(this.secondaryColor, { h: 64 });\n    this.fillType4 = adjust(this.primaryColor, { h: -64 });\n    this.fillType5 = adjust(this.secondaryColor, { h: -64 });\n    this.fillType6 = adjust(this.primaryColor, { h: 128 });\n    this.fillType7 = adjust(this.secondaryColor, { h: 128 });\n\n    /* pie */\n    this.pie1 = this.pie1 || this.primaryColor;\n    this.pie2 = this.pie2 || this.secondaryColor;\n    this.pie3 = this.pie3 || adjust(this.tertiaryColor, { l: -40 });\n    this.pie4 = this.pie4 || adjust(this.primaryColor, { l: -10 });\n    this.pie5 = this.pie5 || adjust(this.secondaryColor, { l: -30 });\n    this.pie6 = this.pie6 || adjust(this.tertiaryColor, { l: -20 });\n    this.pie7 = this.pie7 || adjust(this.primaryColor, { h: +60, l: -20 });\n    this.pie8 = this.pie8 || adjust(this.primaryColor, { h: -60, l: -40 });\n    this.pie9 = this.pie9 || adjust(this.primaryColor, { h: 120, l: -40 });\n    this.pie10 = this.pie10 || adjust(this.primaryColor, { h: +60, l: -40 });\n    this.pie11 = this.pie11 || adjust(this.primaryColor, { h: -90, l: -40 });\n    this.pie12 = this.pie12 || adjust(this.primaryColor, { h: 120, l: -30 });\n    this.pieTitleTextSize = this.pieTitleTextSize || '25px';\n    this.pieTitleTextColor = this.pieTitleTextColor || this.taskTextDarkColor;\n    this.pieSectionTextSize = this.pieSectionTextSize || '17px';\n    this.pieSectionTextColor = this.pieSectionTextColor || this.textColor;\n    this.pieLegendTextSize = this.pieLegendTextSize || '17px';\n    this.pieLegendTextColor = this.pieLegendTextColor || this.taskTextDarkColor;\n    this.pieStrokeColor = this.pieStrokeColor || 'black';\n    this.pieStrokeWidth = this.pieStrokeWidth || '2px';\n    this.pieOpacity = this.pieOpacity || '0.7';\n\n    /* requirement-diagram */\n    this.requirementBackground = this.requirementBackground || this.primaryColor;\n    this.requirementBorderColor = this.requirementBorderColor || this.primaryBorderColor;\n    this.requirementBorderSize = this.requirementBorderSize || this.primaryBorderColor;\n    this.requirementTextColor = this.requirementTextColor || this.primaryTextColor;\n    this.relationColor = this.relationColor || this.lineColor;\n    this.relationLabelBackground = this.relationLabelBackground || this.labelBackground;\n    this.relationLabelColor = this.relationLabelColor || this.actorTextColor;\n\n    /* git */\n    this.git0 = this.git0 || this.primaryColor;\n    this.git1 = this.git1 || this.secondaryColor;\n    this.git2 = this.git2 || this.tertiaryColor;\n    this.git3 = this.git3 || adjust(this.primaryColor, { h: -30 });\n    this.git4 = this.git4 || adjust(this.primaryColor, { h: -60 });\n    this.git5 = this.git5 || adjust(this.primaryColor, { h: -90 });\n    this.git6 = this.git6 || adjust(this.primaryColor, { h: +60 });\n    this.git7 = this.git7 || adjust(this.primaryColor, { h: +120 });\n    if (this.darkMode) {\n      this.git0 = lighten(this.git0, 25);\n      this.git1 = lighten(this.git1, 25);\n      this.git2 = lighten(this.git2, 25);\n      this.git3 = lighten(this.git3, 25);\n      this.git4 = lighten(this.git4, 25);\n      this.git5 = lighten(this.git5, 25);\n      this.git6 = lighten(this.git6, 25);\n      this.git7 = lighten(this.git7, 25);\n    } else {\n      this.git0 = darken(this.git0, 25);\n      this.git1 = darken(this.git1, 25);\n      this.git2 = darken(this.git2, 25);\n      this.git3 = darken(this.git3, 25);\n      this.git4 = darken(this.git4, 25);\n      this.git5 = darken(this.git5, 25);\n      this.git6 = darken(this.git6, 25);\n      this.git7 = darken(this.git7, 25);\n    }\n    this.gitInv0 = this.gitInv0 || darken(invert(this.git0), 25);\n    this.gitInv1 = this.gitInv1 || invert(this.git1);\n    this.gitInv2 = this.gitInv2 || invert(this.git2);\n    this.gitInv3 = this.gitInv3 || invert(this.git3);\n    this.gitInv4 = this.gitInv4 || invert(this.git4);\n    this.gitInv5 = this.gitInv5 || invert(this.git5);\n    this.gitInv6 = this.gitInv6 || invert(this.git6);\n    this.gitInv7 = this.gitInv7 || invert(this.git7);\n    this.gitBranchLabel0 = this.gitBranchLabel0 || invert(this.labelTextColor);\n    this.gitBranchLabel1 = this.gitBranchLabel1 || this.labelTextColor;\n    this.gitBranchLabel2 = this.gitBranchLabel2 || this.labelTextColor;\n    this.gitBranchLabel3 = this.gitBranchLabel3 || invert(this.labelTextColor);\n    this.gitBranchLabel4 = this.gitBranchLabel4 || this.labelTextColor;\n    this.gitBranchLabel5 = this.gitBranchLabel5 || this.labelTextColor;\n    this.gitBranchLabel6 = this.gitBranchLabel6 || this.labelTextColor;\n    this.gitBranchLabel7 = this.gitBranchLabel7 || this.labelTextColor;\n\n    this.tagLabelColor = this.tagLabelColor || this.primaryTextColor;\n    this.tagLabelBackground = this.tagLabelBackground || this.primaryColor;\n    this.tagLabelBorder = this.tagBorder || this.primaryBorderColor;\n    this.commitLabelColor = this.commitLabelColor || this.secondaryTextColor;\n    this.commitLabelBackground = this.commitLabelBackground || this.secondaryColor;\n  }\n  calculate(overrides) {\n    if (typeof overrides !== 'object') {\n      // Calculate colors form base colors\n      this.updateColors();\n      return;\n    }\n\n    const keys = Object.keys(overrides);\n\n    // Copy values from overrides, this is mainly for base colors\n    keys.forEach((k) => {\n      this[k] = overrides[k];\n    });\n\n    // Calculate colors form base colors\n    this.updateColors();\n    // Copy values from overrides again in case of an override of derived value\n    keys.forEach((k) => {\n      this[k] = overrides[k];\n    });\n  }\n}\n\nexport const getThemeVariables = (userOverrides) => {\n  const theme = new Theme();\n  theme.calculate(userOverrides);\n  return theme;\n};\n","import { darken, lighten, adjust, invert } from 'khroma';\nimport { mkBorder } from './theme-helpers';\nclass Theme {\n  constructor() {\n    /* Base vales */\n    this.background = '#f4f4f4';\n    this.primaryColor = '#cde498';\n    this.secondaryColor = '#cdffb2';\n    this.background = 'white';\n    this.mainBkg = '#cde498';\n    this.secondBkg = '#cdffb2';\n    this.lineColor = 'green';\n    this.border1 = '#13540c';\n    this.border2 = '#6eaa49';\n    this.arrowheadColor = 'green';\n    this.fontFamily = '\"trebuchet ms\", verdana, arial, sans-serif';\n    this.fontSize = '16px';\n\n    this.tertiaryColor = lighten('#cde498', 10);\n    this.primaryBorderColor = mkBorder(this.primaryColor, this.darkMode);\n    this.secondaryBorderColor = mkBorder(this.secondaryColor, this.darkMode);\n    this.tertiaryBorderColor = mkBorder(this.tertiaryColor, this.darkMode);\n    this.primaryTextColor = invert(this.primaryColor);\n    this.secondaryTextColor = invert(this.secondaryColor);\n    this.tertiaryTextColor = invert(this.primaryColor);\n    this.lineColor = invert(this.background);\n    this.textColor = invert(this.background);\n\n    /* Flowchart variables */\n    this.nodeBkg = 'calculated';\n    this.nodeBorder = 'calculated';\n    this.clusterBkg = 'calculated';\n    this.clusterBorder = 'calculated';\n    this.defaultLinkColor = 'calculated';\n    this.titleColor = '#333';\n    this.edgeLabelBackground = '#e8e8e8';\n\n    /* Sequence Diagram variables */\n\n    this.actorBorder = 'calculated';\n    this.actorBkg = 'calculated';\n    this.actorTextColor = 'black';\n    this.actorLineColor = 'grey';\n    this.signalColor = '#333';\n    this.signalTextColor = '#333';\n    this.labelBoxBkgColor = 'calculated';\n    this.labelBoxBorderColor = '#326932';\n    this.labelTextColor = 'calculated';\n    this.loopTextColor = 'calculated';\n    this.noteBorderColor = 'calculated';\n    this.noteBkgColor = '#fff5ad';\n    this.noteTextColor = 'calculated';\n    this.activationBorderColor = '#666';\n    this.activationBkgColor = '#f4f4f4';\n    this.sequenceNumberColor = 'white';\n\n    /* Gantt chart variables */\n\n    this.sectionBkgColor = '#6eaa49';\n    this.altSectionBkgColor = 'white';\n    this.sectionBkgColor2 = '#6eaa49';\n    this.excludeBkgColor = '#eeeeee';\n    this.taskBorderColor = 'calculated';\n    this.taskBkgColor = '#487e3a';\n    this.taskTextLightColor = 'white';\n    this.taskTextColor = 'calculated';\n    this.taskTextDarkColor = 'black';\n    this.taskTextOutsideColor = 'calculated';\n    this.taskTextClickableColor = '#003163';\n    this.activeTaskBorderColor = 'calculated';\n    this.activeTaskBkgColor = 'calculated';\n    this.gridColor = 'lightgrey';\n    this.doneTaskBkgColor = 'lightgrey';\n    this.doneTaskBorderColor = 'grey';\n    this.critBorderColor = '#ff8888';\n    this.critBkgColor = 'red';\n    this.todayLineColor = 'red';\n\n    /* state colors */\n    this.labelColor = 'black';\n\n    this.errorBkgColor = '#552222';\n    this.errorTextColor = '#552222';\n  }\n  updateColors() {\n    /* Flowchart variables */\n\n    this.nodeBkg = this.mainBkg;\n    this.nodeBorder = this.border1;\n    this.clusterBkg = this.secondBkg;\n    this.clusterBorder = this.border2;\n    this.defaultLinkColor = this.lineColor;\n\n    /* Sequence Diagram variables */\n\n    this.actorBorder = darken(this.mainBkg, 20);\n    this.actorBkg = this.mainBkg;\n    this.labelBoxBkgColor = this.actorBkg;\n    this.labelTextColor = this.actorTextColor;\n    this.loopTextColor = this.actorTextColor;\n    this.noteBorderColor = this.border2;\n    this.noteTextColor = this.actorTextColor;\n\n    /* Gantt chart variables */\n\n    this.taskBorderColor = this.border1;\n    this.taskTextColor = this.taskTextLightColor;\n    this.taskTextOutsideColor = this.taskTextDarkColor;\n    this.activeTaskBorderColor = this.taskBorderColor;\n    this.activeTaskBkgColor = this.mainBkg;\n\n    /* state colors */\n    this.transitionColor = this.transitionColor || this.lineColor;\n    this.transitionLabelColor = this.transitionLabelColor || this.textColor;\n    this.stateLabelColor = this.stateLabelColor || this.stateBkg || this.primaryTextColor;\n\n    this.stateBkg = this.stateBkg || this.mainBkg;\n    this.labelBackgroundColor = this.labelBackgroundColor || this.stateBkg;\n    this.compositeBackground = this.compositeBackground || this.background || this.tertiaryColor;\n    this.altBackground = this.altBackground || '#f0f0f0';\n    this.compositeTitleBackground = this.compositeTitleBackground || this.mainBkg;\n    this.compositeBorder = this.compositeBorder || this.nodeBorder;\n    this.innerEndBackground = this.primaryBorderColor;\n    this.specialStateColor = this.lineColor;\n\n    this.errorBkgColor = this.errorBkgColor || this.tertiaryColor;\n    this.errorTextColor = this.errorTextColor || this.tertiaryTextColor;\n    this.transitionColor = this.transitionColor || this.lineColor;\n    /* class */\n    this.classText = this.primaryTextColor;\n    /* journey */\n    this.fillType0 = this.primaryColor;\n    this.fillType1 = this.secondaryColor;\n    this.fillType2 = adjust(this.primaryColor, { h: 64 });\n    this.fillType3 = adjust(this.secondaryColor, { h: 64 });\n    this.fillType4 = adjust(this.primaryColor, { h: -64 });\n    this.fillType5 = adjust(this.secondaryColor, { h: -64 });\n    this.fillType6 = adjust(this.primaryColor, { h: 128 });\n    this.fillType7 = adjust(this.secondaryColor, { h: 128 });\n\n    /* pie */\n    this.pie1 = this.pie1 || this.primaryColor;\n    this.pie2 = this.pie2 || this.secondaryColor;\n    this.pie3 = this.pie3 || this.tertiaryColor;\n    this.pie4 = this.pie4 || adjust(this.primaryColor, { l: -30 });\n    this.pie5 = this.pie5 || adjust(this.secondaryColor, { l: -30 });\n    this.pie6 = this.pie6 || adjust(this.tertiaryColor, { h: +40, l: -40 });\n    this.pie7 = this.pie7 || adjust(this.primaryColor, { h: +60, l: -10 });\n    this.pie8 = this.pie8 || adjust(this.primaryColor, { h: -60, l: -10 });\n    this.pie9 = this.pie9 || adjust(this.primaryColor, { h: 120, l: 0 });\n    this.pie10 = this.pie10 || adjust(this.primaryColor, { h: +60, l: -50 });\n    this.pie11 = this.pie11 || adjust(this.primaryColor, { h: -60, l: -50 });\n    this.pie12 = this.pie12 || adjust(this.primaryColor, { h: 120, l: -50 });\n    this.pieTitleTextSize = this.pieTitleTextSize || '25px';\n    this.pieTitleTextColor = this.pieTitleTextColor || this.taskTextDarkColor;\n    this.pieSectionTextSize = this.pieSectionTextSize || '17px';\n    this.pieSectionTextColor = this.pieSectionTextColor || this.textColor;\n    this.pieLegendTextSize = this.pieLegendTextSize || '17px';\n    this.pieLegendTextColor = this.pieLegendTextColor || this.taskTextDarkColor;\n    this.pieStrokeColor = this.pieStrokeColor || 'black';\n    this.pieStrokeWidth = this.pieStrokeWidth || '2px';\n    this.pieOpacity = this.pieOpacity || '0.7';\n\n    /* requirement-diagram */\n    this.requirementBackground = this.requirementBackground || this.primaryColor;\n    this.requirementBorderColor = this.requirementBorderColor || this.primaryBorderColor;\n    this.requirementBorderSize = this.requirementBorderSize || this.primaryBorderColor;\n    this.requirementTextColor = this.requirementTextColor || this.primaryTextColor;\n    this.relationColor = this.relationColor || this.lineColor;\n    this.relationLabelBackground = this.relationLabelBackground || this.edgeLabelBackground;\n    this.relationLabelColor = this.relationLabelColor || this.actorTextColor;\n\n    /* git */\n    this.git0 = this.git0 || this.primaryColor;\n    this.git1 = this.git1 || this.secondaryColor;\n    this.git2 = this.git2 || this.tertiaryColor;\n    this.git3 = this.git3 || adjust(this.primaryColor, { h: -30 });\n    this.git4 = this.git4 || adjust(this.primaryColor, { h: -60 });\n    this.git5 = this.git5 || adjust(this.primaryColor, { h: -90 });\n    this.git6 = this.git6 || adjust(this.primaryColor, { h: +60 });\n    this.git7 = this.git7 || adjust(this.primaryColor, { h: +120 });\n    if (this.darkMode) {\n      this.git0 = lighten(this.git0, 25);\n      this.git1 = lighten(this.git1, 25);\n      this.git2 = lighten(this.git2, 25);\n      this.git3 = lighten(this.git3, 25);\n      this.git4 = lighten(this.git4, 25);\n      this.git5 = lighten(this.git5, 25);\n      this.git6 = lighten(this.git6, 25);\n      this.git7 = lighten(this.git7, 25);\n    } else {\n      this.git0 = darken(this.git0, 25);\n      this.git1 = darken(this.git1, 25);\n      this.git2 = darken(this.git2, 25);\n      this.git3 = darken(this.git3, 25);\n      this.git4 = darken(this.git4, 25);\n      this.git5 = darken(this.git5, 25);\n      this.git6 = darken(this.git6, 25);\n      this.git7 = darken(this.git7, 25);\n    }\n    this.gitInv0 = this.gitInv0 || invert(this.git0);\n    this.gitInv1 = this.gitInv1 || invert(this.git1);\n    this.gitInv2 = this.gitInv2 || invert(this.git2);\n    this.gitInv3 = this.gitInv3 || invert(this.git3);\n    this.gitInv4 = this.gitInv4 || invert(this.git4);\n    this.gitInv5 = this.gitInv5 || invert(this.git5);\n    this.gitInv6 = this.gitInv6 || invert(this.git6);\n    this.gitInv7 = this.gitInv7 || invert(this.git7);\n\n    this.tagLabelColor = this.tagLabelColor || this.primaryTextColor;\n    this.tagLabelBackground = this.tagLabelBackground || this.primaryColor;\n    this.tagLabelBorder = this.tagBorder || this.primaryBorderColor;\n    this.commitLabelColor = this.commitLabelColor || this.secondaryTextColor;\n    this.commitLabelBackground = this.commitLabelBackground || this.secondaryColor;\n  }\n  calculate(overrides) {\n    if (typeof overrides !== 'object') {\n      // Calculate colors form base colors\n      this.updateColors();\n      return;\n    }\n\n    const keys = Object.keys(overrides);\n\n    // Copy values from overrides, this is mainly for base colors\n    keys.forEach((k) => {\n      this[k] = overrides[k];\n    });\n\n    // Calculate colors form base colors\n    this.updateColors();\n    // Copy values from overrides again in case of an override of derived value\n    keys.forEach((k) => {\n      this[k] = overrides[k];\n    });\n  }\n}\n\nexport const getThemeVariables = (userOverrides) => {\n  const theme = new Theme();\n  theme.calculate(userOverrides);\n  return theme;\n};\n","import { adjust } from 'khroma';\r\n\r\nexport const mkBorder = (col, darkMode) =>\r\n  darkMode ? adjust(col, { s: -40, l: 10 }) : adjust(col, { s: -40, l: -10 });\r\n","import { invert, darken, lighten, adjust } from 'khroma';\nimport { mkBorder } from './theme-helpers';\n\n// const Color = require ( 'khroma/dist/color' ).default\n// Color.format.hex.stringify(Color.parse('hsl(210, 66.6666666667%, 95%)')); // => \"#EAF2FB\"\n\nclass Theme {\n  constructor() {\n    this.primaryColor = '#eee';\n    this.contrast = '#707070';\n    this.secondaryColor = lighten(this.contrast, 55);\n    this.background = '#ffffff';\n\n    // this.secondaryColor = adjust(this.primaryColor, { h: 120 });\n    this.tertiaryColor = adjust(this.primaryColor, { h: -160 });\n    this.primaryBorderColor = mkBorder(this.primaryColor, this.darkMode);\n    this.secondaryBorderColor = mkBorder(this.secondaryColor, this.darkMode);\n    this.tertiaryBorderColor = mkBorder(this.tertiaryColor, this.darkMode);\n    // this.noteBorderColor = mkBorder(this.noteBkgColor, this.darkMode);\n\n    this.primaryTextColor = invert(this.primaryColor);\n    this.secondaryTextColor = invert(this.secondaryColor);\n    this.tertiaryTextColor = invert(this.tertiaryColor);\n    this.lineColor = invert(this.background);\n    this.textColor = invert(this.background);\n\n    // this.altBackground = lighten(this.contrast, 55);\n    this.mainBkg = '#eee';\n    this.secondBkg = 'calculated';\n    this.lineColor = '#666';\n    this.border1 = '#999';\n    this.border2 = 'calculated';\n    this.note = '#ffa';\n    this.text = '#333';\n    this.critical = '#d42';\n    this.done = '#bbb';\n    this.arrowheadColor = '#333333';\n    this.fontFamily = '\"trebuchet ms\", verdana, arial, sans-serif';\n    this.fontSize = '16px';\n\n    /* Flowchart variables */\n\n    this.nodeBkg = 'calculated';\n    this.nodeBorder = 'calculated';\n    this.clusterBkg = 'calculated';\n    this.clusterBorder = 'calculated';\n    this.defaultLinkColor = 'calculated';\n    this.titleColor = 'calculated';\n    this.edgeLabelBackground = 'white';\n\n    /* Sequence Diagram variables */\n\n    this.actorBorder = 'calculated';\n    this.actorBkg = 'calculated';\n    this.actorTextColor = 'calculated';\n    this.actorLineColor = 'calculated';\n    this.signalColor = 'calculated';\n    this.signalTextColor = 'calculated';\n    this.labelBoxBkgColor = 'calculated';\n    this.labelBoxBorderColor = 'calculated';\n    this.labelTextColor = 'calculated';\n    this.loopTextColor = 'calculated';\n    this.noteBorderColor = 'calculated';\n    this.noteBkgColor = 'calculated';\n    this.noteTextColor = 'calculated';\n    this.activationBorderColor = '#666';\n    this.activationBkgColor = '#f4f4f4';\n    this.sequenceNumberColor = 'white';\n\n    /* Gantt chart variables */\n\n    this.sectionBkgColor = 'calculated';\n    this.altSectionBkgColor = 'white';\n    this.sectionBkgColor2 = 'calculated';\n    this.excludeBkgColor = '#eeeeee';\n    this.taskBorderColor = 'calculated';\n    this.taskBkgColor = 'calculated';\n    this.taskTextLightColor = 'white';\n    this.taskTextColor = 'calculated';\n    this.taskTextDarkColor = 'calculated';\n    this.taskTextOutsideColor = 'calculated';\n    this.taskTextClickableColor = '#003163';\n    this.activeTaskBorderColor = 'calculated';\n    this.activeTaskBkgColor = 'calculated';\n    this.gridColor = 'calculated';\n    this.doneTaskBkgColor = 'calculated';\n    this.doneTaskBorderColor = 'calculated';\n    this.critBkgColor = 'calculated';\n    this.critBorderColor = 'calculated';\n    this.todayLineColor = 'calculated';\n\n    /* state colors */\n    this.labelColor = 'black';\n\n    this.errorBkgColor = '#552222';\n    this.errorTextColor = '#552222';\n  }\n  updateColors() {\n    this.secondBkg = lighten(this.contrast, 55);\n    this.border2 = this.contrast;\n\n    /* Flowchart variables */\n\n    this.nodeBkg = this.mainBkg;\n    this.nodeBorder = this.border1;\n    this.clusterBkg = this.secondBkg;\n    this.clusterBorder = this.border2;\n    this.defaultLinkColor = this.lineColor;\n    this.titleColor = this.text;\n\n    /* Sequence Diagram variables */\n\n    this.actorBorder = lighten(this.border1, 23);\n    this.actorBkg = this.mainBkg;\n    this.actorTextColor = this.text;\n    this.actorLineColor = this.lineColor;\n    this.signalColor = this.text;\n    this.signalTextColor = this.text;\n    this.labelBoxBkgColor = this.actorBkg;\n    this.labelBoxBorderColor = this.actorBorder;\n    this.labelTextColor = this.text;\n    this.loopTextColor = this.text;\n    this.noteBorderColor = '#999';\n    this.noteBkgColor = '#666';\n    this.noteTextColor = '#fff';\n\n    /* Gantt chart variables */\n\n    this.sectionBkgColor = lighten(this.contrast, 30);\n    this.sectionBkgColor2 = lighten(this.contrast, 30);\n\n    this.taskBorderColor = darken(this.contrast, 10);\n\n    this.taskBkgColor = this.contrast;\n    this.taskTextColor = this.taskTextLightColor;\n    this.taskTextDarkColor = this.text;\n    this.taskTextOutsideColor = this.taskTextDarkColor;\n    this.activeTaskBorderColor = this.taskBorderColor;\n    this.activeTaskBkgColor = this.mainBkg;\n    this.gridColor = lighten(this.border1, 30);\n\n    this.doneTaskBkgColor = this.done;\n    this.doneTaskBorderColor = this.lineColor;\n    this.critBkgColor = this.critical;\n    this.critBorderColor = darken(this.critBkgColor, 10);\n\n    this.todayLineColor = this.critBkgColor;\n\n    /* state colors */\n    this.transitionColor = this.transitionColor || '#000';\n    this.transitionLabelColor = this.transitionLabelColor || this.textColor;\n    this.stateLabelColor = this.stateLabelColor || this.stateBkg || this.primaryTextColor;\n\n    this.stateBkg = this.stateBkg || this.mainBkg;\n    this.labelBackgroundColor = this.labelBackgroundColor || this.stateBkg;\n    this.compositeBackground = this.compositeBackground || this.background || this.tertiaryColor;\n    this.altBackground = this.altBackground || '#f4f4f4';\n    this.compositeTitleBackground = this.compositeTitleBackground || this.mainBkg;\n    this.stateBorder = this.stateBorder || '#000';\n    this.innerEndBackground = this.primaryBorderColor;\n    this.specialStateColor = '#222';\n\n    this.errorBkgColor = this.errorBkgColor || this.tertiaryColor;\n    this.errorTextColor = this.errorTextColor || this.tertiaryTextColor;\n\n    /* class */\n    this.classText = this.primaryTextColor;\n    /* journey */\n    this.fillType0 = this.primaryColor;\n    this.fillType1 = this.secondaryColor;\n    this.fillType2 = adjust(this.primaryColor, { h: 64 });\n    this.fillType3 = adjust(this.secondaryColor, { h: 64 });\n    this.fillType4 = adjust(this.primaryColor, { h: -64 });\n    this.fillType5 = adjust(this.secondaryColor, { h: -64 });\n    this.fillType6 = adjust(this.primaryColor, { h: 128 });\n    this.fillType7 = adjust(this.secondaryColor, { h: 128 });\n\n    // /* pie */\n    this.pie1 = this.pie1 || '#F4F4F4';\n    this.pie2 = this.pie2 || '#555';\n    this.pie3 = this.pie3 || '#BBB';\n    this.pie4 = this.pie4 || '#777';\n    this.pie5 = this.pie5 || '#999';\n    this.pie6 = this.pie6 || '#DDD';\n    this.pie7 = this.pie7 || '#FFF';\n    this.pie8 = this.pie8 || '#DDD';\n    this.pie9 = this.pie9 || '#BBB';\n    this.pie10 = this.pie10 || '#999';\n    this.pie11 = this.pie11 || '#777';\n    this.pie12 = this.pie12 || '#555';\n    this.pieTitleTextSize = this.pieTitleTextSize || '25px';\n    this.pieTitleTextColor = this.pieTitleTextColor || this.taskTextDarkColor;\n    this.pieSectionTextSize = this.pieSectionTextSize || '17px';\n    this.pieSectionTextColor = this.pieSectionTextColor || this.textColor;\n    this.pieLegendTextSize = this.pieLegendTextSize || '17px';\n    this.pieLegendTextColor = this.pieLegendTextColor || this.taskTextDarkColor;\n    this.pieStrokeColor = this.pieStrokeColor || 'black';\n    this.pieStrokeWidth = this.pieStrokeWidth || '2px';\n    this.pieOpacity = this.pieOpacity || '0.7';\n\n    // this.pie1 = this.pie1 || '#212529';\n    // this.pie2 = this.pie2 || '#343A40';\n    // this.pie3 = this.pie3 || '#495057';\n    // this.pie4 = this.pie4 || '#6C757D';\n    // this.pie5 = this.pie5 || adjust(this.secondaryColor, { l: -10 });\n    // this.pie6 = this.pie6 || adjust(this.tertiaryColor, { l: -10 });\n    // this.pie7 = this.pie7 || adjust(this.primaryColor, { h: +60, l: -10 });\n    // this.pie8 = this.pie8 || adjust(this.primaryColor, { h: -60, l: -10 });\n    // this.pie9 = this.pie9 || adjust(this.primaryColor, { h: 120, l: 0 });\n    // this.pie10 = this.pie10 || adjust(this.primaryColor, { h: +60, l: -20 });\n    // this.pie11 = this.pie11 || adjust(this.primaryColor, { h: -60, l: -20 });\n    // this.pie12 = this.pie12 || adjust(this.primaryColor, { h: 120, l: -10 });\n\n    /* requirement-diagram */\n    this.requirementBackground = this.requirementBackground || this.primaryColor;\n    this.requirementBorderColor = this.requirementBorderColor || this.primaryBorderColor;\n    this.requirementBorderSize = this.requirementBorderSize || this.primaryBorderColor;\n    this.requirementTextColor = this.requirementTextColor || this.primaryTextColor;\n    this.relationColor = this.relationColor || this.lineColor;\n    this.relationLabelBackground = this.relationLabelBackground || this.edgeLabelBackground;\n    this.relationLabelColor = this.relationLabelColor || this.actorTextColor;\n\n    /* git */\n    this.git0 = darken(this.pie1, 25) || this.primaryColor;\n    this.git1 = this.pie2 || this.secondaryColor;\n    this.git2 = this.pie3 || this.tertiaryColor;\n    this.git3 = this.pie4 || adjust(this.primaryColor, { h: -30 });\n    this.git4 = this.pie5 || adjust(this.primaryColor, { h: -60 });\n    this.git5 = this.pie6 || adjust(this.primaryColor, { h: -90 });\n    this.git6 = this.pie7 || adjust(this.primaryColor, { h: +60 });\n    this.git7 = this.pie8 || adjust(this.primaryColor, { h: +120 });\n\n    this.gitInv0 = this.gitInv0 || invert(this.git0);\n    this.gitInv1 = this.gitInv1 || invert(this.git1);\n    this.gitInv2 = this.gitInv2 || invert(this.git2);\n    this.gitInv3 = this.gitInv3 || invert(this.git3);\n    this.gitInv4 = this.gitInv4 || invert(this.git4);\n    this.gitInv5 = this.gitInv5 || invert(this.git5);\n    this.gitInv6 = this.gitInv6 || invert(this.git6);\n    this.gitInv7 = this.gitInv7 || invert(this.git7);\n\n    this.branchLabelColor = this.branchLabelColor || this.labelTextColor;\n    this.gitBranchLabel0 = this.branchLabelColor;\n    this.gitBranchLabel1 = 'white';\n    this.gitBranchLabel2 = this.branchLabelColor;\n    this.gitBranchLabel3 = 'white';\n    this.gitBranchLabel4 = this.branchLabelColor;\n    this.gitBranchLabel5 = this.branchLabelColor;\n    this.gitBranchLabel6 = this.branchLabelColor;\n    this.gitBranchLabel7 = this.branchLabelColor;\n\n    this.tagLabelColor = this.tagLabelColor || this.primaryTextColor;\n    this.tagLabelBackground = this.tagLabelBackground || this.primaryColor;\n    this.tagLabelBorder = this.tagBorder || this.primaryBorderColor;\n    this.commitLabelColor = this.commitLabelColor || this.secondaryTextColor;\n    this.commitLabelBackground = this.commitLabelBackground || this.secondaryColor;\n  }\n  calculate(overrides) {\n    if (typeof overrides !== 'object') {\n      // Calculate colors form base colors\n      this.updateColors();\n      return;\n    }\n\n    const keys = Object.keys(overrides);\n\n    // Copy values from overrides, this is mainly for base colors\n    keys.forEach((k) => {\n      this[k] = overrides[k];\n    });\n\n    // Calculate colors form base colors\n    this.updateColors();\n    // Copy values from overrides again in case of an override of derived value\n    keys.forEach((k) => {\n      this[k] = overrides[k];\n    });\n  }\n}\n\nexport const getThemeVariables = (userOverrides) => {\n  const theme = new Theme();\n  theme.calculate(userOverrides);\n  return theme;\n};\n","import { sanitizeUrl } from '@braintree/sanitize-url';\nimport {\n  curveBasis,\n  curveBasisClosed,\n  curveBasisOpen,\n  curveLinear,\n  curveLinearClosed,\n  curveMonotoneX,\n  curveMonotoneY,\n  curveNatural,\n  curveStep,\n  curveStepAfter,\n  curveStepBefore,\n  select,\n} from 'd3';\nimport common from './diagrams/common/common';\nimport { configKeys } from './defaultConfig';\nimport { log } from './logger';\n\n// Effectively an enum of the supported curve types, accessible by name\nconst d3CurveTypes = {\n  curveBasis: curveBasis,\n  curveBasisClosed: curveBasisClosed,\n  curveBasisOpen: curveBasisOpen,\n  curveLinear: curveLinear,\n  curveLinearClosed: curveLinearClosed,\n  curveMonotoneX: curveMonotoneX,\n  curveMonotoneY: curveMonotoneY,\n  curveNatural: curveNatural,\n  curveStep: curveStep,\n  curveStepAfter: curveStepAfter,\n  curveStepBefore: curveStepBefore,\n};\nconst directive =\n  /[%]{2}[{]\\s*(?:(?:(\\w+)\\s*:|(\\w+))\\s*(?:(?:(\\w+))|((?:(?![}][%]{2}).|\\r?\\n)*))?\\s*)(?:[}][%]{2})?/gi;\nconst directiveWithoutOpen =\n  /\\s*(?:(?:(\\w+)(?=:):|(\\w+))\\s*(?:(?:(\\w+))|((?:(?![}][%]{2}).|\\r?\\n)*))?\\s*)(?:[}][%]{2})?/gi;\nconst anyComment = /\\s*%%.*\\n/gm;\n\n/**\n * @function detectInit Detects the init config object from the text\n *\n *   ```mermaid\n *   %%{init: {\"theme\": \"debug\", \"logLevel\": 1 }}%%\n *   graph LR\n *    a-->b\n *    b-->c\n *    c-->d\n *    d-->e\n *    e-->f\n *    f-->g\n *    g-->h\n * ```\n *\n *   Or\n *\n *   ```mermaid\n *   %%{initialize: {\"theme\": \"dark\", logLevel: \"debug\" }}%%\n *   graph LR\n *    a-->b\n *    b-->c\n *    c-->d\n *    d-->e\n *    e-->f\n *    f-->g\n *    g-->h\n * ```\n * @param {string} text The text defining the graph\n * @param {any} cnf\n * @returns {object} The json object representing the init passed to mermaid.initialize()\n */\nexport const detectInit = function (text, cnf) {\n  let inits = detectDirective(text, /(?:init\\b)|(?:initialize\\b)/);\n  let results = {};\n\n  if (Array.isArray(inits)) {\n    let args = inits.map((init) => init.args);\n    directiveSanitizer(args);\n\n    results = assignWithDepth(results, [...args]);\n  } else {\n    results = inits.args;\n  }\n  if (results) {\n    let type = detectType(text, cnf);\n    ['config'].forEach((prop) => {\n      if (typeof results[prop] !== 'undefined') {\n        if (type === 'flowchart-v2') {\n          type = 'flowchart';\n        }\n        results[type] = results[prop];\n        delete results[prop];\n      }\n    });\n  }\n\n  // Todo: refactor this, these results are never used\n  return results;\n};\n\n/**\n * @function detectDirective Detects the directive from the text. Text can be single line or\n *   multiline. If type is null or omitted the first directive encountered in text will be returned\n *\n *   ```mermaid\n *   graph LR\n *    %%{somedirective}%%\n *    a-->b\n *    b-->c\n *    c-->d\n *    d-->e\n *    e-->f\n *    f-->g\n *    g-->h\n * ```\n * @param {string} text The text defining the graph\n * @param {string | RegExp} type The directive to return (default: null)\n * @returns {object | Array} An object or Array representing the directive(s): { type: string, args:\n *   object|null } matched by the input type if a single directive was found, that directive object\n *   will be returned.\n */\nexport const detectDirective = function (text, type = null) {\n  try {\n    const commentWithoutDirectives = new RegExp(\n      `[%]{2}(?![{]${directiveWithoutOpen.source})(?=[}][%]{2}).*\\n`,\n      'ig'\n    );\n    text = text.trim().replace(commentWithoutDirectives, '').replace(/'/gm, '\"');\n    log.debug(\n      `Detecting diagram directive${type !== null ? ' type:' + type : ''} based on the text:${text}`\n    );\n    let match,\n      result = [];\n    while ((match = directive.exec(text)) !== null) {\n      // This is necessary to avoid infinite loops with zero-width matches\n      if (match.index === directive.lastIndex) {\n        directive.lastIndex++;\n      }\n      if (\n        (match && !type) ||\n        (type && match[1] && match[1].match(type)) ||\n        (type && match[2] && match[2].match(type))\n      ) {\n        let type = match[1] ? match[1] : match[2];\n        let args = match[3] ? match[3].trim() : match[4] ? JSON.parse(match[4].trim()) : null;\n        result.push({ type, args });\n      }\n    }\n    if (result.length === 0) {\n      result.push({ type: text, args: null });\n    }\n\n    return result.length === 1 ? result[0] : result;\n  } catch (error) {\n    log.error(\n      `ERROR: ${error.message} - Unable to parse directive\n      ${type !== null ? ' type:' + type : ''} based on the text:${text}`\n    );\n    return { type: null, args: null };\n  }\n};\n\n/**\n * @function detectType Detects the type of the graph text. Takes into consideration the possible\n *   existence of an %%init directive\n *\n *   ```mermaid\n *   %%{initialize: {\"startOnLoad\": true, logLevel: \"fatal\" }}%%\n *   graph LR\n *    a-->b\n *    b-->c\n *    c-->d\n *    d-->e\n *    e-->f\n *    f-->g\n *    g-->h\n * ```\n * @param {string} text The text defining the graph\n * @param {{\n *   class: { defaultRenderer: string } | undefined;\n *   state: { defaultRenderer: string } | undefined;\n *   flowchart: { defaultRenderer: string } | undefined;\n * }} [cnf]\n * @returns {string} A graph definition key\n */\nexport const detectType = function (text, cnf) {\n  text = text.replace(directive, '').replace(anyComment, '\\n');\n  if (text.match(/^\\s*sequenceDiagram/)) {\n    return 'sequence';\n  }\n\n  if (text.match(/^\\s*gantt/)) {\n    return 'gantt';\n  }\n  if (text.match(/^\\s*classDiagram-v2/)) {\n    return 'classDiagram';\n  }\n  if (text.match(/^\\s*classDiagram/)) {\n    if (cnf && cnf.class && cnf.class.defaultRenderer === 'dagre-wrapper') return 'classDiagram';\n    return 'class';\n  }\n\n  if (text.match(/^\\s*stateDiagram-v2/)) {\n    return 'stateDiagram';\n  }\n\n  if (text.match(/^\\s*stateDiagram/)) {\n    if (cnf && cnf.class && cnf.state.defaultRenderer === 'dagre-wrapper') return 'stateDiagram';\n    return 'state';\n  }\n\n  if (text.match(/^\\s*gitGraph/)) {\n    return 'gitGraph';\n  }\n  if (text.match(/^\\s*flowchart/)) {\n    return 'flowchart-v2';\n  }\n\n  if (text.match(/^\\s*info/)) {\n    return 'info';\n  }\n  if (text.match(/^\\s*pie/)) {\n    return 'pie';\n  }\n\n  if (text.match(/^\\s*erDiagram/)) {\n    return 'er';\n  }\n\n  if (text.match(/^\\s*journey/)) {\n    return 'journey';\n  }\n\n  if (text.match(/^\\s*requirement/) || text.match(/^\\s*requirementDiagram/)) {\n    return 'requirement';\n  }\n  if (cnf && cnf.flowchart && cnf.flowchart.defaultRenderer === 'dagre-wrapper')\n    return 'flowchart-v2';\n\n  return 'flowchart';\n};\n\n/**\n * Caches results of functions based on input\n *\n * @param {Function} fn Function to run\n * @param {Function} resolver Function that resolves to an ID given arguments the `fn` takes\n * @returns {Function} An optimized caching function\n */\nconst memoize = (fn, resolver) => {\n  let cache = {};\n  return (...args) => {\n    let n = resolver ? resolver.apply(this, args) : args[0];\n    if (n in cache) {\n      return cache[n];\n    } else {\n      let result = fn(...args);\n      cache[n] = result;\n      return result;\n    }\n  };\n};\n\n/**\n * @function isSubstringInArray Detects whether a substring in present in a given array\n * @param {string} str The substring to detect\n * @param {Array} arr The array to search\n * @returns {number} The array index containing the substring or -1 if not present\n */\nexport const isSubstringInArray = function (str, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].match(str)) return i;\n  }\n  return -1;\n};\n\n/**\n * Returns a d3 curve given a curve name\n *\n * @param {string | undefined} interpolate The interpolation name\n * @param {any} defaultCurve The default curve to return\n * @returns {import('d3-shape').CurveFactory} The curve factory to use\n */\nexport const interpolateToCurve = (interpolate, defaultCurve) => {\n  if (!interpolate) {\n    return defaultCurve;\n  }\n  const curveName = `curve${interpolate.charAt(0).toUpperCase() + interpolate.slice(1)}`;\n  return d3CurveTypes[curveName] || defaultCurve;\n};\n\n/**\n * Formats a URL string\n *\n * @param {string} linkStr String of the URL\n * @param {{ securityLevel: string }} config Configuration passed to MermaidJS\n * @returns {string | undefined} The formatted URL\n */\nexport const formatUrl = (linkStr, config) => {\n  let url = linkStr.trim();\n\n  if (url) {\n    if (config.securityLevel !== 'loose') {\n      return sanitizeUrl(url);\n    }\n\n    return url;\n  }\n};\n\n/**\n * Runs a function\n *\n * @param {string} functionName A dot seperated path to the function relative to the `window`\n * @param {...any} params Parameters to pass to the function\n */\nexport const runFunc = (functionName, ...params) => {\n  const arrPaths = functionName.split('.');\n\n  const len = arrPaths.length - 1;\n  const fnName = arrPaths[len];\n\n  let obj = window;\n  for (let i = 0; i < len; i++) {\n    obj = obj[arrPaths[i]];\n    if (!obj) return;\n  }\n\n  obj[fnName](...params);\n};\n\n/**\n * @typedef {object} Point A (x, y) point\n * @property {number} x The x value\n * @property {number} y The y value\n */\n\n/**\n * Finds the distance between two points using the Distance Formula\n *\n * @param {Point} p1 The first point\n * @param {Point} p2 The second point\n * @returns {number} The distance\n */\nconst distance = (p1, p2) =>\n  p1 && p2 ? Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2)) : 0;\n\n/**\n * @param {Point[]} points List of points\n * @returns {Point}\n * @todo Give this a description\n */\nconst traverseEdge = (points) => {\n  let prevPoint;\n  let totalDistance = 0;\n\n  points.forEach((point) => {\n    totalDistance += distance(point, prevPoint);\n    prevPoint = point;\n  });\n\n  // Traverse half of total distance along points\n  let remainingDistance = totalDistance / 2;\n  let center = undefined;\n  prevPoint = undefined;\n  points.forEach((point) => {\n    if (prevPoint && !center) {\n      const vectorDistance = distance(point, prevPoint);\n      if (vectorDistance < remainingDistance) {\n        remainingDistance -= vectorDistance;\n      } else {\n        // The point is remainingDistance from prevPoint in the vector between prevPoint and point\n        // Calculate the coordinates\n        const distanceRatio = remainingDistance / vectorDistance;\n        if (distanceRatio <= 0) center = prevPoint;\n        if (distanceRatio >= 1) center = { x: point.x, y: point.y };\n        if (distanceRatio > 0 && distanceRatio < 1) {\n          center = {\n            x: (1 - distanceRatio) * prevPoint.x + distanceRatio * point.x,\n            y: (1 - distanceRatio) * prevPoint.y + distanceRatio * point.y,\n          };\n        }\n      }\n    }\n    prevPoint = point;\n  });\n  return center;\n};\n\n/**\n * Alias for `traverseEdge`\n *\n * @param {Point[]} points List of points\n * @returns {Point} Return result of `transverseEdge`\n */\nconst calcLabelPosition = (points) => {\n  return traverseEdge(points);\n};\n\nconst calcCardinalityPosition = (isRelationTypePresent, points, initialPosition) => {\n  let prevPoint;\n  let totalDistance = 0; // eslint-disable-line\n  log.info('our points', points);\n  if (points[0] !== initialPosition) {\n    points = points.reverse();\n  }\n  points.forEach((point) => {\n    totalDistance += distance(point, prevPoint);\n    prevPoint = point;\n  });\n\n  // Traverse only 25 total distance along points to find cardinality point\n  const distanceToCardinalityPoint = 25;\n\n  let remainingDistance = distanceToCardinalityPoint;\n  let center;\n  prevPoint = undefined;\n  points.forEach((point) => {\n    if (prevPoint && !center) {\n      const vectorDistance = distance(point, prevPoint);\n      if (vectorDistance < remainingDistance) {\n        remainingDistance -= vectorDistance;\n      } else {\n        // The point is remainingDistance from prevPoint in the vector between prevPoint and point\n        // Calculate the coordinates\n        const distanceRatio = remainingDistance / vectorDistance;\n        if (distanceRatio <= 0) center = prevPoint;\n        if (distanceRatio >= 1) center = { x: point.x, y: point.y };\n        if (distanceRatio > 0 && distanceRatio < 1) {\n          center = {\n            x: (1 - distanceRatio) * prevPoint.x + distanceRatio * point.x,\n            y: (1 - distanceRatio) * prevPoint.y + distanceRatio * point.y,\n          };\n        }\n      }\n    }\n    prevPoint = point;\n  });\n  // if relation is present (Arrows will be added), change cardinality point off-set distance (d)\n  let d = isRelationTypePresent ? 10 : 5;\n  //Calculate Angle for x and y axis\n  let angle = Math.atan2(points[0].y - center.y, points[0].x - center.x);\n  let cardinalityPosition = { x: 0, y: 0 };\n  //Calculation cardinality position using angle, center point on the line/curve but pendicular and with offset-distance\n  cardinalityPosition.x = Math.sin(angle) * d + (points[0].x + center.x) / 2;\n  cardinalityPosition.y = -Math.cos(angle) * d + (points[0].y + center.y) / 2;\n  return cardinalityPosition;\n};\n\n/**\n * Position ['start_left', 'start_right', 'end_left', 'end_right']\n *\n * @param {any} terminalMarkerSize\n * @param {any} position\n * @param {any} _points\n * @returns {any}\n */\nconst calcTerminalLabelPosition = (terminalMarkerSize, position, _points) => {\n  // Todo looking to faster cloning method\n  let points = JSON.parse(JSON.stringify(_points));\n  let prevPoint;\n  let totalDistance = 0; // eslint-disable-line\n  log.info('our points', points);\n  if (position !== 'start_left' && position !== 'start_right') {\n    points = points.reverse();\n  }\n\n  points.forEach((point) => {\n    totalDistance += distance(point, prevPoint);\n    prevPoint = point;\n  });\n\n  // Traverse only 25 total distance along points to find cardinality point\n  const distanceToCardinalityPoint = 25 + terminalMarkerSize;\n\n  let remainingDistance = distanceToCardinalityPoint;\n  let center;\n  prevPoint = undefined;\n  points.forEach((point) => {\n    if (prevPoint && !center) {\n      const vectorDistance = distance(point, prevPoint);\n      if (vectorDistance < remainingDistance) {\n        remainingDistance -= vectorDistance;\n      } else {\n        // The point is remainingDistance from prevPoint in the vector between prevPoint and point\n        // Calculate the coordinates\n        const distanceRatio = remainingDistance / vectorDistance;\n        if (distanceRatio <= 0) center = prevPoint;\n        if (distanceRatio >= 1) center = { x: point.x, y: point.y };\n        if (distanceRatio > 0 && distanceRatio < 1) {\n          center = {\n            x: (1 - distanceRatio) * prevPoint.x + distanceRatio * point.x,\n            y: (1 - distanceRatio) * prevPoint.y + distanceRatio * point.y,\n          };\n        }\n      }\n    }\n    prevPoint = point;\n  });\n  // if relation is present (Arrows will be added), change cardinality point off-set distance (d)\n  let d = 10 + terminalMarkerSize * 0.5;\n  //Calculate Angle for x and y axis\n  let angle = Math.atan2(points[0].y - center.y, points[0].x - center.x);\n\n  let cardinalityPosition = { x: 0, y: 0 };\n\n  //Calculation cardinality position using angle, center point on the line/curve but pendicular and with offset-distance\n\n  cardinalityPosition.x = Math.sin(angle) * d + (points[0].x + center.x) / 2;\n  cardinalityPosition.y = -Math.cos(angle) * d + (points[0].y + center.y) / 2;\n  if (position === 'start_left') {\n    cardinalityPosition.x = Math.sin(angle + Math.PI) * d + (points[0].x + center.x) / 2;\n    cardinalityPosition.y = -Math.cos(angle + Math.PI) * d + (points[0].y + center.y) / 2;\n  }\n  if (position === 'end_right') {\n    cardinalityPosition.x = Math.sin(angle - Math.PI) * d + (points[0].x + center.x) / 2 - 5;\n    cardinalityPosition.y = -Math.cos(angle - Math.PI) * d + (points[0].y + center.y) / 2 - 5;\n  }\n  if (position === 'end_left') {\n    cardinalityPosition.x = Math.sin(angle) * d + (points[0].x + center.x) / 2 - 5;\n    cardinalityPosition.y = -Math.cos(angle) * d + (points[0].y + center.y) / 2 - 5;\n  }\n  return cardinalityPosition;\n};\n\n/**\n * Gets styles from an array of declarations\n *\n * @param {string[]} arr Declarations\n * @returns {{ style: string; labelStyle: string }} The styles grouped as strings\n */\nexport const getStylesFromArray = (arr) => {\n  let style = '';\n  let labelStyle = '';\n\n  for (let i = 0; i < arr.length; i++) {\n    if (typeof arr[i] !== 'undefined') {\n      // add text properties to label style definition\n      if (arr[i].startsWith('color:') || arr[i].startsWith('text-align:')) {\n        labelStyle = labelStyle + arr[i] + ';';\n      } else {\n        style = style + arr[i] + ';';\n      }\n    }\n  }\n\n  return { style: style, labelStyle: labelStyle };\n};\n\nlet cnt = 0;\nexport const generateId = () => {\n  cnt++;\n  return 'id-' + Math.random().toString(36).substr(2, 12) + '-' + cnt;\n};\n\n/**\n * @param {any} length\n * @returns {any}\n */\nfunction makeid(length) {\n  var result = '';\n  var characters = '0123456789abcdef';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nexport const random = (options) => {\n  return makeid(options.length);\n};\n\n/**\n * @function assignWithDepth Extends the functionality of {@link ObjectConstructor.assign} with the\n *   ability to merge arbitrary-depth objects For each key in src with path `k` (recursively)\n *   performs an Object.assign(dst[`k`], src[`k`]) with a slight change from the typical handling of\n *   undefined for dst[`k`]: instead of raising an error, dst[`k`] is auto-initialized to {} and\n *   effectively merged with src[`k`]<p> Additionally, dissimilar types will not clobber unless the\n *   config.clobber parameter === true. Example:\n *\n *   ```js\n *   let config_0 = { foo: { bar: 'bar' }, bar: 'foo' };\n *   let config_1 = { foo: 'foo', bar: 'bar' };\n *   let result = assignWithDepth(config_0, config_1);\n *   console.log(result);\n *   //-> result: { foo: { bar: 'bar' }, bar: 'bar' }\n *   ```\n *\n *   Traditional Object.assign would have clobbered foo in config_0 with foo in config_1. If src is a\n *   destructured array of objects and dst is not an array, assignWithDepth will apply each element\n *   of src to dst in order.\n * @param dst\n * @param src\n * @param config\n * @param dst\n * @param src\n * @param config\n * @param dst\n * @param src\n * @param config\n * @param {any} dst - The destination of the merge\n * @param {any} src - The source object(s) to merge into destination\n * @param {{ depth: number; clobber: boolean }} [config={ depth: 2, clobber: false }] - Depth: depth\n *   to traverse within src and dst for merging - clobber: should dissimilar types clobber (default:\n *   { depth: 2, clobber: false }). Default is `{ depth: 2, clobber: false }`\n * @returns {any}\n */\nexport const assignWithDepth = function (dst, src, config) {\n  const { depth, clobber } = Object.assign({ depth: 2, clobber: false }, config);\n  if (Array.isArray(src) && !Array.isArray(dst)) {\n    src.forEach((s) => assignWithDepth(dst, s, config));\n    return dst;\n  } else if (Array.isArray(src) && Array.isArray(dst)) {\n    src.forEach((s) => {\n      if (dst.indexOf(s) === -1) {\n        dst.push(s);\n      }\n    });\n    return dst;\n  }\n  if (typeof dst === 'undefined' || depth <= 0) {\n    if (dst !== undefined && dst !== null && typeof dst === 'object' && typeof src === 'object') {\n      return Object.assign(dst, src);\n    } else {\n      return src;\n    }\n  }\n  if (typeof src !== 'undefined' && typeof dst === 'object' && typeof src === 'object') {\n    Object.keys(src).forEach((key) => {\n      if (\n        typeof src[key] === 'object' &&\n        (dst[key] === undefined || typeof dst[key] === 'object')\n      ) {\n        if (dst[key] === undefined) {\n          dst[key] = Array.isArray(src[key]) ? [] : {};\n        }\n        dst[key] = assignWithDepth(dst[key], src[key], { depth: depth - 1, clobber });\n      } else if (clobber || (typeof dst[key] !== 'object' && typeof src[key] !== 'object')) {\n        dst[key] = src[key];\n      }\n    });\n  }\n  return dst;\n};\n\nexport const getTextObj = function () {\n  return {\n    x: 0,\n    y: 0,\n    fill: undefined,\n    anchor: 'start',\n    style: '#666',\n    width: 100,\n    height: 100,\n    textMargin: 0,\n    rx: 0,\n    ry: 0,\n    valign: undefined,\n  };\n};\n\n/**\n * Adds text to an element\n *\n * @param {SVGElement} elem Element to add text to\n * @param {{\n *   text: string;\n *   x: number;\n *   y: number;\n *   anchor: 'start' | 'middle' | 'end';\n *   fontFamily: string;\n *   fontSize: string | number;\n *   fontWeight: string | number;\n *   fill: string;\n *   class: string | undefined;\n *   textMargin: number;\n * }} textData\n * @returns {SVGTextElement} Text element with given styling and content\n */\nexport const drawSimpleText = function (elem, textData) {\n  // Remove and ignore br:s\n  const nText = textData.text.replace(common.lineBreakRegex, ' ');\n\n  const textElem = elem.append('text');\n  textElem.attr('x', textData.x);\n  textElem.attr('y', textData.y);\n  textElem.style('text-anchor', textData.anchor);\n  textElem.style('font-family', textData.fontFamily);\n  textElem.style('font-size', textData.fontSize);\n  textElem.style('font-weight', textData.fontWeight);\n  textElem.attr('fill', textData.fill);\n  if (typeof textData.class !== 'undefined') {\n    textElem.attr('class', textData.class);\n  }\n\n  const span = textElem.append('tspan');\n  span.attr('x', textData.x + textData.textMargin * 2);\n  span.attr('fill', textData.fill);\n  span.text(nText);\n\n  return textElem;\n};\n\nexport const wrapLabel = memoize(\n  (label, maxWidth, config) => {\n    if (!label) {\n      return label;\n    }\n    config = Object.assign(\n      { fontSize: 12, fontWeight: 400, fontFamily: 'Arial', joinWith: '<br/>' },\n      config\n    );\n    if (common.lineBreakRegex.test(label)) {\n      return label;\n    }\n    const words = label.split(' ');\n    const completedLines = [];\n    let nextLine = '';\n    words.forEach((word, index) => {\n      const wordLength = calculateTextWidth(`${word} `, config);\n      const nextLineLength = calculateTextWidth(nextLine, config);\n      if (wordLength > maxWidth) {\n        const { hyphenatedStrings, remainingWord } = breakString(word, maxWidth, '-', config);\n        completedLines.push(nextLine, ...hyphenatedStrings);\n        nextLine = remainingWord;\n      } else if (nextLineLength + wordLength >= maxWidth) {\n        completedLines.push(nextLine);\n        nextLine = word;\n      } else {\n        nextLine = [nextLine, word].filter(Boolean).join(' ');\n      }\n      const currentWord = index + 1;\n      const isLastWord = currentWord === words.length;\n      if (isLastWord) {\n        completedLines.push(nextLine);\n      }\n    });\n    return completedLines.filter((line) => line !== '').join(config.joinWith);\n  },\n  (label, maxWidth, config) =>\n    `${label}-${maxWidth}-${config.fontSize}-${config.fontWeight}-${config.fontFamily}-${config.joinWith}`\n);\n\nconst breakString = memoize(\n  (word, maxWidth, hyphenCharacter = '-', config) => {\n    config = Object.assign(\n      { fontSize: 12, fontWeight: 400, fontFamily: 'Arial', margin: 0 },\n      config\n    );\n    const characters = word.split('');\n    const lines = [];\n    let currentLine = '';\n    characters.forEach((character, index) => {\n      const nextLine = `${currentLine}${character}`;\n      const lineWidth = calculateTextWidth(nextLine, config);\n      if (lineWidth >= maxWidth) {\n        const currentCharacter = index + 1;\n        const isLastLine = characters.length === currentCharacter;\n        const hyphenatedNextLine = `${nextLine}${hyphenCharacter}`;\n        lines.push(isLastLine ? nextLine : hyphenatedNextLine);\n        currentLine = '';\n      } else {\n        currentLine = nextLine;\n      }\n    });\n    return { hyphenatedStrings: lines, remainingWord: currentLine };\n  },\n  (word, maxWidth, hyphenCharacter = '-', config) =>\n    `${word}-${maxWidth}-${hyphenCharacter}-${config.fontSize}-${config.fontWeight}-${config.fontFamily}`\n);\n\n/**\n * This calculates the text's height, taking into account the wrap breaks and both the statically\n * configured height, width, and the length of the text (in pixels).\n *\n * If the wrapped text text has greater height, we extend the height, so it's value won't overflow.\n *\n * @param {any} text The text to measure\n * @param {any} config - The config for fontSize, fontFamily, and fontWeight all impacting the resulting size\n * @returns {any} - The height for the given text\n */\nexport const calculateTextHeight = function (text, config) {\n  config = Object.assign(\n    { fontSize: 12, fontWeight: 400, fontFamily: 'Arial', margin: 15 },\n    config\n  );\n  return calculateTextDimensions(text, config).height;\n};\n\n/**\n * This calculates the width of the given text, font size and family.\n *\n * @param {any} text - The text to calculate the width of\n * @param {any} config - The config for fontSize, fontFamily, and fontWeight all impacting the resulting size\n * @returns {any} - The width for the given text\n */\nexport const calculateTextWidth = function (text, config) {\n  config = Object.assign({ fontSize: 12, fontWeight: 400, fontFamily: 'Arial' }, config);\n  return calculateTextDimensions(text, config).width;\n};\n\n/**\n * This calculates the dimensions of the given text, font size, font family, font weight, and margins.\n *\n * @param {any} text - The text to calculate the width of\n * @param {any} config - The config for fontSize, fontFamily, fontWeight, and margin all impacting\n *   the resulting size\n * @returns - The width for the given text\n */\nexport const calculateTextDimensions = memoize(\n  function (text, config) {\n    config = Object.assign({ fontSize: 12, fontWeight: 400, fontFamily: 'Arial' }, config);\n    const { fontSize, fontFamily, fontWeight } = config;\n    if (!text) {\n      return { width: 0, height: 0 };\n    }\n\n    // We can't really know if the user supplied font family will render on the user agent;\n    // thus, we'll take the max width between the user supplied font family, and a default\n    // of sans-serif.\n    const fontFamilies = ['sans-serif', fontFamily];\n    const lines = text.split(common.lineBreakRegex);\n    let dims = [];\n\n    const body = select('body');\n    // We don't want to leak DOM elements - if a removal operation isn't available\n    // for any reason, do not continue.\n    if (!body.remove) {\n      return { width: 0, height: 0, lineHeight: 0 };\n    }\n\n    const g = body.append('svg');\n\n    for (let fontFamily of fontFamilies) {\n      let cheight = 0;\n      let dim = { width: 0, height: 0, lineHeight: 0 };\n      for (let line of lines) {\n        const textObj = getTextObj();\n        textObj.text = line;\n        const textElem = drawSimpleText(g, textObj)\n          .style('font-size', fontSize)\n          .style('font-weight', fontWeight)\n          .style('font-family', fontFamily);\n\n        let bBox = (textElem._groups || textElem)[0][0].getBBox();\n        dim.width = Math.round(Math.max(dim.width, bBox.width));\n        cheight = Math.round(bBox.height);\n        dim.height += cheight;\n        dim.lineHeight = Math.round(Math.max(dim.lineHeight, cheight));\n      }\n      dims.push(dim);\n    }\n\n    g.remove();\n\n    let index =\n      isNaN(dims[1].height) ||\n      isNaN(dims[1].width) ||\n      isNaN(dims[1].lineHeight) ||\n      (dims[0].height > dims[1].height &&\n        dims[0].width > dims[1].width &&\n        dims[0].lineHeight > dims[1].lineHeight)\n        ? 0\n        : 1;\n    return dims[index];\n  },\n  (text, config) => `${text}-${config.fontSize}-${config.fontWeight}-${config.fontFamily}`\n);\n\n/**\n * Applys d3 attributes\n *\n * @param {any} d3Elem D3 Element to apply the attributes onto\n * @param {[string, string][]} attrs Object.keys equivalent format of key to value mapping of attributes\n */\nconst d3Attrs = function (d3Elem, attrs) {\n  for (let attr of attrs) {\n    d3Elem.attr(attr[0], attr[1]);\n  }\n};\n\n/**\n * Gives attributes for an SVG's size given arguments\n *\n * @param {number} height The height of the SVG\n * @param {number} width The width of the SVG\n * @param {boolean} useMaxWidth Whether or not to use max-width and set width to 100%\n * @returns {Map<'height' | 'width' | 'style', string>} Attributes for the SVG\n */\nexport const calculateSvgSizeAttrs = function (height, width, useMaxWidth) {\n  let attrs = new Map();\n  attrs.set('height', height);\n  if (useMaxWidth) {\n    attrs.set('width', '100%');\n    attrs.set('style', `max-width: ${width}px;`);\n  } else {\n    attrs.set('width', width);\n  }\n  return attrs;\n};\n\n/**\n * Applies attributes from `calculateSvgSizeAttrs`\n *\n * @param {SVGSVGElement} svgElem The SVG Element to configure\n * @param {number} height The height of the SVG\n * @param {number} width The width of the SVG\n * @param {boolean} useMaxWidth Whether or not to use max-width and set width to 100%\n */\nexport const configureSvgSize = function (svgElem, height, width, useMaxWidth) {\n  const attrs = calculateSvgSizeAttrs(height, width, useMaxWidth);\n  d3Attrs(svgElem, attrs);\n};\n\nexport const initIdGeneratior = class iterator {\n  constructor(deterministic, seed) {\n    this.deterministic = deterministic;\n    this.seed = seed;\n\n    this.count = seed ? seed.length : 0;\n  }\n\n  next() {\n    if (!this.deterministic) return Date.now();\n\n    return this.count++;\n  }\n};\n\nlet decoder;\n\n/**\n * Decodes HTML, source: {@link https://github.com/shrpne/entity-decode/blob/v2.0.1/browser.js}\n *\n * @param {string} html HTML as a string\n * @returns Unescaped HTML\n */\nexport const entityDecode = function (html) {\n  decoder = decoder || document.createElement('div');\n  // Escape HTML before decoding for HTML Entities\n  html = escape(html).replace(/%26/g, '&').replace(/%23/g, '#').replace(/%3B/g, ';');\n  // decoding\n  decoder.innerHTML = html;\n  return unescape(decoder.textContent);\n};\n\n/**\n * Sanitizes directive objects\n *\n * @param {object} args Directive's JSON\n */\nexport const directiveSanitizer = (args) => {\n  log.debug('directiveSanitizer called with', args);\n  if (typeof args === 'object') {\n    // check for array\n    if (args.length) {\n      args.forEach((arg) => directiveSanitizer(arg));\n    } else {\n      // This is an object\n      Object.keys(args).forEach((key) => {\n        log.debug('Checking key', key);\n        if (key.indexOf('__') === 0) {\n          log.debug('sanitize deleting __ option', key);\n          delete args[key];\n        }\n\n        if (key.indexOf('proto') >= 0) {\n          log.debug('sanitize deleting proto option', key);\n          delete args[key];\n        }\n\n        if (key.indexOf('constr') >= 0) {\n          log.debug('sanitize deleting constr option', key);\n          delete args[key];\n        }\n\n        if (key.indexOf('themeCSS') >= 0) {\n          log.debug('sanitizing themeCss option');\n          args[key] = sanitizeCss(args[key]);\n        }\n        if (configKeys.indexOf(key) < 0) {\n          log.debug('sanitize deleting option', key);\n          delete args[key];\n        } else {\n          if (typeof args[key] === 'object') {\n            log.debug('sanitize deleting object', key);\n            directiveSanitizer(args[key]);\n          }\n        }\n      });\n    }\n  }\n};\nexport const sanitizeCss = (str) => {\n  const stringsearch = 'o';\n  const startCnt = (str.match(/\\{/g) || []).length;\n  const endCnt = (str.match(/\\}/g) || []).length;\n  if (startCnt !== endCnt) {\n    return '{ /* ERROR: Unbalanced CSS */ }';\n  }\n  // Todo add more checks here\n  return str;\n};\n\nexport default {\n  assignWithDepth,\n  wrapLabel,\n  calculateTextHeight,\n  calculateTextWidth,\n  calculateTextDimensions,\n  calculateSvgSizeAttrs,\n  configureSvgSize,\n  detectInit,\n  detectDirective,\n  detectType,\n  isSubstringInArray,\n  interpolateToCurve,\n  calcLabelPosition,\n  calcCardinalityPosition,\n  calcTerminalLabelPosition,\n  formatUrl,\n  getStylesFromArray,\n  generateId,\n  random,\n  memoize,\n  runFunc,\n  entityDecode,\n  initIdGeneratior,\n  directiveSanitizer,\n  sanitizeCss,\n};\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","module.exports = require(\"@braintree/sanitize-url\");","module.exports = require(\"d3\");","module.exports = require(\"dagre\");","module.exports = require(\"dagre-d3\");","module.exports = require(\"dagre-d3/lib/label/add-html-label.js\");","module.exports = require(\"dompurify\");","module.exports = require(\"graphlib\");","module.exports = require(\"khroma\");","module.exports = require(\"moment-mini\");","module.exports = require(\"stylis\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\nvar __webpack_exports__ = __webpack_require__(__webpack_require__.s = \"./src/mermaid.js\");\n"],"names":["factory","parser","o","v","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$0","$$","length","parseDirective","addRelation","setTitle","this","$","setAccDescription","addClass","setCssClass","addMembers","addMember","relation","relationTitle1","relationTitle2","id1","id2","type1","type2","lineType","setClickEvent","setTooltip","setLink","table","defaultActions","parseError","error","parse","input","sharedState","lexer","lstack","token","tstack","p","len","newState","expected","state","action","symbol","errStr","text","line","loc","stack","vstack","preErrorSymbol","yyloc","recovering","yyval","first_line","last_line","first_column","last_column","r","concat","args","EOF","setInput","unput","oldLines","lines","more","reject","less","pastInput","upcomingInput","next","showPosition","test_match","backup","yylloc","match","matches","matched","offset","_more","_input","conditionStack","done","tempMatch","index","i","rules","lex","begin","popState","_currentRules","topState","n","pushState","stateStackSize","options","conditions","Parser","prototype","exports","apply","arguments","main","console","process","__webpack_require__","module","attributeType","attributeName","attributeKeyType","attributeComment","cardA","relType","cardB","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","$V11","$V21","$V31","$V41","$V51","$V61","$V71","$V81","$V91","$Va1","$Vb1","$Vc1","$Vd1","$Ve1","$Vf1","$Vg1","$Vh1","$Vi1","$Vj1","$Vk1","$Vl1","$Vm1","$Vn1","$Vo1","$Vp1","$Vq1","$Vr1","$Vs1","$Vt1","$Vu1","$Vv1","$Vw1","$Vx1","$Vy1","$Vz1","$VA1","$VB1","$VC1","$VD1","$VE1","$VF1","$VG1","$VH1","stmt","nodes","setClass","addVertex","inf","destructLink","updateLink","updateLinkInterpolate","value","setDateFormat","substr","enableInclusiveEndDates","TopAxis","setAxisFormat","setExcludes","setIncludes","setTodayMarker","addSection","addTask","setDirection","checkout","branch","merge","commit","setShowData","setPieTitle","yy_","type","sequenceIndex","sequenceIndexStep","sequenceVisible","signalType","actor","setDiagramTitle","substring","loopText","color","optText","altText","parText","placement","from","to","msg","parseMessage","trim","id","description","state1","state2","doc","note","position","addSVGAccessibilityFields","yy_parser","svg","insert","title_string","getTitle","getAccDescription","attr","title","sanitizeText","txt","_sanitizeText","getConfig","clear","replace","configFromInitialize","defaultConfig","Object","freeze","config","siteConfig","assignWithDepth","directives","currentConfig","updateCurrentConfig","siteCfg","_directives","cfg","sumOfDirectives","d","sanitize","theme","tmpConfigFromInitialize","themeVariables","getThemeVariables","setSiteConfig","conf","saveConfigFromInitilize","updateSiteConfig","getSiteConfig","setConfig","keys","secure","forEach","key","log","indexOf","_typeof","addDirective","directive","fontFamily","push","reset","shapes","rect","parent","node","shapeSvg","class","label","appendChild","createLabel","labelText","labelStyle","undefined","bbox","getBBox","evaluate","flowchart","htmlLabels","div","children","dv","select","getBoundingClientRect","width","height","padding","halfPadding","diff","JSON","stringify","style","rx","ry","x","y","rectBox","intersect","point","intersectRect","roundedWithTitle","classes","innerRect","append","noteGroup","divider","clusterElems","insertCluster","elem","shape","getClusterTitleWidth","removeChild","positionCluster","_vertexText","isTitle","isNode","vertexText","vertexNode","dom","styleFn","fo","document","createElementNS","labelClass","html","addHtmlLabel","s","svgLabel","setAttribute","rows","split","Array","isArray","j","tspan","setAttributeNS","textContent","edgeLabels","terminalLabels","insertEdgeLabel","edge","labelElement","edgeLabel","startLabelLeft","startLabelElement","startEdgeLabelLeft","inner","slBox","startLeft","setTerminalWidth","startLabelRight","startEdgeLabelRight","startRight","endLabelLeft","endLabelElement","endEdgeLabelLeft","endLeft","endLabelRight","endEdgeLabelRight","endRight","positionEdgeLabel","paths","path","updatedPath","originalPath","el","pos","utils","arrowTypeStart","arrowTypeEnd","intersection","outsidePoint","insidePoint","dx","Math","abs","w","h","Q","R","q","res","_x","_y","cutPathAtIntersect","_points","boundryNode","points","lastPointOutside","isInside","dy","outsideNode","inter","pointPresent","find","e","insertEdge","clusterDb","diagramType","graph","pointsHasChanged","tail","head","slice","unshift","toCluster","fromCluster","reverse","curve","lineData","filter","Number","isNaN","curveBasis","strokeClasses","lineFunction","thickness","pattern","svgPath","url","arrowMarkerAbsolute","window","location","protocol","host","pathname","search","recursiveRender","_elem","diagramtype","parentCluster","graphlib","dir","rankdir","edges","clusters","edgePaths","data","clusterData","setNode","setParent","clusterNode","newEl","updateNodeBounds","setNodeElem","findNonClusterChild","insertNode","name","dagre","sortNodesByHierarchy","positionNode","render","markers","insertMarkers","clearNodes","clearEdges","clearClusters","clearGraphlib","adjustClustersAndEdges","circle","ellipse","polygon","intersectEllipse","cx","cy","px","py","det","sqrt","sameSign","r1","r2","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r3","r4","denom","num","polyPoints","x1","y1","intersections","minX","POSITIVE_INFINITY","minY","entry","min","left","top","intersectLine","sort","pdx","pdy","distp","qdx","qdy","distq","sx","sy","extension","composition","aggregation","dependency","cross","barb","markerArray","markerName","decendants","parents","isDecendant","ancenstorId","copy","clusterId","newGraph","rootId","edgeInCluster","setEdge","removeNode","extractDecendants","validate","_id","getAnchorId","externalConnections","depth","removeEdge","extractor","hasChildren","clusterGraph","multigraph","compound","setGraph","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","sorter","result","assign","sorted","forkJoin","domId","question","labelHelper","questionElem","insertPolygonShape","totalWidth","totalHeight","props","propKeys","Set","borders","strokeDashArray","addBorder","skipBorder","includes","join","applyNodePropertyBorders","delete","propKey","rectWithTitle","innerLine","text2","flat","textRows","titleBox","descr","choice","map","doublecircle","circleGroup","outerCircle","innerCircle","gap","stadium","hexagon","m","hex","rect_left_inv_arrow","lean_right","lean_left","trapezoid","inv_trapezoid","rect_right_inv_arrow","cylinder","start","end","subroutine","fork","class_box","topLine","bottomLine","maxWidth","maxHeight","labelContainer","verticalPos","hasInterface","classData","annotations","interfaceLabelText","interfaceLabel","interfaceBBox","classTitleString","classTitleLabel","classTitleBBox","classAttributes","members","str","parsedInfo","parseMember","parsedText","displayText","lbl","cssStyle","classMethods","methods","diffX","lineHeight","nodeElems","target","link","securityLevel","linkTarget","tooltip","haveCallback","_classes","decodeEntities","element","themeCSS","maxTextSize","darkMode","logLevel","startOnLoad","deterministicIds","deterministicIDSeed","diagramPadding","nodeSpacing","rankSpacing","useMaxWidth","defaultRenderer","sequence","hideUnusedParticipants","activationWidth","diagramMarginX","diagramMarginY","actorMargin","boxMargin","boxTextMargin","noteMargin","messageMargin","messageAlign","mirrorActors","forceMenus","bottomMarginAdj","rightAngles","showSequenceNumbers","actorFontSize","actorFontFamily","actorFontWeight","noteFontSize","noteFontFamily","noteFontWeight","noteAlign","messageFontSize","messageFontFamily","messageFontWeight","wrap","wrapPadding","labelBoxWidth","labelBoxHeight","messageFont","fontSize","fontWeight","noteFont","actorFont","gantt","titleTopMargin","barHeight","barGap","topPadding","rightPadding","leftPadding","gridLineStartPadding","sectionFontSize","numberSectionStyles","axisFormat","topAxis","useWidth","journey","leftMargin","taskFontSize","taskFontFamily","taskMargin","textPlacement","actorColours","sectionFills","sectionColours","dividerMargin","sizeUnit","textHeight","titleShift","forkWidth","forkHeight","miniPadding","fontSizeFactor","labelHeight","edgeLengthFactor","compositTitleSize","radius","er","layoutDirection","minEntityWidth","minEntityHeight","entityPadding","stroke","fill","pie","requirement","rect_fill","text_color","rect_border_size","rect_border_color","rect_min_width","rect_min_height","rect_padding","line_height","gitGraph","nodeLabel","mainBranchName","mainBranchOrder","showCommitLabel","showBranches","configKeys","keyify","obj","prefix","reduce","MERMAID_DOM_ID_PREFIX","relations","classCounter","funs","common","configApi","statement","context","mermaidAPI","splitClassNameAndType","genericType","className","classId","cssClasses","lookUpDomId","classKeys","setupToolTips","commonClear","getClass","getClasses","getRelations","addAnnotation","annotation","validatedClassName","member","theClass","memberString","startsWith","endsWith","cleanupLabel","ids","linkStr","functionName","functionArgs","setClickFunc","elemId","argList","item","charAt","querySelector","addEventListener","bindFunctions","fun","LINE","DOTTED_LINE","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","tooltipElem","_groups","selectAll","on","transition","duration","scrollX","right","scrollY","body","scrollTop","classed","direction","getDirection","classDb","addClasses","g","vertex","cssClassStr","styles","_shape","addRelations","cnt","edgeData","arrowhead","getArrowMarker","getStylesFromArray","interpolate","interpolateToCurve","curveLinear","defaultInterpolate","arrowheadStyle","labelpos","labelType","setConf","cnf","draw","sandboxElement","root","contentDocument","svgBounds","_label","configureSvgSize","labels","querySelectorAll","k","dim","insertBefore","firstChild","marker","idCache","getGraphId","foundEntry","entries","diagram","isMultiGraph","classDef","svgDraw","vBox","nodeBorder","classText","mainBkg","lineColor","edgeCount","drawEdge","getRelationType","p1_card_x","p1_card_y","p2_card_x","p2_card_y","labelPosition","cardinality_1_point","cardinality_2_point","bounds","drawClass","classInfo","isFirst","titleText2","classTitle","titleHeight","membersLine","addTspan","membersBox","methodsLine","method","classBox","rectWidth","childNodes","fieldMatch","methodMatch","buildFieldDisplay","buildMethodDisplay","buildLegacyDisplay","visibility","fieldType","parseGenericTypes","fieldName","classifier","parseClassifier","err","methodName","parameters","returnType","methodStart","methodEnd","firstChar","textEl","tSpan","cleanedText","getRows","breakToPlaceholder","removeEscapes","newStr","String","fromCharCode","parseInt","_","c","removeScript","rs","idx","decodedText","replaceAll","sanitizeMore","level","placeholderToBreak","DOMPurify","sanitizeTextOrArray","a","lineBreakRegex","hasBreaks","test","splitBreaks","val","getUrl","useAbsolute","entities","relationships","addEntity","attributes","Cardinality","ZERO_OR_ONE","ZERO_OR_MORE","ONE_OR_MORE","ONLY_ONE","Identification","NON_IDENTIFYING","IDENTIFYING","addAttributes","entityName","attribs","entity","getEntities","addRelationship","entA","rolA","entB","rSpec","rel","entityA","roleA","entityB","relSpec","getRelationships","ERMarkers","ONLY_ONE_START","ONLY_ONE_END","ZERO_OR_ONE_START","ZERO_OR_ONE_END","ONE_OR_MORE_START","ONE_OR_MORE_END","ZERO_OR_MORE_START","ZERO_OR_MORE_END","drawEntities","svgNode","firstOne","groupNode","textId","textNode","entityTextNode","heightPadding","widthPadding","attrFontSize","labelBBox","attributeNodes","hasKeyType","hasComment","maxTypeWidth","maxNameWidth","maxKeyWidth","maxCommentWidth","cumulativeHeight","attrNum","attrPrefix","nodeHeight","typeNode","nameNode","attributeNode","tn","nn","typeBBox","nameBBox","max","keyTypeNode","kn","keyTypeBBox","commentNode","cn","commentNodeBBox","widthPaddingFactor","bBox","spareColumnWidth","heightOffset","attribStyle","alignY","typeRect","nameXOffset","parseFloat","nameRect","keyTypeAndCommentXOffset","keyTypeRect","drawAttributes","entityWidth","entityHeight","rectBBox","getEdgeName","relCnt","erDb","erParser","erMarkers","directed","edgesep","firstEntity","relationship","addRelationships","getTotalLength","labelPoint","getPointAtLength","labelId","drawRelationshipFromLayout","tertiaryColor","dagreD3","addToRender","addToRenderV2","addShape","version","vertexCounter","vertices","subGraphs","subGraphLookup","tooltips","subCount","firstGraphFlag","veritceKeys","addSingleLink","_start","_end","linktext","addLink","positions","interp","defaultStyle","textStyles","newStyle2","getTooltip","setClickFun","getVertices","getEdges","ver","setGen","addSubGraph","list","_title","nodeList","prims","boolean","number","string","objs","hasOwnProperty","uniq","nl","subGraph","makeUniq","getPosForId","secCount","posCrossRef","indexNodes2","count","posCount","childPos","getDepthFirstPos","indexNodes","getSubGraphs","firstGraph","exists","allSgs","sg","allSubgraphs","_str","_startStr","startInfo","info","dots","char","countChar","destructEndLink","destructStartLink","addVertices","vert","svgId","classStr","parentNode","radious","flowDb","addEdges","defaultLabelStyle","linkIdCnt","defaultStyles","linkIdBase","linkId","linkNameStart","linkNameEnd","minlen","flow","subG","linkNode","_doc","Render","flowChartShapes","arrows","none","normal","clusterRects","clusterEl","xPos","baseVal","yPos","te","classList","add","nodeTextColor","textColor","titleColor","arrowheadColor","edgeLabelBackground","clusterBkg","clusterBorder","border2","lastTask","lastTaskID","dateFormat","todayMarker","excludes","links","sections","tasks","currentSection","tags","inclusiveEndDates","lastOrder","taskCnt","rawTasks","getAxisFormat","getTodayMarker","endDatesAreInclusive","enableTopAxis","topAxisEnabled","getDateFormat","toLowerCase","getIncludes","getExcludes","getLinks","getSections","getTasks","allItemsPricessed","compileTasks","iterationCount","isInvalidDate","date","format","isoWeekday","checkTaskDates","task","manualEndTime","startTime","moment","endTime","renderEndTime","fixTaskDates","toDate","invalid","getStartDate","prevTime","afterStatement","exec","latestEndingTask","findTaskById","dt","Date","setHours","mDate","isValid","durationToDate","durationStatement","relativeTime","getEndDate","inclusive","parseId","idStr","taskDb","rawTask","section","processed","raw","taskInfo","prevTaskId","dataStr","getTaskTags","startData","parseData","active","crit","milestone","order","addTaskOrg","newTask","prevTask","endTimeData","compileData","compileTask","allProcessed","_linkStr","sanitizeUrl","pushFun","open","callbackFunction","matchFound","t","regex","RegExp","shift","ganttDb","getElementById","parentElement","offsetWidth","taskArray","timeScale","scaleTime","domain","rangeRound","categories","catsUnfiltered","getCount","word","arr","getCounts","hash","call","checkUnique","b","taskA","taskB","pageWidth","pageHeight","scaleLinear","range","interpolateHcl","theGap","theTopPad","theSidePad","minTime","maxTime","excludeRanges","valueOf","clone","enter","renderEnd","toString","drawExcludeDays","bottomXAxis","axisBottom","tickSize","tickFormat","timeFormat","topXAxis","axisTop","makeGrid","theArray","theBarHeight","theColorScale","rectangles","secNum","taskClass","startX","endX","textWidth","taskType","each","taskRect","taskText","oldParent","Link","createElement","drawRects","colorScale","numOccurances","prevGap","vertLabels","todayG","today","todayLine","drawToday","makeGant","excludeBkgColor","sectionBkgColor","sectionBkgColor2","altSectionBkgColor","ganttFontSize","gridColor","todayLineColor","taskTextDarkColor","taskTextClickableColor","taskTextColor","taskBkgColor","taskBorderColor","taskTextOutsideColor","activeTaskBkgColor","activeTaskBorderColor","doneTaskBorderColor","doneTaskBkgColor","critBorderColor","critBkgColor","commits","branchesConfig","branches","curBranch","seq","getId","random","setOptions","rawOptString","message","getOptions","tag","commitType","NORMAL","Error","otherBranch","currentCommit","otherCommit","MERGE","upsert","newval","splice","prettyPrintCommitHistory","commitArr","out","newCommit","nextCommit","fn","recordMap","create","uniqBy","prettyPrint","getCommitsArray","mainBranch","getBranchesAsObjArray","values","branchConfig","getBranches","getCommits","getCurrentBranch","getHead","REVERSE","HIGHLIGHT","allCommitsDict","branchPos","commitPos","lanes","maxPos","drawCommits","modifyGraph","gitGraphConfig","gBullets","gLabels","typeClass","circle2","labelBkg","hole","tagBbox","h2","ly","findLane","y2","_depth","candidate","ok","drawArrow","commit1","commit2","allCommits","overlappingCommits","hasOverlappingCommits","lineDef","arc","arc2","colorClassNum","lineY","drawBranches","drawText","bkg","gitGraphParser","db","gArrows","drawArrows","commitLabelColor","commitLabelBackground","tagLabelColor","tagLabelBackground","tagLabelBorder","primaryColor","setMessage","getMessage","setInfo","getInfo","infoParser","showData","sanitizedText","getPieTitle","cleanupValue","toggle","getShowData","pieParser","pieData","legendRectSize","sum","myGeneratedColors","pie1","pie2","pie3","pie4","pie5","pie6","pie7","pie8","pie9","pie10","pie11","pie12","scaleOrdinal","dataReady","d3pie","arcGenerator","innerRadius","outerRadius","toFixed","centroid","legend","pieStrokeColor","pieStrokeWidth","pieOpacity","pieTitleTextSize","pieTitleTextColor","pieSectionTextColor","pieSectionTextSize","pieLegendTextColor","pieLegendTextSize","latestRequirement","requirements","latestElement","elements","RequirementType","REQUIREMENT","FUNCTIONAL_REQUIREMENT","INTERFACE_REQUIREMENT","PERFORMANCE_REQUIREMENT","PHYSICAL_REQUIREMENT","DESIGN_CONSTRAINT","RiskLevel","LOW_RISK","MED_RISK","HIGH_RISK","VerifyType","VERIFY_ANALYSIS","VERIFY_DEMONSTRATION","VERIFY_INSPECTION","VERIFY_TEST","Relationships","CONTAINS","COPIES","DERIVES","SATISFIES","VERIFIES","REFINES","TRACES","req","addRequirement","risk","verifyMethod","getRequirements","setNewReqId","setNewReqText","setNewReqRisk","setNewReqVerifyMethod","addElement","docRef","getElements","setNewElementType","setNewElementDocRef","src","dst","ReqMarkers","ARROW","insertLineEndings","containsNode","newRectNode","newTitleNode","txts","textStr","totalY","titleNode","newBodyNode","yStart","currentRow","wrappedTxts","currentTextLen","firstPart","lastStr","elementString","requirementDb","addEdgeLabel","drawReqs","reqs","reqName","rectNode","titleNodeInfo","bodyNode","drawElements","els","elName","relationColor","requirementBackground","requirementBorderColor","requirementBorderSize","requirementTextColor","relationLabelBackground","relationLabelColor","prevActor","actors","messages","notes","diagramTitle","sequenceNumbersEnabled","wrapEnabled","addActor","old","autoWrap","properties","actorCnt","rectData","nextActor","activationCount","part","LINETYPE","ACTIVE_START","ACTIVE_END","addMessage","idFrom","idTo","answer","addSignal","messageType","getMessages","getActors","getActor","getActorKeys","enableSequenceNumbers","disableSequenceNumbers","setWrap","wrapSetting","SOLID","DOTTED","NOTE","SOLID_CROSS","DOTTED_CROSS","SOLID_OPEN","DOTTED_OPEN","LOOP_START","LOOP_END","ALT_START","ALT_ELSE","ALT_END","OPT_START","OPT_END","PAR_START","PAR_AND","PAR_END","RECT_START","RECT_END","SOLID_POINT","DOTTED_POINT","AUTONUMBER","ARROWTYPE","FILLED","OPEN","PLACEMENT","LEFTOF","RIGHTOF","OVER","addNote","addLinks","actorId","insertLinks","addALink","sep","addProperties","insertProperties","addDetails","innerHTML","details","getActorProperty","getDiagramTitle","param","step","visible","sequenceDb","startx","stopx","starty","stopy","sequenceItems","activations","models","getHeight","loops","it","acc","actorModel","addLoop","loopModel","msgModel","noteModel","lastActor","lastLoop","lastMessage","lastNote","init","updateVal","updateBounds","_self","updateFn","_startx","_stopx","_starty","_stopy","newActivation","actorRect","stackedSize","actorActivations","anchored","endActivation","lastActorActivationIdx","activation","lastIndexOf","createLoop","newLoop","endLoop","pop","addSectionToLoop","loop","sectionTitles","getVerticalPos","bumpVerticalPos","bump","getBounds","drawActors","actorKeys","configuration","newActors","actorKey","has","prevWidth","prevMargin","margin","drawActorsPopup","minMenuWidth","getRequiredPopupWidth","menuDimensions","activationBounds","actorObj","adjustLoopHeightForWrap","loopWidths","preMargin","postMargin","addLoopFn","heightAdjust","loopWidth","textConf","textDims","totalOffset","maxMessageWidthPerActor","getMaxMessageWidthPerActor","calculateActorMargins","calculateLoopBounds","messagesToDraw","rectElem","textObj","anchor","textMargin","valign","textElem","round","curr","drawNote","activationData","activeEnd","lineStarty","fromBounds","toBounds","boundMessage","messageModel","drawMessage","fixLifeLineHeights","requiredBoxSize","box","boxHeight","boxWidth","extraVertForTitle","isNote","isMessage","textFont","wrappedMessage","messageWidth","requiredPopupWidth","labelWidth","actorToMessageWidth","prop","actDims","actorWidth","current","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","toAdd","enabled","shouldWrap","textDimensions","buildNoteModel","stk","fromIdx","toIdx","allBounds","boundedWidth","msgDims","buildMessageModel","actorBorder","actorBkg","actorTextColor","actorLineColor","signalColor","sequenceNumberColor","signalTextColor","labelBoxBorderColor","labelBoxBkgColor","labelTextColor","loopTextColor","noteBorderColor","noteBkgColor","noteTextColor","activationBkgColor","activationBorderColor","drawRect","addPopupInteraction","addFunction","popupMenuUpFunc","popupMenuDownFunc","drawPopup","textAttrs","displayValue","actorClass","menuWidth","linkY","linkElem","sanitizedLink","_drawMenuItemTextCandidateFunc","drawImage","imageElem","drawEmbeddedImage","popupMenu","popid","popdownMenu","popupId","pu","display","textData","prevTextHeight","textElems","yfunc","dominantBaseline","alignmentBaseline","span","drawLabel","txtObject","cut","drawActor","center","actElem","getNoteRect","_drawTextCandidateFunc","drawActorTypeActor","boxpluslineGroup","cssclass","iconSrc","drawActorTypeParticipant","anchorElement","drawActivation","drawLoop","drawLoopLine","getTextObj","sectionHeight","drawBackgroundRect","lower","insertDatabaseIcon","insertComputerIcon","insertClockIcon","insertArrowHead","insertArrowFilledHead","insertSequenceNumber","insertArrowCrossHead","byText","content","_setTextAttrs","byTspan","byFo","toText","fromTextAttrsDict","set","get","size","drawStartState","drawDivider","drawSimpleState","stateDef","drawDescrState","descriptions","isSecond","descrLine","descrBox","addTitleAndBox","altBkg","pad","dblPad","orgBox","orgWidth","orgX","titleWidth","graphBox","nText","_text","tHeight","_iterator","_drawLongText","drawState","stateInfo","drawEndState","parentId","tmp","drawForkJoinState","stateBox","stateDb","titleRows","boundstmp","heightAdj","rootDoc","docTranslator","first","currentDoc","newNode","generateId","docNode","documents","states","currentDocument","startCnt","addState","addDescription","des","getState","getStates","logDocuments","_id1","_id2","_descr","theState","dividerCnt","getDividerId","getRootDoc","setRootDoc","getRootDocV2","extract","trimColon","nodeDb","setupNode","altFlag","getDir","nodeData","noteData","groupData","arrowType","setupDoc","startId","endId","defaultDir","transformationLog","renderDoc","svgWidth","domDocument","edgeFreeDoc","ranker","nodeSep","sub","boxBounds","noteDef","nodeCount","svgElem","pWidth","pShift","getAttribute","transitionColor","stateLabelColor","background","labelBackgroundColor","transitionLabelColor","tertiaryTextColor","specialStateColor","innerEndBackground","compositeBackground","stateBkg","stateBorder","compositeTitleBackground","altBackground","allItemsProcessed","taskData","pieces","score","peeps","peopleList","people","tempActors","_toConsumableArray","updateActors","journeyDb","LEFT_MARGIN","actorNames","actorPos","actorName","person","colour","circleData","labelData","drawActorLegend","drawTasks","fills","textColours","lastSection","taskPos","sectionNumber","taskActors","faceColor","fillType0","fillType1","fillType2","fillType3","fillType4","fillType5","fillType6","fillType7","actor0","actor1","actor2","actor3","actor4","actor5","drawFace","faceData","circleElement","face","d3arc","startAngle","PI","endAngle","smile","sad","ambivalent","drawCircle","labelMargin","drawSection","taskCount","drawTask","initGraphics","graphics","interactionFunctions","func","attachFunctions","f","LEVELS","debug","warn","fatal","setLogLevel","bind","time","initThrowsErrors","callback","mermaid","sequenceConfig","Node","ganttConfig","idGeneratior","svgCode","contentLoaded","initialize","encodeEntities","innerTxt","currentDirective","handleDirective","directiveSanitizer","updateRendererConfigs","flowRenderer","flowRendererV2","sequenceRenderer","ganttRenderer","classRenderer","stateRenderer","stateRendererV2","infoRenderer","erRenderer","journeyRenderer","requirementRenderer","errorRenderer","reinitialize","_txt","cb","container","graphInit","iframe","existingSvg","remove","graphType","userStyles","altFontFamily","selector","getStyles","serialize","compile","style1","gitGraphRenderer","sequenceDiagram","classRendererV2","pkg","pieRenderer","svgEl","viewBox","btoa","ADD_TAGS","ADD_ATTR","tmpElementSelector","gitGraphAst","flowParser","sequenceParser","ganttParser","classParser","stateParser","infoDb","pieDb","journeyParser","requirementParser","globalReset","themes","classDiagram","stateDiagram","calcThemeVariables","userOverRides","calcColors","errorBkgColor","errorTextColor","base","baseThemeVariables","dark","darkThemeVariables","default","defaultThemeVariables","forest","forestThemeVariables","neutral","neutralThemeVariables","Theme","_classCallCheck","primaryTextColor","secondaryColor","adjust","primaryBorderColor","mkBorder","secondaryBorderColor","tertiaryBorderColor","secondaryTextColor","invert","nodeBkg","defaultLinkColor","darken","lighten","taskTextLightColor","compositeBorder","git0","git1","git2","git3","git4","git5","git6","git7","gitInv0","gitInv1","gitInv2","gitInv3","gitInv4","gitInv5","gitInv6","gitInv7","branchLabelColor","gitBranchLabel0","gitBranchLabel1","gitBranchLabel2","gitBranchLabel3","gitBranchLabel4","gitBranchLabel5","gitBranchLabel6","gitBranchLabel7","tagBorder","overrides","_this","updateColors","userOverrides","calculate","secondBkg","mainContrastColor","darkTextColor","border1","rgba","labelBackground","labelColor","col","contrast","critical","decoder","d3CurveTypes","curveBasisClosed","curveBasisOpen","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","directiveWithoutOpen","anyComment","detectInit","inits","detectDirective","results","detectType","commentWithoutDirectives","source","lastIndex","memoize","resolver","cache","isSubstringInArray","defaultCurve","curveName","toUpperCase","formatUrl","runFunc","arrPaths","fnName","params","distance","pow","characters","charactersLength","floor","makeid","clobber","drawSimpleText","wrapLabel","joinWith","words","completedLines","nextLine","wordLength","calculateTextWidth","nextLineLength","breakString","hyphenatedStrings","remainingWord","Boolean","hyphenCharacter","currentLine","character","currentCharacter","isLastLine","hyphenatedNextLine","calculateTextHeight","calculateTextDimensions","fontFamilies","dims","cheight","calculateSvgSizeAttrs","attrs","Map","d3Elem","_iterator2","d3Attrs","initIdGeneratior","deterministic","seed","_createClass","now","entityDecode","escape","unescape","arg","sanitizeCss","calcLabelPosition","prevPoint","totalDistance","remainingDistance","vectorDistance","distanceRatio","traverseEdge","calcCardinalityPosition","isRelationTypePresent","initialPosition","angle","atan2","cardinalityPosition","sin","cos","calcTerminalLabelPosition","terminalMarkerSize","assertPath","normalizeStringPosix","allowAboveRoot","code","lastSegmentLength","lastSlash","posix","resolve","resolvedAbsolute","cwd","resolvedPath","normalize","isAbsolute","joined","relative","fromStart","toStart","lastCommonSep","fromEnd","_makeLong","dirname","matchedSlash","basename","firstNonSlashEnd","extIdx","extname","startDot","preDotState","startPart","pathObject","ext","ret","delimiter","win32","__webpack_module_cache__","moduleId","loaded","__webpack_modules__","getter","enumerable","nmd","__webpack_exports__"],"sourceRoot":""}